<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>周艳伟</title>
  
  <subtitle>Zyw Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zhouyanwei.cn/"/>
  <updated>2018-10-19T08:50:52.638Z</updated>
  <id>http://zhouyanwei.cn/</id>
  
  <author>
    <name>Zyw</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>var() AND mask</title>
    <link href="http://zhouyanwei.cn/2018/10/19/cssstudy/"/>
    <id>http://zhouyanwei.cn/2018/10/19/cssstudy/</id>
    <published>2018-10-18T16:00:00.000Z</published>
    <updated>2018-10-19T08:50:52.638Z</updated>
    
    <content type="html"><![CDATA[<p>空闲时间看到俩CSS，var()、mask 没遇到过，比较好奇，学习一下。</p><a id="more"></a><h1 id="CSS变量var-语法"><a href="#CSS变量var-语法" class="headerlink" title="CSS变量var()语法"></a>CSS变量var()语法</h1><p>上来先看看是怎么写的，我就是被这惊奇的写法吸引到了。</p><p></p><p data-height="265" data-theme-id="0" data-slug-hash="EdLmJj" data-default-tab="css,result" data-user="zywkuo" data-pen-title="var()" class="codepen">See the Pen <a href="https://codepen.io/zywkuo/pen/EdLmJj/" target="_blank" rel="noopener">var()</a> by 周艳伟 (<a href="https://codepen.io/zywkuo" target="_blank" rel="noopener">@zywkuo</a>) on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</p><p></p><script async src="https://static.codepen.io/assets/embed/ei.js"></script><p>var 哇 css怎么用到了var，什么鬼。</p><p>原来这是css原生的变量，CSS中原生的变量定义语法是：–<em>，变量使用语法是：var(–</em>)，其中*表示我们的变量名称。关于命名这个东西，各种语言都有些显示，例如CSS选择器不能是数字开头，JS中的变量是不能直接数值的，但是，在CSS变量中，这些限制通通没有</p><p>但是，不能包含$，[，^，(，%等字符，普通字符局限在只要是“数字[0-9]”“字母[a-zA-Z]”“下划线_”和“短横线-”这些组合，但是可以是中文，日文或者韩文。</p><p>看一下兼容性 <img src="/images/2018-10-19/1.png" alt=""></p><p>我们广大的猿友们，努努力吧IE干掉吧。</p><p>有想了解更多的，请来张鑫旭，张大大空间，看看他的这篇文章<a href="https://www.zhangxinxu.com/wordpress/2016/11/css-css3-variables-var/" target="_blank" rel="noopener">https://www.zhangxinxu.com/wordpress/2016/11/css-css3-variables-var/</a></p><p> <code>声明一下，上面和下面一点关系都没有，只是同时看到了，就一起学习一下。</code></p><h1 id="mask"><a href="#mask" class="headerlink" title="mask"></a>mask</h1><p>遮罩mask的功能就是使用透明的图片或渐变遮罩元素的背景.<br>我用我的大白话理解一下，就是把图片的透明处变为不透明，不透明的地方变成透明。（如有错误，欢迎指正。）所以jpg的还是就算了吧，放了也是全透明，没什么效果，开始我放了jpg的，找了半天原因。</p><p>遮罩mask是一个复合属性</p><ul><li>mask-image</li><li>mask-mode</li><li>mask-repeat</li><li>mask-position</li><li>mask-clip</li><li>mask-origin</li><li>mask-size</li><li>mask-type</li><li>mask-composite</li></ul><h2 id="mask-image"><a href="#mask-image" class="headerlink" title="mask-image"></a>mask-image</h2><p>默认值为none，值为透明图片，或透明渐变<br>mask-image遮罩所支持的图片类型非常的广泛，可以是url()静态图片资源，格式包括JPG，PNG以及SVG等都是支持的；也可以是动态生成的图片，例如使用各种CSS3渐变绘制的图片。语法上支持CSS3各类渐变，以及url()功能符，image()功能符，甚至element()功能符。同时还支持多背景，因此理论上，使用mask-image我们可以遮罩出任意我们想要的图形，非常强大。</p><p>html</p><pre><code class="bash">&lt;img src=<span class="string">"1.jpg"</span> alt=<span class="string">""</span> class=<span class="string">"mask"</span>&gt;</code></pre><p>1.jpg图片是这个<br><img src="/images/2018-10-19/2.png" alt=""></p><p>放上这段css</p><pre><code class="bash">.mask {    width: 600px;    -webkit-mask-image: url(3.svg);    mask-image: url(3.svg);}</code></pre><p>3.svg长这样<br><img src="/images/2018-10-19/3.png" alt=""></p><p>运行结果这样<br><img src="/images/2018-10-19/4.png" alt=""></p><h2 id="mask-repeat"><a href="#mask-repeat" class="headerlink" title="mask-repeat"></a>mask-repeat</h2><p>mask-repeat属性的默认值是repeat，行为类似于background-repeat属性。</p><p>属性</p><pre><code class="bash">mask-repeat: repeat-x;      //水平x平铺mask-repeat: repeat-y;      //垂直y平铺。mask-repeat: repeat;        //默认值，水平和垂直平铺。mask-repeat: no-repeat;     //不平铺mask-repeat: space;         //表示遮罩图片尽可能的平铺同时不发生任何剪裁。mask-repeat: round;         //表示遮罩图片尽可能靠在一起没有任何间隙，同时不发生任何剪裁。</code></pre><p><img src="/images/2018-10-19/5.png" alt=""></p><h2 id="mask-position"><a href="#mask-position" class="headerlink" title="mask-position"></a>mask-position</h2><p>mask-position和background-position支持的属性值和表现基本上都是一模一样的。<br>例如,mask-position默认计算值是0% 0%，也就是相对左上角定位。</p><p>支持单个关键字（缺省关键字的解析为center）：</p><pre><code class="bash">mask-position: top;mask-position: bottom;mask-position: left;mask-position: right;mask-position: center;</code></pre><p>支持垂直和水平方向两个关键字：</p><pre><code class="bash">mask-position: right top;</code></pre><p>支持各类数值：</p><pre><code class="bash">mask-position: 30% 50%;&lt;mask-position: 10px 5rem;</code></pre><p>由于mask-image支持多遮罩图片，因此，mask-position也支持多属性值，例如：</p><pre><code class="bash">mask-position: 0 0, center;</code></pre><p>这个我就不具体上图片了，想必大家都懂了。<br>想看的请跳到张大大这里看一下吧，<a href="https://www.zhangxinxu.com/study/201711/mask-position-png.html" target="_blank" rel="noopener">https://www.zhangxinxu.com/study/201711/mask-position-png.html</a></p><h2 id="mask-clip"><a href="#mask-clip" class="headerlink" title="mask-clip"></a>mask-clip</h2><p>mask-clip属性性质上和background-clip类似，但是mask-clip支持的属性值要多一点，主要是多了个SVG元素的mask-clip支持。</p><p>属性值</p><pre><code class="bash">mask-clip: content-box;mask-clip: padding-box;mask-clip: border-box;mask-clip: fill-box;mask-clip: stroke-box;mask-clip: view-box;mask-clip: no-clip;</code></pre><p>其中默认值是border-box和background-clip类似。同样也支持多属性值：</p><pre><code class="bash">mask-clip: content-box, border-box;</code></pre><p>谷歌测试了一下，全员out！！！！！！晕<br>火狐也全员out，什么鬼，难道和笔记本有关（我的是mac）..这个还有待测试。</p><h2 id="mask-origin"><a href="#mask-origin" class="headerlink" title="mask-origin"></a>mask-origin</h2><p>属性值</p><pre><code class="bash">mask-origin: content-box;mask-origin: padding-box;mask-origin: border-box;mask-origin: fill-box;mask-origin: stroke-box;mask-origin: view-box;</code></pre><p>其中默认值是border-box和background-origin类似。同样也支持多属性值：</p><pre><code class="bash">mask-origin: content-box, border-box;</code></pre><p>测试结果依旧全员out!!!!!!</p><h2 id="mask-size"><a href="#mask-size" class="headerlink" title="mask-size"></a>mask-size</h2><p>mask-size属性性质上和background-size类似，支持的属性值也类似，作用是控制遮罩图片尺寸。</p><p>默认值是auto.</p><p>属性值</p><pre><code class="bash">mask-size: cover;mask-size: contain;</code></pre><p>支持各类数值（缺省高度会自动计算为auto）：</p><pre><code class="bash">mask-size: 50%;mask-size: 3em;mask-size: 12px;mask-size: 50% auto;mask-size: 3em 25%;mask-size: auto 6px;</code></pre><p>同样支持多属性值：</p><pre><code class="bash">mask-size: 50%, 25%, 25%;mask-size: 6px, auto, contain;</code></pre><p><img src="/images/2018-10-19/6.png" alt=""></p><h2 id="mask-type"><a href="#mask-type" class="headerlink" title="mask-type"></a>mask-type</h2><p>mask-type属性功能上和mask-mode类似，都是设置不同的遮罩模式。但还是有个很大的区别，那就是mask-type只能作用在SVG元素上，本质上是由SVG属性演变而来，因此，Chrome等浏览器都是支持的。但是mask-mode是一个针对所有元素的CSS3属性，Chrome等浏览器并不支持，目前仅Firefox浏览器支持。</p><p>由于只能作用在SVG元素上，因此默认值表现为SVG元素默认遮罩模式，也就是默认值是luminance，亮度遮罩模式。如果需要支持透明度遮罩模式，可以这么设置：</p><pre><code class="bash">mask-type: alpha;</code></pre><h2 id="mask-composite"><a href="#mask-composite" class="headerlink" title="mask-composite"></a>mask-composite</h2><p>mask-composite表示当同时使用多个图片进行遮罩时候的混合方式</p><p>属性值</p><pre><code class="bash">mask-composite: add;            //遮罩累加。mask-composite: subtract;       //遮罩相减。也就是遮罩图片重合的地方不显示。意味着遮罩图片越多，遮罩区域越小。mask-composite: intersect;      //遮罩相交。也就是遮罩图片重合的地方才显示遮罩。mask-composite: exclude;        //遮罩排除。也就是后面遮罩图片重合的地方排除，当作透明处理。</code></pre><p>这个属性浏览器支持也不是很好。。。</p><h2 id="mask-mode"><a href="#mask-mode" class="headerlink" title="mask-mode"></a>mask-mode</h2><p>默认值为match-source，意思是根据资源的类型自动采用合适的遮罩模式。</p><p>mask-mode支持下面3个属性值：</p><pre><code class="bash">.mask {    mask-mode: alpha;    mask-mode: luminance;    mask-mode: match-source;}</code></pre><p>因为mask-image支持多图片，因此mask-mode也支持多属性值，例如：</p><p>mask-mode: alpha, match-source;</p><p>这个属性浏览器支持效果还不是很好。</p><p>看一下浏览器兼容性吧。</p><p><img src="/images/2018-10-19/7.png" alt=""></p><p>虽然支持还不是很好，但是好东西不怕晚，欢迎指正。</p><p>学习的是张鑫旭，张大大的这篇文章<a href="https://www.zhangxinxu.com/wordpress/2016/11/css-css3-variables-var/" target="_blank" rel="noopener">https://www.zhangxinxu.com/wordpress/2016/11/css-css3-variables-var/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;空闲时间看到俩CSS，var()、mask 没遇到过，比较好奇，学习一下。&lt;/p&gt;
    
    </summary>
    
      <category term="css" scheme="http://zhouyanwei.cn/categories/css/"/>
    
    
      <category term="var" scheme="http://zhouyanwei.cn/tags/var/"/>
    
      <category term="mask" scheme="http://zhouyanwei.cn/tags/mask/"/>
    
  </entry>
  
  <entry>
    <title>CSS 网格布局(Grid Layout)</title>
    <link href="http://zhouyanwei.cn/2018/10/17/grid/"/>
    <id>http://zhouyanwei.cn/2018/10/17/grid/</id>
    <published>2018-10-16T16:00:00.000Z</published>
    <updated>2018-10-17T07:35:53.637Z</updated>
    
    <content type="html"><![CDATA[<p>CSS 网格布局(Grid Layout) 是CSS中最强大的布局系统。 这是一个二维系统，这意味着它可以同时处理列和行，不像 flexbox 那样主要是一维系统。 你可以通过将CSS规则应用于父元素（成为网格容器）和该元素的子元素（网格元素），来使用网格布局。</p><a id="more"></a><h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>CSS网格布局（又名“网格”）是一个二维的基于网格的布局系统，其目的只在于完全改变我们设计基于网格的用户界面的方式。 CSS一直用来布局网页，但一直都不完美。 一开始我们使用table 做布局，然后转向浮动、定位以及inline-block，但所有这些方法本质上都是 Hack 的方式，并且遗漏了很多重要的功能（例如垂直居中）。 Flexbox的出现在一定程度上解决了这个问题，但是它的目的是为了更简单的一维布局，而不是复杂的二维布局（Flexbox和Grid实际上一起工作得很好）。 只要我们一直在制作网站，我们就一直在为解决布局问题不断探索，<br>而Grid是第一个专门为解决布局问题而生的CSS模块。</p><p>有两个东西，启发我写这篇指南。 第一个是雷切尔·安德鲁（Rachel Andrew）的书为CSS Grid布局准备。 这本书对网格布局做了彻底、清晰的介绍，也是是整篇文章的基础，我强烈建议你购买并阅读他的书。 我的另一个重要灵感是Chris Coyier的Flexbox完全指南，当需要查阅 flexbox 的一切资料时我就会找这篇文章。 这篇文章帮助了很多人学习 Flex 布局，也是 Google 上搜索“flexbox”关键字排名第一的文章。你会发现他的文章和我的很多相似之处，有最好的范例在那放着为什么咱不偷师学着写呢？</p><p>本指南的目的是介绍网格概念，因为它们存在于最新版本的规范中。 因此我不会覆盖过时的IE语法，而且随着规范的成熟，我会尽最大努力保存更新本指南。</p><h1 id="基础知识以及浏览器支持情况"><a href="#基础知识以及浏览器支持情况" class="headerlink" title="基础知识以及浏览器支持情况"></a>基础知识以及浏览器支持情况</h1><p>一开始你需要使用display：grid把容器元素定义为一个网格，使用grid-template-columns和grid-template-rows设置列和行大小，然后使用grid-column 和 grid-row把它的子元素放入网格。 与flexbox类似，网格子元素的原始顺序不重要。 你的可以在 CSS 里以任意顺序放置它们，这使得使用媒体查询重新排列网格变得非常容易。 想象一下，我们需要定义整个页面的布局，然后为了适应不同的屏幕宽度完全重新排列，我们只需要几行CSS就能实现这个需求。 网格是有史以来最强大的CSS模块之一。</p><p>截至2017年3月，许多浏览器都提供了原生的、不加前缀的对CSS Grid的支持，比如 Chrome（包括Android），Firefox，Safari（包括iOS）和Opera。 另一方面，Internet Explorer 10和11支持它，但需要使用过时的语法。 Edge浏览器已经宣布将支持标准的Grid语法，但暂未支持。</p><p>浏览器支持的详细数据可在<a href="http://caniuse.com/#feat=css-grid" target="_blank" rel="noopener">Caniuse</a>查看。其中里面的数字表示该版本以上的浏览器支持Grid。</p><h2 id="桌面浏览器"><a href="#桌面浏览器" class="headerlink" title="桌面浏览器"></a>桌面浏览器</h2><pre><code class="bash">Chrome        Opera        Firefox        IE        Edge    Safari57            44            52            11*        16        10.1</code></pre><h2 id="移动端-平板"><a href="#移动端-平板" class="headerlink" title="移动端 / 平板"></a>移动端 / 平板</h2><pre><code class="bash">iOS Safari        Opera Mobile    Opera Mini    Android        Android Chrome        Android Firefox10.3            No                No            62            62                    57</code></pre><p>除了微软之外，浏览器制造商在 Grid 规范完全落地以前似乎并没有放手让 Gird 野生也长的打算。 这是一件好事，这意味着我们不需要再去学习各种浏览器兼容版本的旧语法。</p><p>在生产环境中使用Grid只是时间问题，但现在是我们该学习的时候了。</p><h1 id="重要术语"><a href="#重要术语" class="headerlink" title="重要术语"></a>重要术语</h1><p>在深入了解网格的概念之前，理解术语是很重要的。 由于这里所涉及的术语在概念上都是相似的，如果不先记住它们在网格规范中定义的含义，则很容易将它们彼此混淆。 但是不用太担心，这些术语并不多。</p><h2 id="Grid-Container"><a href="#Grid-Container" class="headerlink" title="Grid Container"></a>Grid Container</h2><p>设置了 display: gird 的元素。 这是所有 grid item 的直接父项。 在下面的例子中，.container 就是是 grid container。</p><pre><code class="bash">&lt;div class=<span class="string">"container"</span>&gt;  &lt;div class=<span class="string">"item item-1"</span>&gt;&lt;/div&gt;  &lt;div class=<span class="string">"item item-2"</span>&gt;&lt;/div&gt;  &lt;div class=<span class="string">"item item-3"</span>&gt;&lt;/div&gt;&lt;/div&gt;</code></pre><h2 id="Grid-Item"><a href="#Grid-Item" class="headerlink" title="Grid Item"></a>Grid Item</h2><p>Grid 容器的孩子（直接子元素）。下面的 .item 元素就是 grid item，但 .sub-item不是。</p><pre><code class="bash">&lt;div class=<span class="string">"container"</span>&gt;  &lt;div class=<span class="string">"item"</span>&gt;&lt;/div&gt;   &lt;div class=<span class="string">"item"</span>&gt;    &lt;p class=<span class="string">"sub-item"</span>&gt;&lt;/p&gt;  &lt;/div&gt;  &lt;div class=<span class="string">"item"</span>&gt;&lt;/div&gt;&lt;/div&gt;</code></pre><h2 id="Grid-Line"><a href="#Grid-Line" class="headerlink" title="Grid Line"></a>Grid Line</h2><p>这个分界线组成网格结构。 它们既可以是垂直的（“column grid lines”），也可以是水平的（“row grid lines”），并位于行或列的任一侧。 下面例中的黄线就是一个列网格线。<br><img src="/images/2018-10-17/grid1.jpg" alt=""></p><h2 id="Grid-Track"><a href="#Grid-Track" class="headerlink" title="Grid Track"></a>Grid Track</h2><p>两个相邻网格线之间的空间。 你可以把它们想象成网格的列或行。 下面是第二行和第三行网格线之间的网格轨道。<br><img src="/images/2018-10-17/grid2.jpg" alt=""></p><h2 id="Grid-Cell"><a href="#Grid-Cell" class="headerlink" title="Grid Cell"></a>Grid Cell</h2><p>两个相邻的行和两个相邻的列网格线之间的空间。它是网格的一个“单元”。 下面是行网格线1和2之间以及列网格线2和3的网格单元。<br><img src="/images/2018-10-17/grid3.jpg" alt=""></p><h2 id="Grid-Area"><a href="#Grid-Area" class="headerlink" title="Grid Area"></a>Grid Area</h2><p>四个网格线包围的总空间。 网格区域可以由任意数量的网格单元组成。 下面是行网格线1和3以及列网格线1和3之间的网格区域。<br><img src="/images/2018-10-17/grid4.jpg" alt=""></p><h1 id="Grid-属性列表"><a href="#Grid-属性列表" class="headerlink" title="Grid 属性列表"></a>Grid 属性列表</h1><h2 id="Grid-Container-的全部属性"><a href="#Grid-Container-的全部属性" class="headerlink" title="Grid Container 的全部属性"></a>Grid Container 的全部属性</h2><ul><li>display</li><li>grid-template-columns</li><li>grid-template-rows</li><li>grid-template-areas</li><li>grid-template</li><li>grid-column-gap</li><li>grid-row-gap</li><li>grid-gap</li><li>justify-items</li><li>align-items</li><li>justify-content</li><li>align-content</li><li>grid-auto-columns</li><li>grid-auto-rows</li><li>grid-auto-flow</li><li>grid</li></ul><h2 id="Grid-Items-的全部属性"><a href="#Grid-Items-的全部属性" class="headerlink" title="Grid Items 的全部属性"></a>Grid Items 的全部属性</h2><ul><li>grid-column-start</li><li>grid-column-end</li><li>grid-row-start</li><li>grid-row-end</li><li>grid-column</li><li>grid-row</li><li>grid-area</li><li>justify-self</li><li>align-self</li></ul><h1 id="父容器-Grid-Container-的属性"><a href="#父容器-Grid-Container-的属性" class="headerlink" title="父容器(Grid Container)的属性"></a>父容器(Grid Container)的属性</h1><h2 id="display"><a href="#display" class="headerlink" title="display"></a>display</h2><p>将元素定义为 grid contaienr，并为其内容建立新的网格格式化上下文(grid formatting context)。</p><p>值:<br>grid – 生成一个块级(block-level)网格(主要的还是使用这个属性,想要使用grid,就要先设置这个值)<br>inline-grid – 生成一个行级(inline-level)网格<br>subgrid – 如果你的 grid container 本身就是一个 grid item（即,嵌套网格），你可以使用这个属性来表示你想从它的父节点获取它的行/列的大小，而不是指定它自己的大小。</p><pre><code class="bash">.container {  display: grid | inline-grid | subgrid;}</code></pre><p>注意：column, float, clear, 以及 vertical-align 对一个 grid container 没有影响</p><h2 id="grid-template-columns-grid-template-rows"><a href="#grid-template-columns-grid-template-rows" class="headerlink" title="grid-template-columns / grid-template-rows"></a>grid-template-columns / grid-template-rows</h2><p>使用以空格分隔的多个值来定义网格的列和行。这些值表示轨道大小(track size)，它们之间的空格代表表格线(grid line)。</p><pre><code class="bash">.container {  grid-template-columns: &lt;track-size&gt; ... | &lt;line-name&gt; &lt;track-size&gt; ...;  grid-template-rows: &lt;track-size&gt; ... | &lt;line-name&gt; &lt;track-size&gt; ...;}</code></pre><p>例子:<br>(如果未显示的给网格线命名)，轨道值之间仅仅有空格时，网格线会被自动分配数字名称：</p><pre><code class="bash">.container {  grid-template-columns: 40px 50px auto 50px 40px;  grid-template-rows: 25% 100px auto;}</code></pre><p><img src="/images/2018-10-17/grid5.jpg" alt=""><br>但你可以给网格线指定确切的命名。 注意中括号里的网格线命名语法：</p><pre><code class="bash">.container {  grid-template-columns: [first] 40px [line2] 50px [line3] auto [col4-start] 50px [five] 40px [end];  grid-template-rows: [row1-start] 25% [row1-end] 100px [third-line] auto [last-line];}</code></pre><p><img src="/images/2018-10-17/grid6.jpg" alt=""><br>需要注意的是，一个网格线可以有不止一个名字。例如，这里第2条网格线有两个名字：row1-end 和 row2-start：</p><pre><code class="bash">.container {  grid-template-rows: [row1-start] 25% [row1-end row2-start] 25% [row2-end];}</code></pre><p>如果你的定义中包含重复的部分，则可以使用repeat() 符号来简化写法：</p><pre><code class="bash">.container {  grid-template-columns: repeat(3, 20px [col-start]) 5%;}</code></pre><p>上面的写法和下面等价：</p><pre><code class="bash">.container {  grid-template-columns: 20px [col-start] 20px [col-start] 20px [col-start] 5%;}</code></pre><p>“fr”单位允许您将轨道大小设置为网格容器自由空间的一部分。 例如，下面的代码会将每个 grid item 为 grid container 宽度的三分之一：</p><pre><code class="bash">.container {  grid-template-columns: 1fr 1fr 1fr;}</code></pre><p>自由空间是在排除所有不可伸缩的 grid item 之后计算得到的。 在下面的示例中，fr单位可用的自由空间总量不包括50px:</p><pre><code class="bash">.container {  grid-template-columns: 1fr 50px 1fr 1fr;}</code></pre><h2 id="grid-template-areas"><a href="#grid-template-areas" class="headerlink" title="grid-template-areas"></a>grid-template-areas</h2><p>通过引用 grid-area属性指定的网格区域的名称来定义网格模板。 重复网格区域的名称导致内容扩展到这些单元格。 点号表示一个空单元格。 语法本身提供了网格结构的可视化。</p><p>值：</p><p><grid-area-name> – 使用 grid-area 属性设置的网格区域的名称<br>. – 点号代表一个空网格单元<br>none – 没有定义网格区域<br>举例：</grid-area-name></p><pre><code class="bash">.item<span class="_">-a</span> {  grid-area: header;}.item-b {  grid-area: main;}.item-c {  grid-area: sidebar;}.item<span class="_">-d</span> {  grid-area: footer;}.container {  grid-template-columns: 50px 50px 50px 50px;  grid-template-rows: auto;  grid-template-areas:     <span class="string">"header header header header"</span>    <span class="string">"main main . sidebar"</span>    <span class="string">"footer footer footer footer"</span>;}</code></pre><p>这将创建一个四列宽三行高的网格。 整个第一行将由 header 区域组成。 中间一行将由两个 main 区域、一个空单元格和一个 sidebar 区域组成。 最后一行是footer区域组成。<br><img src="/images/2018-10-17/grid7.jpg" alt=""><br>你的声明中的每一行都需要有相同数量的单元格。</p><p>您可以使用任意数量的相邻的.来声明单个空单元格。 只要这些点号之间没有空格，他们就代表了一个单一的单元格。</p><p>需要注意的是你不是在用这个语法命名网格线，而是在命名区域。 当你使用这种语法时，区域两端的网格线实际上是自动命名的。 比如，如果网格区域的名称是foo，那么区域的起始的行网格线和列网格线名称是 foo-start，并且区域终点的行网格线和列网格线名称是 foo-end。 这意味着某些网格线可能有多个名称，比如上面的例子中最左边的一条网格线有三个名字：header-start，main-start 和 footer-start。</p><h2 id="grid-template"><a href="#grid-template" class="headerlink" title="grid-template"></a>grid-template</h2><p>在单个声明中定义 grid-template-rows、grid-template-columns、grid-template-areas 的简写。</p><p>值：</p><p>none – 将三个属性都设置为其初始值<br>subgrid – 把 grid-template-rows 和 grid-template-columns 设置为 subgrid, 并且 grid-template-areas 设置为初始值<br>grid-template-rows / &lt;grid-template-columns – 把 grid-template-columns 和 grid-template-rows 设置为指定值, 与此同时, 设置 grid-template-areas 为 none</p><pre><code class="bash">.container {  grid-template: none | subgrid | &lt;grid-template-rows&gt; / &lt;grid-template-columns&gt;;}</code></pre><p>它也可以使用一个更复杂但相当方便的语法来指定这三个值。 一个例子：</p><pre><code class="bash">.container {  grid-template:    [row1-start] <span class="string">"header header header"</span> 25px [row1-end]    [row2-start] <span class="string">"footer footer footer"</span> 25px [row2-end]    / auto 50px auto;}</code></pre><p>以上等价于：</p><pre><code class="bash">.container {  grid-template-rows: [row1-start] 25px [row1-end row2-start] 25px [row2-end];  grid-template-columns: auto 50px auto;  grid-template-areas:     <span class="string">"header header header"</span>     <span class="string">"footer footer footer"</span>;}</code></pre><p>由于 grid-template 不会重置隐式网格属性（grid-auto-columns，grid-auto-rows和grid-auto-flow），而这可能是大多数情况下你想要做的。因此建议使用grid属性来代替grid-template。</p><h2 id="grid-column-gap-grid-row-gap"><a href="#grid-column-gap-grid-row-gap" class="headerlink" title="grid-column-gap / grid-row-gap"></a>grid-column-gap / grid-row-gap</h2><p>指定网格线的大小，你可以把它想象为设置列/行之间的间距的宽度。</p><p>值：</p><p>line-size – 一个长度值</p><pre><code class="bash">.container {  grid-column-gap: &lt;line-size&gt;;  grid-row-gap: &lt;line-size&gt;;}</code></pre><p>举例：</p><pre><code class="bash">.container {  grid-template-columns: 100px 50px 100px;  grid-template-rows: 80px auto 80px;   grid-column-gap: 10px;  grid-row-gap: 15px;}</code></pre><p><img src="/images/2018-10-17/grid8.jpg" alt=""><br>只能在列/行之间创建缝隙，而不是在外部边缘创建。</p><h2 id="grid-gap"><a href="#grid-gap" class="headerlink" title="grid-gap"></a>grid-gap</h2><p>grid-row-gap 和 grid-column-gap 的缩写</p><pre><code class="bash">.container {  grid-gap: &lt;grid-row-gap&gt; &lt;grid-column-gap&gt;;}</code></pre><p>Example:</p><pre><code class="bash">.container {  grid-template-columns: 100px 50px 100px;  grid-template-rows: 80px auto 80px;   grid-gap: 10px 15px;}</code></pre><p>如果没有指定 grid-row-gap，则会被设置为与 grid-column-gap 相同的值。</p><h2 id="justify-items"><a href="#justify-items" class="headerlink" title="justify-items"></a>justify-items</h2><p>沿着行轴对齐网格内的内容（与之对应的是 align-items, 即沿着列轴对齐），该值适用于容器内的所有的 grid items。</p><p>值：</p><p>start: 内容与网格区域的左端对齐<br>end: 内容与网格区域的右端对齐<br>center: 内容位于网格区域的中间位置<br>stretch: 内容宽度占据整个网格区域空间(这是默认值)</p><pre><code class="bash">.container {  justify-items: start | end | center | stretch;}</code></pre><p>举例：</p><pre><code class="bash">.container {  justify-items: start;}</code></pre><p><img src="/images/2018-10-17/grid9.jpg" alt=""></p><pre><code class="bash">.container{  justify-items: end;}</code></pre><p><img src="/images/2018-10-17/grid10.jpg" alt=""></p><pre><code class="bash">.container {  justify-items: center;}</code></pre><p><img src="/images/2018-10-17/grid11.jpg" alt=""></p><pre><code class="bash">.container {  justify-items: stretch;}</code></pre><p><img src="/images/2018-10-17/grid12.jpg" alt=""><br>也可以通过给单个 grid item 设置justify-self属性来达到上述效果。</p><h2 id="align-items"><a href="#align-items" class="headerlink" title="align-items"></a>align-items</h2><p>沿着列轴对齐grid item 里的内容（与之对应的是使用 justify-items 设置沿着行轴对齐），该值适用于容器内的所有 grid items。</p><p>值：</p><p>start: 内容与网格区域的顶端对齐<br>end: 内容与网格区域的底部对齐<br>center: 内容位于网格区域的垂直中心位置<br>stretch: 内容高度占据整个网格区域空间(这是默认值)</p><pre><code class="bash">.container {  align-items: start | end | center | stretch;}</code></pre><p>举例:</p><pre><code class="bash">.container {  align-items: start;}</code></pre><p><img src="/images/2018-10-17/grid13.jpg" alt=""></p><pre><code class="bash">.container {  align-items: end;}</code></pre><p><img src="/images/2018-10-17/grid14.jpg" alt=""></p><pre><code class="bash">.container {  align-items: center;}</code></pre><p><img src="/images/2018-10-17/grid15.jpg" alt=""></p><pre><code class="bash">.container {  align-items: stretch;}</code></pre><p><img src="/images/2018-10-17/grid16.jpg" alt=""><br>也可以通过给单个 grid item 设置align-self属性来达到上述效果。</p><h2 id="justify-content"><a href="#justify-content" class="headerlink" title="justify-content"></a>justify-content</h2><p>有时，网格的总大小可能小于其网格容器的大小。如果你的所有 grid items 都使用像px这样的非弹性单位来设置大小，则可能发生这种情况。此时，你可以设置网格容器内的网格的对齐方式。 此属性沿着行轴对齐网格（与之对应的是 align-content, 沿着列轴对齐）。</p><p>值：</p><p>start – 网格与网格容器的左边对齐<br>end – 网格与网格容器的右边对齐<br>center – 网格与网格容器的中间对齐<br>stretch – 调整g rid item 的大小，让宽度填充整个网格容器<br>space-around – 在 grid item 之间设置均等宽度的空白间隙，其外边缘间隙大小为中间空白间隙宽度的一半<br>space-between – 在 grid item 之间设置均等宽度空白间隙，其外边缘无间隙<br>space-evenly – 在每个 grid item 之间设置均等宽度的空白间隙，包括外边缘</p><pre><code class="bash">.container {  justify-content: start | end | center | stretch | space-around | space-between | space-evenly;  }</code></pre><p>举例：</p><pre><code class="bash">.container {  justify-content: start;}</code></pre><p><img src="/images/2018-10-17/grid17.jpg" alt=""></p><pre><code class="bash">.container {  justify-content: end; }</code></pre><p><img src="/images/2018-10-17/grid18.jpg" alt=""></p><pre><code class="bash">.container {  justify-content: center;  }</code></pre><p><img src="/images/2018-10-17/grid19.jpg" alt=""></p><pre><code class="bash">.container {  justify-content: stretch; }</code></pre><p><img src="/images/2018-10-17/grid20.jpg" alt=""></p><pre><code class="bash">.container {  justify-content: space-around;  }</code></pre><p><img src="/images/2018-10-17/grid21.jpg" alt=""></p><pre><code class="bash">.container {  justify-content: space-between; }</code></pre><p><img src="/images/2018-10-17/grid22.jpg" alt=""></p><pre><code class="bash">.container {  justify-content: space-evenly;  }</code></pre><p><img src="/images/2018-10-17/grid23.jpg" alt=""></p><h2 id="align-content"><a href="#align-content" class="headerlink" title="align-content"></a>align-content</h2><p>有时，网格的总大小可能小于其网格容器的大小。如果你的所有 grid items 都使用像px这样的非弹性单位来设置大小，则可能发生这种情况。此时，你可以设置网格容器内的网格的对齐方式。 此属性沿着列轴对齐网格（与之对应的是 justify-content, 即沿着行轴对齐）。</p><p>值：</p><p>start – 网格与网格容器的顶部对齐<br>end – 网格与网格容器的底部对齐<br>center – 网格与网格容器的中间对齐<br>stretch – 调整 grid item 的大小，让高度填充整个网格容器<br>space-around – 在 grid item 之间设置均等宽度的空白间隙，其外边缘间隙大小为中间空白间隙宽度的一半<br>space-between – 在 grid item 之间设置均等宽度空白间隙，其外边缘无间隙<br>space-evenly – 在每个 grid item 之间设置均等宽度的空白间隙，包括外边缘</p><pre><code class="bash">.container {  align-content: start | end | center | stretch | space-around | space-between | space-evenly;  }</code></pre><p>举例：</p><pre><code class="bash">.container {  align-content: start; }</code></pre><p><img src="/images/2018-10-17/grid24.jpg" alt=""></p><pre><code class="bash">.container {  align-content: end; }</code></pre><p><img src="/images/2018-10-17/grid25.jpg" alt=""></p><pre><code class="bash">.container {  align-content: center;  }</code></pre><p><img src="/images/2018-10-17/grid26.jpg" alt=""></p><pre><code class="bash">.container {  align-content: stretch; }</code></pre><p><img src="/images/2018-10-17/grid27.jpg" alt=""></p><pre><code class="bash">.container {  align-content: space-around;  }</code></pre><p><img src="/images/2018-10-17/grid28.jpg" alt=""></p><pre><code class="bash">.container {  align-content: space-between; }</code></pre><p><img src="/images/2018-10-17/grid29.jpg" alt=""></p><pre><code class="bash">.container {  align-content: space-evenly;  }</code></pre><p><img src="/images/2018-10-17/grid30.jpg" alt=""></p><h2 id="grid-auto-columns-grid-auto-rows"><a href="#grid-auto-columns-grid-auto-rows" class="headerlink" title="grid-auto-columns / grid-auto-rows"></a>grid-auto-columns / grid-auto-rows</h2><p>指定自动生成的网格轨道（又名隐式网格轨道）的大小。 隐式网格轨道在你显式的定位超出指定网格范围的行或列（使用 grid-template-rows/grid-template-columns）时被创建。</p><p>值：</p><p><track-size> – 可以是一个长度值，一个百分比值，或者一个自由空间的一部分（使用 fr 单位）</track-size></p><pre><code class="bash">.container {  grid-auto-columns: &lt;track-size&gt; ...;  grid-auto-rows: &lt;track-size&gt; ...;}</code></pre><p>为了说明如何创建隐式网格轨道，思考如下代码：</p><pre><code class="bash">.container {  grid-template-columns: 60px 60px;  grid-template-rows: 90px 90px}</code></pre><p><img src="/images/2018-10-17/grid31.jpg" alt=""></p><p>这里创建了一个 2×2的网格。</p><p>但是，现在想象一下，使用 grid-column 和 grid-row 来定位你的网格项目，如下所示：</p><pre><code class="bash">.item<span class="_">-a</span> {  grid-column: 1 / 2;  grid-row: 2 / 3;}.item-b {  grid-column: 5 / 6;  grid-row: 2 / 3;}</code></pre><p><img src="/images/2018-10-17/grid32.jpg" alt=""></p><p>这里我们指定 .item-b开始于列网格线 5 并结束于在列网格线 6，但我们并未定义列网格线 5 或 6。因为我们引用不存在的网格线，宽度为0的隐式轨道的就会被创建用与填补间隙。我们可以使用 grid-auto-columns 和 grid-auto-rows属性来指定这些隐式轨道的宽度：</p><pre><code class="bash">.container {  grid-auto-columns: 60px;}</code></pre><p><img src="/images/2018-10-17/grid33.jpg" alt=""></p><h2 id="grid-auto-flow"><a href="#grid-auto-flow" class="headerlink" title="grid-auto-flow"></a>grid-auto-flow</h2><p>如果你存在没有显示指明放置在网格上的 grid item，则自动放置算法会自动放置这些项目。 而该属性则用于控制自动布局算法的工作方式。</p><p>值：</p><p>row – 告诉自动布局算法依次填充每行，根据需要添加新行<br>column – 告诉自动布局算法依次填充每列，根据需要添加新列<br>dense – 告诉自动布局算法，如果后面出现较小的 grid item，则尝试在网格中填充空洞</p><pre><code class="bash">.container {  grid-auto-flow: row | column | row dense | column dense}</code></pre><p>需要注意的是，dense 可能导致您的 grid item 乱序。</p><p>举例， 考虑如下 HTML：</p><pre><code class="bash">&lt;section class=<span class="string">"container"</span>&gt;  &lt;div class=<span class="string">"item-a"</span>&gt;item<span class="_">-a</span>&lt;/div&gt;  &lt;div class=<span class="string">"item-b"</span>&gt;item-b&lt;/div&gt;  &lt;div class=<span class="string">"item-c"</span>&gt;item-c&lt;/div&gt;  &lt;div class=<span class="string">"item-d"</span>&gt;item<span class="_">-d</span>&lt;/div&gt;  &lt;div class=<span class="string">"item-e"</span>&gt;item<span class="_">-e</span>&lt;/div&gt;&lt;/section&gt;</code></pre><p>你定义一个有5列和2行的网格，并将 grid-auto-flow 设置为 row（这也是默认值）：</p><pre><code class="bash">.container {  display: grid;  grid-template-columns: 60px 60px 60px 60px 60px;  grid-template-rows: 30px 30px;  grid-auto-flow: row;}</code></pre><p>当把 grid item 放在网格上时，你只把其中两个设置了固定的位置：</p><pre><code class="bash">.item<span class="_">-a</span> {  grid-column: 1;  grid-row: 1 / 3;}.item<span class="_">-e</span> {  grid-column: 5;  grid-row: 1 / 3;}</code></pre><p>因为我们将 grid-auto-flow 设置为row，所以我们的grid就像这样。 注意观察我们没有做设置的三个项目（item-b，item-c和item-d）是如何在剩余的行水平摆放位置的：</p><p><img src="/images/2018-10-17/grid34.jpg" alt=""></p><p>如果我们将 grid-auto-flow 设置为 column，则 item-b，item-c 和 item-d 以列的顺序上下摆放：</p><pre><code class="bash">.container {  display: grid;  grid-template-columns: 60px 60px 60px 60px 60px;  grid-template-rows: 30px 30px;  grid-auto-flow: column;}</code></pre><p><img src="/images/2018-10-17/grid35.jpg" alt=""></p><h2 id="grid"><a href="#grid" class="headerlink" title="grid"></a>grid</h2><p>在单个属性中设置所有以下属性的简写：grid-template-rows，grid-template-columns，grid-template-areas，grid-auto-rows，grid-auto-columns和grid-auto-flow。 它同时也将 sets grid-column-gap 和 grid-row-gap 设置为它们的初始值，即使它们不能被此属性显示设置。</p><p>值：</p><p>none – 将所有子属性设置为其初始值</p><pre><code class="bash">&lt;grid-template-rows&gt; / &lt;grid-template-columns&gt; – 将 grid-template-rows 和 grid-template-columns 分别设置为指定值，将所有其他子属性设置为其初始值&lt;grid-auto-flow&gt; [&lt;grid-auto-rows&gt; [ / &lt;grid-auto-columns&gt;] ] – 接受所有与grid-auto-flow，grid-auto-rows和grid-auto-columns相同的值。 如果省略grid-auto-columns，则将其设置为为grid-auto-rows指定的值。 </code></pre><p>如果两者都被省略，则它们被设置为它们的初始值</p><pre><code class="bash">.container {    grid: none | &lt;grid-template-rows&gt; / &lt;grid-template-columns&gt; | &lt;grid-auto-flow&gt; [&lt;grid-auto-rows&gt; [/ &lt;grid-auto-columns&gt;]];}</code></pre><p>举例：</p><p>以下代码写法等价</p><pre><code class="bash">.container {  grid: 200px auto / 1fr auto 1fr;}.container {  grid-template-rows: 200px auto;  grid-template-columns: 1fr auto 1fr;  grid-template-areas: none;}</code></pre><p>以下代码写法等价</p><pre><code class="bash">.container {  grid: column 1fr / auto;}.container {  grid-auto-flow: column;  grid-auto-rows: 1fr;  grid-auto-columns: auto;}</code></pre><p>它也可用使用一个更复杂但相当方便的语法来一次设置所有内容。 你可以指定 grid-template-areas、grid-template-rows 以及 grid-template-columns，并将所有其他子属性设置为其初始值。 你现在所做的是在其网格区域内，指定网格线名称和内联轨道大小。 可以看下面的例子：</p><pre><code class="bash">.container {  grid: [row1-start] <span class="string">"header header header"</span> 1fr [row1-end]        [row2-start] <span class="string">"footer footer footer"</span> 25px [row2-end]        / auto 50px auto;}</code></pre><p>上述代码等价于</p><pre><code class="bash">.container {  grid-template-areas:     <span class="string">"header header header"</span>    <span class="string">"footer footer footer"</span>;  grid-template-rows: [row1-start] 1fr [row1-end row2-start] 25px [row2-end];  grid-template-columns: auto 50px auto;    }</code></pre><h1 id="孩子-Grid-Items-的属性"><a href="#孩子-Grid-Items-的属性" class="headerlink" title="孩子(Grid Items)的属性"></a>孩子(Grid Items)的属性</h1><h2 id="grid-column-start-grid-column-end-grid-row-start-grid-row-end"><a href="#grid-column-start-grid-column-end-grid-row-start-grid-row-end" class="headerlink" title="grid-column-start / grid-column-end / grid-row-start /grid-row-end"></a>grid-column-start / grid-column-end / grid-row-start /grid-row-end</h2><p>使用特定的网格线确定 grid item 在网格内的位置。grid-column-start/grid-row-start 属性表示grid item的网格线的起始位置，grid-column-end/grid-row-end属性表示网格项的网格线的终止位置。</p><p>值：</p><pre><code class="bash">&lt;line&gt;: 可以是一个数字来指代相应编号的网格线，也可使用名称指代相应命名的网格线span &lt;number&gt;: 网格项将跨越指定数量的网格轨道span &lt;name&gt;: 网格项将跨越一些轨道，直到碰到指定命名的网格线auto: 自动布局， 或者自动跨越， 或者跨越一个默认的轨道</code></pre><pre><code class="bash">.item {  grid-column-start: &lt;number&gt; | &lt;name&gt; | span &lt;number&gt; | span &lt;name&gt; | auto  grid-column-end: &lt;number&gt; | &lt;name&gt; | span &lt;number&gt; | span &lt;name&gt; | auto  grid-row-start: &lt;number&gt; | &lt;name&gt; | span &lt;number&gt; | span &lt;name&gt; | auto  grid-row-end: &lt;number&gt; | &lt;name&gt; | span &lt;number&gt; | span &lt;name&gt; | auto}</code></pre><p>举例：</p><pre><code class="bash">.item<span class="_">-a</span> {  grid-column-start: 2;  grid-column-end: five;  grid-row-start: row1-start  grid-row-end: 3}</code></pre><p><img src="/images/2018-10-17/grid36.jpg" alt=""></p><pre><code class="bash">.item-b {  grid-column-start: 1;  grid-column-end: span col4-start;  grid-row-start: 2  grid-row-end: span 2}</code></pre><p><img src="/images/2018-10-17/grid37.jpg" alt=""></p><p>如果没有声明 grid-column-end / grid-row-end，默认情况下，该网格项将跨越1个轨道。</p><p>网格项可以相互重叠。 您可以使用z-index来控制它们的堆叠顺序。</p><h2 id="grid-column-grid-row"><a href="#grid-column-grid-row" class="headerlink" title="grid-column / grid-row"></a>grid-column / grid-row</h2><p>grid-column-start + grid-column-end, 和 grid-row-start + grid-row-end 的简写形式。</p><p>值：</p><pre><code class="bash">&lt;start-line&gt; / &lt;end-line&gt; – 每个值的用法都和属性分开写时的用法一样.item {  grid-column: &lt;start-line&gt; / &lt;end-line&gt; | &lt;start-line&gt; / span &lt;value&gt;;  grid-row: &lt;start-line&gt; / &lt;end-line&gt; | &lt;start-line&gt; / span &lt;value&gt;;}</code></pre><p>举例：</p><pre><code class="bash">.item-c {  grid-column: 3 / span 2;  grid-row: third-line / 4;}</code></pre><p><img src="/images/2018-10-17/grid38.jpg" alt=""></p><p>如果没有指定结束行值，则该网格项默认跨越1个轨道。</p><p>grid-area<br>给 grid item 进行命名以便于使用 grid-template-areas 属性创建模板时来进行引用。另外也可以做为 grid-row-start + grid-column-start + grid-row-end + grid-column-end 的简写形式。</p><p>值：</p><pre><code class="bash">&lt;name&gt; – 你的命名&lt;row-start&gt; / &lt;column-start&gt; / &lt;row-end&gt; / &lt;column-end&gt; – 可以是数字，也可以是网格线的名字</code></pre><pre><code class="bash">.item {  grid-area: &lt;name&gt; | &lt;row-start&gt; / &lt;column-start&gt; / &lt;row-end&gt; / &lt;column-end&gt;;}</code></pre><p>举例:</p><p>给一个网格项命名</p><pre><code class="bash">.item<span class="_">-d</span> {  grid-area: header}</code></pre><p>作为 grid-row-start + grid-column-start + grid-row-end + grid-column-end 的简写:</p><pre><code class="bash">.item<span class="_">-d</span> {  grid-area: 1 / col4-start / last-line / 6}</code></pre><p><img src="/images/2018-10-17/grid39.jpg" alt=""></p><h2 id="justify-self"><a href="#justify-self" class="headerlink" title="justify-self"></a>justify-self</h2><p>沿着行轴对齐grid item 里的内容（与之对应的是 align-self, 即沿列轴对齐）。 此属性对单个网格项内的内容生效。</p><p>值：</p><p>start – 将内容对齐到网格区域的左端<br>end – 将内容对齐到网格区域的右端<br>center – 将内容对齐到网格区域的中间<br>stretch – 填充网格区域的宽度 (这是默认值)<br>举例：</p><pre><code class="bash">.item<span class="_">-a</span> {  justify-self: start;}</code></pre><p><img src="/images/2018-10-17/grid40.jpg" alt=""></p><pre><code class="bash">.item<span class="_">-a</span> {  justify-self: end;}</code></pre><p><img src="/images/2018-10-17/grid41.jpg" alt=""></p><pre><code class="bash">.item<span class="_">-a</span> {  justify-self: center;}</code></pre><p><img src="/images/2018-10-17/grid42.jpg" alt=""></p><pre><code class="bash">.item<span class="_">-a</span> {  justify-self: stretch;}</code></pre><p><img src="/images/2018-10-17/grid43.jpg" alt=""></p><p>要为网格中的所有grid items 设置对齐方式，也可以通过 justify-items 属性在网格容器上设置此行为。</p><p>align-self<br>沿着列轴对齐grid item 里的内容（与之对应的是 justify-self, 即沿行轴对齐）。 此属性对单个网格项内的内容生效。</p><p>值：</p><p>start – 将内容对齐到网格区域的顶部<br>end – 将内容对齐到网格区域的底部<br>center – 将内容对齐到网格区域的中间<br>stretch – 填充网格区域的高度 (这是默认值)</p><pre><code class="bash">.item {  align-self: start | end | center | stretch;}</code></pre><p>举例:</p><pre><code class="bash">.item<span class="_">-a</span> {  align-self: start;}</code></pre><p><img src="/images/2018-10-17/grid44.jpg" alt=""></p><pre><code class="bash">.item<span class="_">-a</span> {  align-self: end;}</code></pre><p><img src="/images/2018-10-17/grid45.jpg" alt=""></p><pre><code class="bash">.item<span class="_">-a</span> {  align-self: center;}</code></pre><p><img src="/images/2018-10-17/grid46.jpg" alt=""></p><pre><code class="bash">.item<span class="_">-a</span> {  align-self: stretch;}</code></pre><p><img src="/images/2018-10-17/grid47.jpg" alt=""></p><p>要为网格中的所有grid items 统一设置对齐方式，也可以通过 align-items 属性在网格容器上设置此行为。</p><h1 id="终于COPY完了，以上部分来自饥人谷"><a href="#终于COPY完了，以上部分来自饥人谷" class="headerlink" title="终于COPY完了，以上部分来自饥人谷"></a>终于COPY完了，以上部分来自<a href="https://blog.jirengu.com/?p=990#comments" target="_blank" rel="noopener">饥人谷</a></h1><h1 id="fr-单位-等分"><a href="#fr-单位-等分" class="headerlink" title="fr 单位(等分)"></a>fr 单位(等分)</h1><p>fr 是为网格布局定义的一个新单位。它可以帮助你摆脱计算百分比，并将可用空间等分。</p><p>例如，如果在网格容器中设置这个规则：grid-template-rows: 2fr 3fr，那么你的网格容器将首先被分成 2 行。然后将数字部分加在一起，这里总和为 5， 即 5 等分。</p><p>就是说，我们将有 2 行：第一排占据垂直空间的 2/5 。 第二排占垂直空间的 3/5 。</p><p>用fr来个有3行3列的布局怎么实现？</p><pre><code class="bash">.container {    display: grid;    grid-template-rows: 1fr 1fr 1fr;    grid-template-columns: 1fr 1fr 1fr;}</code></pre><p>这里特别需要注意的是： fr 单位是等分可用空间，或者说剩余空间。看个例子</p><pre><code class="bash">.container {    grid-gap:2px;    display: grid;    width:300px;    height:200px;    grid-template-rows: 100px 1fr 1fr;    grid-template-columns: 1fr 50px 1fr;}</code></pre><p><img src="/images/2018-10-17/grid48.png" alt=""><br>你会看到 fr 单位是将 总的尺寸 减去 单元格明确尺寸后，在等分剩余空间。 grid-gap 是间隔。</p><h1 id="repeat-函数"><a href="#repeat-函数" class="headerlink" title="repeat() 函数"></a>repeat() 函数</h1><p>在某些情况下，我们可能有很多的列和行。在 grid-template 属性中指定每一个值可能会很乏味。幸运的是，有一个 repeat 函数，就像任何一个循环重复多少次输出某个给定值。它有两个参数。第一个是迭代次数，第二个是要重复的值。我们用 repeat 函数重写上面的例子。</p><pre><code class="bash">.container {    display: grid;    grid-template-rows: repeat(3, 1fr);    grid-template-columns: repeat(3, 1fr);}</code></pre><p>等价于：</p><pre><code class="bash">.container {    display: grid;    grid-template-rows: 1fr 1fr 1fr;    grid-template-columns: 1fr 1fr 1fr;}</code></pre><p>参考学习网址</p><p><a href="http://www.css88.com/archives/8675" target="_blank" rel="noopener">http://www.css88.com/archives/8675</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CSS 网格布局(Grid Layout) 是CSS中最强大的布局系统。 这是一个二维系统，这意味着它可以同时处理列和行，不像 flexbox 那样主要是一维系统。 你可以通过将CSS规则应用于父元素（成为网格容器）和该元素的子元素（网格元素），来使用网格布局。&lt;/p&gt;
    
    </summary>
    
      <category term="css" scheme="http://zhouyanwei.cn/categories/css/"/>
    
    
      <category term="grid" scheme="http://zhouyanwei.cn/tags/grid/"/>
    
  </entry>
  
  <entry>
    <title>前端跨域方案</title>
    <link href="http://zhouyanwei.cn/2018/09/25/proxy/"/>
    <id>http://zhouyanwei.cn/2018/09/25/proxy/</id>
    <published>2018-09-24T16:00:00.000Z</published>
    <updated>2018-09-25T08:27:16.432Z</updated>
    
    <content type="html"><![CDATA[<p>做了一份关于跨域的ppt,主要讲解了，使用vue-cli、nginx、node.js进行跨域处理。欢迎下载观看。</p><p><a href="../../../../link/2018-09-25/proxy.pptx">PPT请点击这里下载</a></p><p>下面附上几张照片，node.js跨域源码在下面。</p><a id="more"></a><p><img src="/images/2018-09-25/proxy1.png" alt=""><br><img src="/images/2018-09-25/proxy2.png" alt=""><br><img src="/images/2018-09-25/proxy3.png" alt=""><br><img src="/images/2018-09-25/proxy4.png" alt=""></p><p>proxy.js</p><pre><code class="bash">var PORT = 3000;var http = require(<span class="string">'http'</span>);var url=require(<span class="string">'url'</span>);var fs=require(<span class="string">'fs'</span>);var mine=require(<span class="string">'./mime'</span>).types;var path=require(<span class="string">'path'</span>);var httpProxy = require(<span class="string">'http-proxy'</span>);var proxy = httpProxy.createProxyServer({    target: <span class="string">'http://192.168.2.18:8080/'</span>,   //接口地址    // 下面的设置用于https    // ssl: {    //     key: fs.readFileSync(<span class="string">'server_decrypt.key'</span>, <span class="string">'utf8'</span>),    //     cert: fs.readFileSync(<span class="string">'server.crt'</span>, <span class="string">'utf8'</span>)    // },    // secure: <span class="literal">false</span>});proxy.on(<span class="string">'error'</span>, <span class="keyword">function</span>(err, req, res){    res.writeHead(500, {        <span class="string">'content-type'</span>: <span class="string">'text/plain'</span>    });    console.log(err);    res.end(<span class="string">'Something went wrong. And we are reporting a custom error message.'</span>);});var server = http.createServer(<span class="keyword">function</span> (request, response) {    var pathname = url.parse(request.url).pathname;    //var realPath = path.join(<span class="string">"main-pages"</span>, pathname); // 指定根目录    var realPath = path.join(<span class="string">"./"</span>, pathname);    console.log(pathname);    console.log(realPath);    var ext = path.extname(realPath);    ext = ext ? ext.slice(1) : <span class="string">'unknown'</span>;    //判断如果是接口访问，则通过proxy转发    <span class="keyword">if</span>(pathname.indexOf(<span class="string">"meis"</span>) &gt; 0){        proxy.web(request, response);        <span class="built_in">return</span>;    }    fs.exists(realPath, <span class="keyword">function</span> (exists) {        <span class="keyword">if</span> (!exists) {            response.writeHead(404, {                <span class="string">'Content-Type'</span>: <span class="string">'text/plain'</span>            });            response.write(<span class="string">"This request URL "</span> + pathname + <span class="string">" was not found on this server."</span>);            response.end();        } <span class="keyword">else</span> {            fs.readFile(realPath, <span class="string">"binary"</span>, <span class="keyword">function</span> (err, file) {                <span class="keyword">if</span> (err) {                    response.writeHead(500, {                        <span class="string">'Content-Type'</span>: <span class="string">'text/plain'</span>                    });                    response.end(err);                } <span class="keyword">else</span> {                    var contentType = mine[ext] || <span class="string">"text/plain"</span>;                    response.writeHead(200, {                        <span class="string">'Content-Type'</span>: contentType                    });                    response.write(file, <span class="string">"binary"</span>);                    response.end();                }            });        }    });});server.listen(PORT);console.log(<span class="string">"Server runing at port: "</span> + PORT + <span class="string">"."</span>);</code></pre><p>mime.js</p><pre><code class="bash">exports.types = {    <span class="string">"css"</span>: <span class="string">"text/css"</span>,    <span class="string">"gif"</span>: <span class="string">"image/gif"</span>,    <span class="string">"html"</span>: <span class="string">"text/html"</span>,    <span class="string">"ico"</span>: <span class="string">"image/x-icon"</span>,    <span class="string">"jpeg"</span>: <span class="string">"image/jpeg"</span>,    <span class="string">"jpg"</span>: <span class="string">"image/jpeg"</span>,    <span class="string">"js"</span>: <span class="string">"text/javascript"</span>,    <span class="string">"json"</span>: <span class="string">"application/json"</span>,    <span class="string">"pdf"</span>: <span class="string">"application/pdf"</span>,    <span class="string">"png"</span>: <span class="string">"image/png"</span>,    <span class="string">"svg"</span>: <span class="string">"image/svg+xml"</span>,    <span class="string">"swf"</span>: <span class="string">"application/x-shockwave-flash"</span>,    <span class="string">"tiff"</span>: <span class="string">"image/tiff"</span>,    <span class="string">"txt"</span>: <span class="string">"text/plain"</span>,    <span class="string">"wav"</span>: <span class="string">"audio/x-wav"</span>,    <span class="string">"wma"</span>: <span class="string">"audio/x-ms-wma"</span>,    <span class="string">"wmv"</span>: <span class="string">"video/x-ms-wmv"</span>,    <span class="string">"xml"</span>: <span class="string">"text/xml"</span>,    <span class="string">"woff"</span>: <span class="string">"application/x-woff"</span>,    <span class="string">"woff2"</span>: <span class="string">"application/x-woff2"</span>,    <span class="string">"tff"</span>: <span class="string">"application/x-font-truetype"</span>,    <span class="string">"otf"</span>: <span class="string">"application/x-font-opentype"</span>,    <span class="string">"eot"</span>: <span class="string">"application/vnd.ms-fontobject"</span>};</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;做了一份关于跨域的ppt,主要讲解了，使用vue-cli、nginx、node.js进行跨域处理。欢迎下载观看。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;../../../../link/2018-09-25/proxy.pptx&quot;&gt;PPT请点击这里下载&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下面附上几张照片，node.js跨域源码在下面。&lt;/p&gt;
    
    </summary>
    
      <category term="js" scheme="http://zhouyanwei.cn/categories/js/"/>
    
    
      <category term="vue" scheme="http://zhouyanwei.cn/tags/vue/"/>
    
      <category term="node.js" scheme="http://zhouyanwei.cn/tags/node-js/"/>
    
      <category term="nginx" scheme="http://zhouyanwei.cn/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>vue-cli3 + ElementUI</title>
    <link href="http://zhouyanwei.cn/2018/09/03/vue-cli/"/>
    <id>http://zhouyanwei.cn/2018/09/03/vue-cli/</id>
    <published>2018-09-02T16:00:00.000Z</published>
    <updated>2018-09-30T02:46:25.583Z</updated>
    
    <content type="html"><![CDATA[<p>使用vue-cli3脚手架搭配ElementUI做了一个简单的PC后台管理系统<br><a href="../../../../link/2018-09-03/dist/index.html" target="_black">连接地址</a><br>账号密码随便输,不写也行。<br><a href="https://github.com/zywkuo/vue-cli-demo-pc" target="_blank" rel="noopener">github源码在这里</a><br>下载在下来后安装依赖，启动项目应该就可以看了。</p><p>我也在学习中，持续更新。。。。。。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用vue-cli3脚手架搭配ElementUI做了一个简单的PC后台管理系统&lt;br&gt;&lt;a href=&quot;../../../../link/2018-09-03/dist/index.html&quot; target=&quot;_black&quot;&gt;连接地址&lt;/a&gt;&lt;br&gt;账号密码随便输,不写也行
      
    
    </summary>
    
      <category term="VUE" scheme="http://zhouyanwei.cn/categories/VUE/"/>
    
    
      <category term="vue" scheme="http://zhouyanwei.cn/tags/vue/"/>
    
      <category term="cli3" scheme="http://zhouyanwei.cn/tags/cli3/"/>
    
      <category term="ElementUI" scheme="http://zhouyanwei.cn/tags/ElementUI/"/>
    
  </entry>
  
  <entry>
    <title>rest参数(...变量名)和扩展运算符(...)</title>
    <link href="http://zhouyanwei.cn/2018/08/23/(...)/"/>
    <id>http://zhouyanwei.cn/2018/08/23/(...)/</id>
    <published>2018-08-22T16:00:00.000Z</published>
    <updated>2018-08-23T02:57:47.509Z</updated>
    
    <content type="html"><![CDATA[<p>之前写的一篇数组去重的方法，这样写的。</p><pre><code class="bash">const array = [1,1,2,3,4,5,5,6,6,7,8,8];<span class="keyword">function</span> <span class="function"><span class="title">distinct</span></span>(){    <span class="built_in">let</span> arr = [].concat.apply([], arguments);    console.log(arr);    <span class="built_in">return</span> Array.from(new Set(arr));}const a = [1,2,3,5],b = [2,5,8,6],c = [7,8,9];console.log(distinct(a,b,c));//[1, 2, 3, 5, 8, 6, 7, 9]</code></pre><a id="more"></a><p>后来我一想，既然都用ES6了，不如都用ES6语法吧。然后我就把代码改成这样了。</p><pre><code class="bash">distinct = () =&gt; {    <span class="built_in">let</span> arr = [].concat.apply([], arguments);    <span class="built_in">return</span> Array.from(new Set(arr));}console.log(distinct(array));//Uncaught ReferenceError: arguments is not defined</code></pre><p>报错了，让后查找了一下原因，使用为箭头函数没有arguments，怎么办，这就需要用rest参数了。</p><pre><code class="bash">const a = [1,2,3,5],b = [2,5,8,6],c = [7,8,9];distinct = (...theArgs) =&gt; {    <span class="built_in">let</span> arr = [].concat.apply([], theArgs);    <span class="built_in">return</span> Array.from(new Set(arr));}console.log(distinct(a,b,c));//[1, 2, 3, 5, 8, 6, 7, 9]</code></pre><p>这个<code>...theArgs</code>就是rest参数了，theArgs是自定义的命名，可以随便起名字。</p><h1 id="rest参数-…变量名"><a href="#rest参数-…变量名" class="headerlink" title="rest参数(…变量名)"></a>rest参数(…变量名)</h1><p>最主要用于不定参数，用于获取函数多余的参数，将多余的逗号分隔的参数序列转换为数组参数</p><p>rest参数的语法</p><pre><code class="bash"><span class="keyword">function</span> f(a, b, ...theArgs) {  // ...}</code></pre><p>看一个小例子</p><pre><code class="bash">fun1 = (...theArgs) =&gt; {    console.log(theArgs);}fun1(1, 2, 3, 4, 5, 6);//[1, 2, 3, 4, 5, 6]fun2 = (a, b, ...theArgs) =&gt; {    console.log(theArgs);//[3, 4, 5, 6]}fun2(1, 2, 3, 4, 5, 6);</code></pre><p>注意：rest参数只能是最后一个参数，他代表除a,b以外的所有参数，如果后面在添加别参数，例如</p><pre><code class="bash">fun2 = (a, b, ...theArgs, c) =&gt; {    console.log(theArgs);}fun2(1, 2, 3, 4, 5, 6);Uncaught SyntaxError: Rest parameter must be last formal parameter</code></pre><p>这样是会报错的。</p><p>说到这里这个<code>...</code>还有一个作用就是作为扩展运算符</p><h1 id="扩展运算符-…"><a href="#扩展运算符-…" class="headerlink" title="扩展运算符(…)"></a>扩展运算符(…)</h1><p>扩展运算符可以理解为rest参数的逆运算，将数组转换为逗号分隔的参数序列</p><pre><code class="bash">const nums = [1, 2, 3];fun = (a, b, c) =&gt; {    console.log(`<span class="variable">${a}</span> <span class="variable">${b}</span> <span class="variable">${c}</span>`)}fun(...nums);//1 2 3</code></pre><p>ES5的话我们还需要这样调用</p><pre><code class="bash">fun.apply(null,nums);</code></pre><h1 id="扩展运算符应用"><a href="#扩展运算符应用" class="headerlink" title="扩展运算符应用"></a>扩展运算符应用</h1><h2 id="合并数组"><a href="#合并数组" class="headerlink" title="合并数组"></a>合并数组</h2><pre><code class="bash">const arr1 = [1, 2, 3]const arr2 = [5, 6]ES5console.log(arr1.concat(arr2));//[1, 2, 3, 5, 6]ES6console.log([...arr1, ...arr2]);//[1, 2, 3, 5, 6]</code></pre><h2 id="判断最大值最小值"><a href="#判断最大值最小值" class="headerlink" title="判断最大值最小值"></a>判断最大值最小值</h2><pre><code class="bash">const array = [1,1,2,3,4,5,5,6,6,7,8,8];ES5console.log( Math.max.apply(null, array));//8console.log( Math.min.apply(null, array));//1ES6console.log( Math.max(...array));//8console.log( Math.min(...array));//1</code></pre><h2 id="数组去重"><a href="#数组去重" class="headerlink" title="数组去重"></a>数组去重</h2><pre><code class="bash">const array = [1,1,2,3,4,5,5,6,6,7,8,8];const distinct = arr =&gt; [...new Set(arr)];console.log(distinct(array));//[1, 2, 3, 4, 5, 6, 7, 8]</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前写的一篇数组去重的方法，这样写的。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;const array = [1,1,2,3,4,5,5,6,6,7,8,8];
&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;distinct&lt;/span&gt;&lt;/span&gt;(){
    &lt;span class=&quot;built_in&quot;&gt;let&lt;/span&gt; arr = [].concat.apply([], arguments);
    console.log(arr);
    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; Array.from(new Set(arr));
}
const a = [1,2,3,5],b = [2,5,8,6],c = [7,8,9];
console.log(distinct(a,b,c));//[1, 2, 3, 5, 8, 6, 7, 9]
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="ES6" scheme="http://zhouyanwei.cn/categories/ES6/"/>
    
    
      <category term="rest参数" scheme="http://zhouyanwei.cn/tags/rest%E5%8F%82%E6%95%B0/"/>
    
      <category term="扩展运算符" scheme="http://zhouyanwei.cn/tags/%E6%89%A9%E5%B1%95%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>position:sticky</title>
    <link href="http://zhouyanwei.cn/2018/08/21/sticky/"/>
    <id>http://zhouyanwei.cn/2018/08/21/sticky/</id>
    <published>2018-08-20T16:00:00.000Z</published>
    <updated>2018-08-21T07:24:28.203Z</updated>
    
    <content type="html"><![CDATA[<p>css position属性的值有absolute、fixed、relative、static、inherit等，<br>今天发现一个新的值 sticky 粘性定位，该定位基于用户滚动的位置。</p><a id="more"></a><p>这个属性比较不错，遗憾的是兼容性还不是很好，先来张图看一下<br><img src="/images/2018-08-21/sticky.png" alt=""></p><p>再来看一下他能干什么，比如说我一片文章有6个标题，让后读者读到每个标题对应的内容的时候让标题在顶部显示，看demo。</p><p></p><p data-height="265" data-theme-id="0" data-slug-hash="YOzJoP" data-default-tab="css,result" data-user="zywkuo" data-pen-title="YOzJoP" class="codepen">See the Pen <a href="https://codepen.io/zywkuo/pen/YOzJoP/" target="_blank" rel="noopener">YOzJoP</a> by 周艳伟 (<a href="https://codepen.io/zywkuo" target="_blank" rel="noopener">@zywkuo</a>) on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</p><p></p><script async src="https://static.codepen.io/assets/embed/ei.js"></script><p>还有一些移动端页面标题固定顶部，看这个demo</p><p></p><p data-height="265" data-theme-id="0" data-slug-hash="dqywNV" data-default-tab="html,result" data-user="zywkuo" data-pen-title="sticky2" class="codepen">See the Pen <a href="https://codepen.io/zywkuo/pen/dqywNV/" target="_blank" rel="noopener">sticky2</a> by 周艳伟 (<a href="https://codepen.io/zywkuo" target="_blank" rel="noopener">@zywkuo</a>) on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</p><p></p><script async src="https://static.codepen.io/assets/embed/ei.js"></script><p>这个属性值还是很不错的，用起来是不是感觉很方便，如果用js的话还需要进行判断高度在做处理相对来说还是这个简便快捷。</p><p>希望赶快普及吧！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;css position属性的值有absolute、fixed、relative、static、inherit等，&lt;br&gt;今天发现一个新的值 sticky 粘性定位，该定位基于用户滚动的位置。&lt;/p&gt;
    
    </summary>
    
      <category term="css" scheme="http://zhouyanwei.cn/categories/css/"/>
    
    
      <category term="position:sticky" scheme="http://zhouyanwei.cn/tags/position-sticky/"/>
    
  </entry>
  
  <entry>
    <title>js数组去重</title>
    <link href="http://zhouyanwei.cn/2018/08/10/distinct/"/>
    <id>http://zhouyanwei.cn/2018/08/10/distinct/</id>
    <published>2018-08-09T16:00:00.000Z</published>
    <updated>2018-08-10T02:15:52.828Z</updated>
    
    <content type="html"><![CDATA[<p>数组去重，老生常谈，记录我觉得比较好的方法<br><a id="more"></a></p><h1 id="ES5方法"><a href="#ES5方法" class="headerlink" title="ES5方法"></a>ES5方法</h1><h2 id="利用对象唯一属性进行去重"><a href="#利用对象唯一属性进行去重" class="headerlink" title="利用对象唯一属性进行去重"></a>利用对象唯一属性进行去重</h2><pre><code class="bash">var array = [1,1,2,3,4,5,5,6,6,7,8,8];Array.prototype.distinct = <span class="function"><span class="title">function</span></span> () {    var array = [];    var obj = {};    <span class="keyword">for</span>(var i=0;i&lt;this.length;i++){        <span class="keyword">if</span>(!obj[this[i]]){            array.push(this[i]);            obj[this[i]] = 1;        }    }    <span class="built_in">return</span> array;}console.log(array.distinct());//[1, 2, 3, 4, 5, 6, 7, 8]</code></pre><h2 id="利用indexOf属性进行判断"><a href="#利用indexOf属性进行判断" class="headerlink" title="利用indexOf属性进行判断"></a>利用indexOf属性进行判断</h2><pre><code class="bash">var array = [1,1,2,3,4,5,5,6,6,7,8,8];Array.prototype.distinct = <span class="function"><span class="title">function</span></span> () {    var array = [this[0]];    <span class="keyword">for</span>(var i=0;i&lt;this.length;i++){        <span class="keyword">if</span>(array.indexOf(this[i]) == -1){            array.push(this[i])        }    }    <span class="built_in">return</span> array;}console.log(array.distinct());//[1, 2, 3, 4, 5, 6, 7, 8]</code></pre><h1 id="ES6方法"><a href="#ES6方法" class="headerlink" title="ES6方法"></a>ES6方法</h1><p>ES6 提供了新的数据结构 Set。它类似于数组，但是成员的值都是唯一的，没有重复的值。利用他的唯一性就可以进行去重了。</p><pre><code class="bash">const array = [1,1,2,3,4,5,5,6,6,7,8,8];console.log(new Set(array));//{1, 2, 3, 4, 5, 6, 7, 8}</code></pre><p>此时可以看到原数组已经已经去重了，但是此时结构还不是数组的结构，因此我们还需要用到Array.from方法，Array.from方法可以将 Set 结构转为数组。</p><pre><code class="bash">const array = [1,1,2,3,4,5,5,6,6,7,8,8];console.log(Array.from(new Set(array)));//[1, 2, 3, 4, 5, 6, 7, 8]</code></pre><p>记录一个多个数组合并去重的好方法</p><pre><code class="bash"><span class="keyword">function</span> <span class="function"><span class="title">distinct</span></span>(){    <span class="built_in">let</span> arr = [].concat.apply([], arguments);    console.log(arr);    <span class="built_in">return</span> Array.from(new Set(arr));}const a = [1,2,3,5],b = [2,5,8,6],c = [7,8,9];console.log(distinct(a,b,c));//[1, 2, 3, 5, 8, 6, 7, 9]</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;数组去重，老生常谈，记录我觉得比较好的方法&lt;br&gt;
    
    </summary>
    
      <category term="js" scheme="http://zhouyanwei.cn/categories/js/"/>
    
    
      <category term="js数组去重" scheme="http://zhouyanwei.cn/tags/js%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D/"/>
    
      <category term="ES6" scheme="http://zhouyanwei.cn/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title>:focus-within选择器</title>
    <link href="http://zhouyanwei.cn/2018/08/07/focusWithin/"/>
    <id>http://zhouyanwei.cn/2018/08/07/focusWithin/</id>
    <published>2018-08-06T16:00:00.000Z</published>
    <updated>2018-08-09T06:58:00.204Z</updated>
    
    <content type="html"><![CDATA[<p>看新闻看到了一个非常不错的选择器:focus-within，他可以做一些js的效果，focus是获取焦点，所以只能有focus状态的元素才可以使用。<br>:focus-within选择器是在元素获取焦点的时候可以触发自身或者父元素的属性（冒泡）。<br><a id="more"></a></p><p>举一个小例子<br>效果如图<br><img src="/images/2018-08-07/focus-within.gif" alt=""></p><pre><code class="bash">css.parent{            width: 100%;            height: 200px;              background: <span class="comment">#eeeeee;</span>            display: flex;            justify-content: center;            align-items: center;        }        .children{            width: 100px;            height: 60px;            background: <span class="comment">#999;</span>        }        .parent:focus-within{            background: <span class="comment">#f60;</span>        }&gt;</code></pre><pre><code class="bash">html&lt;div class=<span class="string">"parent"</span>&gt;    &lt;button class=<span class="string">"children"</span>&gt;点我&lt;/button&gt;&lt;/div&gt;</code></pre><p>写了一个选项卡的小例子效果可以看一下<br><img src="/images/2018-08-07/focus-within-nav.gif" alt=""><br><a href="https://codepen.io/zywkuo/pen/XBByzj" target="_blank" rel="noopener">具体代码可以点击此链接前往codepen查看，效果也有哦！</a></p><p>在看一下兼容问题  数据来源于<a href="https://caniuse.com/" target="_blank" rel="noopener">https://caniuse.com/</a><br><img src="/images/2018-08-07/focus-within.png" alt=""></p><p>虽然对浏览器的兼容效果还不是很好，希望快快普及吧。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看新闻看到了一个非常不错的选择器:focus-within，他可以做一些js的效果，focus是获取焦点，所以只能有focus状态的元素才可以使用。&lt;br&gt;:focus-within选择器是在元素获取焦点的时候可以触发自身或者父元素的属性（冒泡）。&lt;br&gt;
    
    </summary>
    
      <category term="css" scheme="http://zhouyanwei.cn/categories/css/"/>
    
    
      <category term=":focus-within" scheme="http://zhouyanwei.cn/tags/focus-within/"/>
    
  </entry>
  
  <entry>
    <title>sql语句学习</title>
    <link href="http://zhouyanwei.cn/2018/08/03/sql/"/>
    <id>http://zhouyanwei.cn/2018/08/03/sql/</id>
    <published>2018-08-02T16:00:00.000Z</published>
    <updated>2018-08-07T01:48:20.076Z</updated>
    
    <content type="html"><![CDATA[<p>sql学习记录<br><a id="more"></a><br>从 “qc_record” 表中选取所有记录 (*qc_record为一个表的名称)</p><pre><code class="bash">select * from qc_record;</code></pre><p>一些最重要的 SQL 命令（*SQL 对大小写不敏感：SELECT 与 select 是相同的。）</p><pre><code class="bash">SELECT                  - 从数据库中提取数据UPDATE                  - 更新数据库中的数据DELETE                  - 从数据库中删除数据INSERT INTO             - 向数据库中插入新数据CREATE DATABASE         - 创建新数据库ALTER DATABASE          - 修改数据库CREATE TABLE            - 创建新表ALTER TABLE             - 变更（改变）数据库表DROP TABLE              - 删除表CREATE INDEX            - 创建索引（搜索键）DROP INDEX              - 删除索引</code></pre><h1 id="SELECT-语句"><a href="#SELECT-语句" class="headerlink" title="SELECT 语句"></a>SELECT 语句</h1><p>SELECT 语句用于从数据库中选取数据。结果被存储在一个结果表中，称为结果集。</p><p>SQL SELECT 语法</p><pre><code class="bash">select * from qc_record;     查询整个表内容select column_name,column_name from qc_record;      -- column_name(查询表内某一列名称可查询多个)</code></pre><h1 id="SELECT-DISTINCT-语句"><a href="#SELECT-DISTINCT-语句" class="headerlink" title="SELECT DISTINCT 语句"></a>SELECT DISTINCT 语句</h1><p>在表中，一个列可能会包含多个重复值，有时您也许希望仅仅列出不同（distinct）的值。DISTINCT 关键词用于返回唯一不同的值。</p><p>SQL SELECT DISTINCT 语法</p><pre><code class="bash">select distinct column_name,column_name from qc_record;     -- column_name(查询表内某一列名称可查询多个)</code></pre><h1 id="WHERE-子句"><a href="#WHERE-子句" class="headerlink" title="WHERE 子句"></a>WHERE 子句</h1><p>WHERE 子句用于提取那些满足指定标准的记录。</p><p>WHERE 语法</p><pre><code class="bash">select * from qc_record <span class="built_in">where</span> column_name operator value;      -- 查找qc_record表中匹配column_name operator value（匹配表达式）的记录select column_name,column_name from qc_record <span class="built_in">where</span> column_name operator value;     -- 查找qc_record表中对应名称的匹配column_name operator value（匹配表达式）的记录</code></pre><p>SQL 使用单引号来环绕文本值（大部分数据库系统也接受双引号）。如果是数值字段，请不要使用引号。</p><p>WHERE 子句中的运算符</p><pre><code class="bash">运算符        描述=            等于&lt;&gt;            不等于。注释：在 SQL 的一些版本中，该操作符可被写成 !=&gt;            大于&lt;            小于&gt;=            大于等于&lt;=            小于等于BETWEEN        在某个范围内LIKE        搜索某种模式IN            指定针对某个列的多个可能值</code></pre><h1 id="AND-amp-OR-运算符"><a href="#AND-amp-OR-运算符" class="headerlink" title="AND &amp; OR 运算符"></a>AND &amp; OR 运算符</h1><p>AND &amp; OR 运算符用于基于一个以上的条件对记录进行过滤。<br>如果第一个条件和第二个条件都成立，则 AND 运算符显示一条记录。<br>如果第一个条件和第二个条件中只要有一个成立，则 OR 运算符显示一条记录。</p><p>AND 语法</p><pre><code class="bash">select * from qc_record <span class="built_in">where</span> test_user = <span class="string">'zyw'</span> and device_id = 19222;   -- 与的关系，and连接的两个名称匹配都<span class="literal">true</span>才显示</code></pre><p>OR 语法</p><pre><code class="bash">select * from qc_record <span class="built_in">where</span> test_user = <span class="string">'zyw'</span> or device_id = 19222;   -- 或的关系，or连接的两个名称有一个匹配的就显示</code></pre><p>AND OR 语法</p><pre><code class="bash">select * from qc_record <span class="built_in">where</span> test_user = <span class="string">'zyw'</span> and (device_id = 19121 or status = 1);   -- 也可以把 AND 和 OR 结合起来（使用圆括号来组成复杂的表达式）</code></pre><h1 id="ORDER-BY-关键字"><a href="#ORDER-BY-关键字" class="headerlink" title="ORDER BY 关键字"></a>ORDER BY 关键字</h1><p>ORDER BY 关键字用于对结果集进行排序。<br>ORDER BY 关键字用于对结果集按照一个列或者多个列进行排序。<br>ORDER BY 关键字默认按照升序对记录进行排序。如果需要按照降序对记录进行排序，您可以使用 DESC 关键字。</p><p>ORDER BY 语法</p><pre><code class="bash">select * from qc_record order by create_date desc           -- ASC--&gt;升序排列默认    DESC--&gt;降序排列要写这个关键字</code></pre><h1 id="INSERT-INTO-语句"><a href="#INSERT-INTO-语句" class="headerlink" title="INSERT INTO 语句"></a>INSERT INTO 语句</h1><p>INSERT INTO 语句用于向表中插入新记录。</p><p>INSERT INTO 语法(有两种编写形式)</p><p>第一种形式无需指定要插入数据的列名，只需提供被插入的值即可：</p><pre><code class="bash">insert into qc_record values (value1,value2,value3,...);</code></pre><p>第二种形式需要指定列名及被插入的值：</p><pre><code class="bash">insert into qc_record (column1,column2,column3,...) values (value1,value2,value3,...);</code></pre><h1 id="UPDATE-语句"><a href="#UPDATE-语句" class="headerlink" title="UPDATE 语句"></a>UPDATE 语句</h1><p>UPDATE 语句用于更新表中的记录。</p><p>UPDATE 语句</p><pre><code class="bash">update qc_record <span class="built_in">set</span> column1=value1,column2=value2,... <span class="built_in">where</span> some_column=some_value; -- WHERE 子句规定哪条记录或者哪些记录需要更新。如果您省略了 WHERE 子句，所有的记录都将被更新！</code></pre><h1 id="DELETE-语句"><a href="#DELETE-语句" class="headerlink" title="DELETE 语句"></a>DELETE 语句</h1><p>DELETE 语句用于删除表中的记录。</p><p>SQL DELETE 语法</p><pre><code class="bash">delete from qc_record <span class="built_in">where</span> some_column=some_value;                                 -- 删除一条属性delete from qc_record <span class="built_in">where</span> some_column=some_value and some_column=some_value ...;      -- 删除多条属性delete from qc_record                                                               -- 删除所有</code></pre><p>参考网址    <a href="http://www.runoob.com/sql/sql-tutorial.html" traget="_blank" target="_blank" rel="noopener">SQL教程|菜鸟教程</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;sql学习记录&lt;br&gt;
    
    </summary>
    
      <category term="sql" scheme="http://zhouyanwei.cn/categories/sql/"/>
    
    
      <category term="sql" scheme="http://zhouyanwei.cn/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>js模糊查询</title>
    <link href="http://zhouyanwei.cn/2018/08/01/search/"/>
    <id>http://zhouyanwei.cn/2018/08/01/search/</id>
    <published>2018-07-31T16:00:00.000Z</published>
    <updated>2018-08-01T08:23:54.510Z</updated>
    
    <content type="html"><![CDATA[<p>对于前端而言一些简单的查询还是不用需要后台配合的，前端自己也可以处理，最简单的就是用indexof判断进行显示隐藏，下面记录一个比较不错的方法，可以支持汉字、拼音、拼音首字母大写小写。</p><p>pinyin-engine 是一个简单高效的JavaScript拼音本地匹配引擎，它支持多音字，另外提供全文版支持繁体字 <a href="../../../../link/2018-08-01/PinyinEngine.js" download="PinyinEngine.js">点击此处进行下载</a></p><p><a href="../../../../link/2018-08-01/index.html" target="_black">也可以点击此处进行效果预览</a></p><p>源代码在这里</p><pre><code class="bash">&lt;!DOCTYPE html&gt;&lt;html lang=<span class="string">"en"</span>&gt;&lt;head&gt;    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0, minimum-scale=1, maximum-scale=1, user-scalable=yes"</span> /&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;style&gt;    *{        margin: 0;        padding: 0;    }    input{        width: 80%;        height: 50px;        display: block;        margin: 30px auto ;        background: <span class="comment">#F0F0F0;</span>        border: 1px solid <span class="comment">#333;</span>        font-size: 26px;        text-indent: 30px;    }    <span class="comment">#cityBox{</span>        text-align: center;    }&lt;/style&gt;&lt;body&gt;    &lt;input <span class="built_in">type</span>=<span class="string">"text"</span> id=<span class="string">"inp"</span>&gt;    &lt;ul id=<span class="string">"cityBox"</span>&gt;    &lt;/ul&gt;&lt;/body&gt;&lt;script src=<span class="string">"PinyinEngine.js"</span>&gt;&lt;/script&gt;&lt;script&gt;    var demoData = [        {name: <span class="string">'海门'</span>, value: 9},        {name: <span class="string">'鄂尔多斯'</span>, value: 12},        {name: <span class="string">'招远'</span>, value: 12},        {name: <span class="string">'舟山'</span>, value: 12},        {name: <span class="string">'齐齐哈尔'</span>, value: 14},        {name: <span class="string">'盐城'</span>, value: 15},        {name: <span class="string">'赤峰'</span>, value: 16},        {name: <span class="string">'青岛'</span>, value: 18},        {name: <span class="string">'乳山'</span>, value: 18},        {name: <span class="string">'金昌'</span>, value: 19},        {name: <span class="string">'泉州'</span>, value: 21},        {name: <span class="string">'莱西'</span>, value: 21},        {name: <span class="string">'日照'</span>, value: 21},        {name: <span class="string">'胶南'</span>, value: 22},        {name: <span class="string">'南通'</span>, value: 23},        {name: <span class="string">'拉萨'</span>, value: 24},        {name: <span class="string">'云浮'</span>, value: 24},        {name: <span class="string">'梅州'</span>, value: 25},        {name: <span class="string">'文登'</span>, value: 25},        {name: <span class="string">'上海'</span>, value: 25},        {name: <span class="string">'攀枝花'</span>, value: 25},        {name: <span class="string">'威海'</span>, value: 25},        {name: <span class="string">'承德'</span>, value: 25},        {name: <span class="string">'厦门'</span>, value: 26},        {name: <span class="string">'汕尾'</span>, value: 26},        {name: <span class="string">'潮州'</span>, value: 26},        {name: <span class="string">'丹东'</span>, value: 27},        {name: <span class="string">'太仓'</span>, value: 27},        {name: <span class="string">'曲靖'</span>, value: 27},        {name: <span class="string">'烟台'</span>, value: 28},        {name: <span class="string">'福州'</span>, value: 29},        {name: <span class="string">'瓦房店'</span>, value: 30},        {name: <span class="string">'即墨'</span>, value: 30},        {name: <span class="string">'抚顺'</span>, value: 31},        {name: <span class="string">'玉溪'</span>, value: 31},        {name: <span class="string">'张家口'</span>, value: 31},        {name: <span class="string">'阳泉'</span>, value: 31},        {name: <span class="string">'莱州'</span>, value: 32},        {name: <span class="string">'湖州'</span>, value: 32},        {name: <span class="string">'汕头'</span>, value: 32},        {name: <span class="string">'昆山'</span>, value: 33},        {name: <span class="string">'宁波'</span>, value: 33},        {name: <span class="string">'湛江'</span>, value: 33},        {name: <span class="string">'揭阳'</span>, value: 34},        {name: <span class="string">'荣成'</span>, value: 34},        {name: <span class="string">'连云港'</span>, value: 35},        {name: <span class="string">'葫芦岛'</span>, value: 35},        {name: <span class="string">'常熟'</span>, value: 36},        {name: <span class="string">'东莞'</span>, value: 36},        {name: <span class="string">'河源'</span>, value: 36},        {name: <span class="string">'淮安'</span>, value: 36},        {name: <span class="string">'泰州'</span>, value: 36},        {name: <span class="string">'南宁'</span>, value: 37},        {name: <span class="string">'营口'</span>, value: 37},        {name: <span class="string">'惠州'</span>, value: 37},        {name: <span class="string">'江阴'</span>, value: 37},        {name: <span class="string">'蓬莱'</span>, value: 37},        {name: <span class="string">'韶关'</span>, value: 38},        {name: <span class="string">'嘉峪关'</span>, value: 38},        {name: <span class="string">'广州'</span>, value: 38},        {name: <span class="string">'延安'</span>, value: 38},        {name: <span class="string">'太原'</span>, value: 39},        {name: <span class="string">'清远'</span>, value: 39},        {name: <span class="string">'中山'</span>, value: 39},        {name: <span class="string">'昆明'</span>, value: 39},        {name: <span class="string">'寿光'</span>, value: 40},        {name: <span class="string">'盘锦'</span>, value: 40},        {name: <span class="string">'长治'</span>, value: 41},        {name: <span class="string">'深圳'</span>, value: 41},        {name: <span class="string">'珠海'</span>, value: 42},        {name: <span class="string">'宿迁'</span>, value: 43},        {name: <span class="string">'咸阳'</span>, value: 43},        {name: <span class="string">'铜川'</span>, value: 44},        {name: <span class="string">'平度'</span>, value: 44},        {name: <span class="string">'佛山'</span>, value: 44},        {name: <span class="string">'海口'</span>, value: 44},        {name: <span class="string">'江门'</span>, value: 45},        {name: <span class="string">'章丘'</span>, value: 45},        {name: <span class="string">'肇庆'</span>, value: 46},        {name: <span class="string">'大连'</span>, value: 47},        {name: <span class="string">'临汾'</span>, value: 47},        {name: <span class="string">'吴江'</span>, value: 47},        {name: <span class="string">'石嘴山'</span>, value: 49},        {name: <span class="string">'沈阳'</span>, value: 50},        {name: <span class="string">'苏州'</span>, value: 50},        {name: <span class="string">'茂名'</span>, value: 50},        {name: <span class="string">'嘉兴'</span>, value: 51},        {name: <span class="string">'长春'</span>, value: 51},        {name: <span class="string">'胶州'</span>, value: 52},        {name: <span class="string">'银川'</span>, value: 52},        {name: <span class="string">'张家港'</span>, value: 52},        {name: <span class="string">'三门峡'</span>, value: 53},        {name: <span class="string">'锦州'</span>, value: 54},        {name: <span class="string">'南昌'</span>, value: 54},        {name: <span class="string">'柳州'</span>, value: 54},        {name: <span class="string">'三亚'</span>, value: 54},        {name: <span class="string">'自贡'</span>, value: 56},        {name: <span class="string">'吉林'</span>, value: 56},        {name: <span class="string">'阳江'</span>, value: 57},        {name: <span class="string">'泸州'</span>, value: 57},        {name: <span class="string">'西宁'</span>, value: 57},        {name: <span class="string">'宜宾'</span>, value: 58},        {name: <span class="string">'呼和浩特'</span>, value: 58},        {name: <span class="string">'成都'</span>, value: 58},        {name: <span class="string">'大同'</span>, value: 58},        {name: <span class="string">'镇江'</span>, value: 59},        {name: <span class="string">'桂林'</span>, value: 59},        {name: <span class="string">'张家界'</span>, value: 59},        {name: <span class="string">'宜兴'</span>, value: 59},        {name: <span class="string">'北海'</span>, value: 60},        {name: <span class="string">'西安'</span>, value: 61},        {name: <span class="string">'金坛'</span>, value: 62},        {name: <span class="string">'东营'</span>, value: 62},        {name: <span class="string">'牡丹江'</span>, value: 63},        {name: <span class="string">'遵义'</span>, value: 63},        {name: <span class="string">'绍兴'</span>, value: 63},        {name: <span class="string">'扬州'</span>, value: 64},        {name: <span class="string">'常州'</span>, value: 64},        {name: <span class="string">'潍坊'</span>, value: 65},        {name: <span class="string">'重庆'</span>, value: 66},        {name: <span class="string">'台州'</span>, value: 67},        {name: <span class="string">'南京'</span>, value: 67},        {name: <span class="string">'滨州'</span>, value: 70},        {name: <span class="string">'贵阳'</span>, value: 71},        {name: <span class="string">'无锡'</span>, value: 71},        {name: <span class="string">'本溪'</span>, value: 71},        {name: <span class="string">'克拉玛依'</span>, value: 72},        {name: <span class="string">'渭南'</span>, value: 72},        {name: <span class="string">'马鞍山'</span>, value: 72},        {name: <span class="string">'宝鸡'</span>, value: 72},        {name: <span class="string">'焦作'</span>, value: 75},        {name: <span class="string">'句容'</span>, value: 75},        {name: <span class="string">'北京'</span>, value: 79},        {name: <span class="string">'徐州'</span>, value: 79},        {name: <span class="string">'衡水'</span>, value: 80},        {name: <span class="string">'包头'</span>, value: 80},        {name: <span class="string">'绵阳'</span>, value: 80},        {name: <span class="string">'乌鲁木齐'</span>, value: 84},        {name: <span class="string">'枣庄'</span>, value: 84},        {name: <span class="string">'杭州'</span>, value: 84},        {name: <span class="string">'淄博'</span>, value: 85},        {name: <span class="string">'鞍山'</span>, value: 86},        {name: <span class="string">'溧阳'</span>, value: 86},        {name: <span class="string">'库尔勒'</span>, value: 86},        {name: <span class="string">'安阳'</span>, value: 90},        {name: <span class="string">'开封'</span>, value: 90},        {name: <span class="string">'济南'</span>, value: 92},        {name: <span class="string">'德阳'</span>, value: 93},        {name: <span class="string">'温州'</span>, value: 95},        {name: <span class="string">'九江'</span>, value: 96},        {name: <span class="string">'邯郸'</span>, value: 98},        {name: <span class="string">'临安'</span>, value: 99},        {name: <span class="string">'兰州'</span>, value: 99},        {name: <span class="string">'沧州'</span>, value: 100},        {name: <span class="string">'临沂'</span>, value: 103},        {name: <span class="string">'南充'</span>, value: 104},        {name: <span class="string">'天津'</span>, value: 105},        {name: <span class="string">'富阳'</span>, value: 106},        {name: <span class="string">'泰安'</span>, value: 112},        {name: <span class="string">'诸暨'</span>, value: 112},        {name: <span class="string">'郑州'</span>, value: 113},        {name: <span class="string">'哈尔滨'</span>, value: 114},        {name: <span class="string">'聊城'</span>, value: 116},        {name: <span class="string">'芜湖'</span>, value: 117},        {name: <span class="string">'唐山'</span>, value: 119},        {name: <span class="string">'平顶山'</span>, value: 119},        {name: <span class="string">'邢台'</span>, value: 119},        {name: <span class="string">'德州'</span>, value: 120},        {name: <span class="string">'济宁'</span>, value: 120},        {name: <span class="string">'荆州'</span>, value: 127},        {name: <span class="string">'宜昌'</span>, value: 130},        {name: <span class="string">'义乌'</span>, value: 132},        {name: <span class="string">'丽水'</span>, value: 133},        {name: <span class="string">'洛阳'</span>, value: 134},        {name: <span class="string">'秦皇岛'</span>, value: 136},        {name: <span class="string">'株洲'</span>, value: 143},        {name: <span class="string">'石家庄'</span>, value: 147},        {name: <span class="string">'莱芜'</span>, value: 148},        {name: <span class="string">'常德'</span>, value: 152},        {name: <span class="string">'保定'</span>, value: 153},        {name: <span class="string">'湘潭'</span>, value: 154},        {name: <span class="string">'金华'</span>, value: 157},        {name: <span class="string">'岳阳'</span>, value: 169},        {name: <span class="string">'长沙'</span>, value: 175},        {name: <span class="string">'衢州'</span>, value: 177},        {name: <span class="string">'廊坊'</span>, value: 193},        {name: <span class="string">'菏泽'</span>, value: 194},        {name: <span class="string">'合肥'</span>, value: 229},        {name: <span class="string">'武汉'</span>, value: 273},        {name: <span class="string">'大庆'</span>, value: 279}    ];    var $ = <span class="keyword">function</span> (id) {        <span class="built_in">return</span> document.getElementById(id)    };    var <span class="variable">$cityBox</span> = $(<span class="string">'cityBox'</span>);    var <span class="variable">$input</span> = $(<span class="string">'inp'</span>);    var preVal = <span class="variable">$input</span>.value;    //重点将input内容进行search    var engine = new PinyinEngine(demoData,[<span class="string">'name'</span>]);    //初始加载    loadCity(demoData);    //加载所有数据    <span class="keyword">function</span> loadCity(data) {        //判断是否为空        <span class="keyword">if</span>(data.length === 0){            var <span class="variable">$li</span> = document.createElement(<span class="string">"li"</span>);            <span class="variable">$li</span>.innerText = <span class="string">'未找到！！！！！！'</span>;            <span class="variable">$cityBox</span>.appendChild(<span class="variable">$li</span>);            <span class="built_in">return</span> <span class="literal">false</span>;        }        //循环插入        <span class="keyword">for</span> (var i=0;i&lt;data.length;i++){            var <span class="variable">$li</span> = document.createElement(<span class="string">"li"</span>);            <span class="variable">$li</span>.innerText = data[i].name;            <span class="variable">$cityBox</span>.appendChild(<span class="variable">$li</span>)        }    }    //input改变进行search    <span class="variable">$input</span>.oninput = <span class="variable">$input</span>.onpropertychange = <span class="function"><span class="title">function</span></span> () {        var val = <span class="variable">$input</span>.value;        <span class="keyword">if</span> (val === preVal) <span class="built_in">return</span>;        preVal = <span class="variable">$input</span>.value;        <span class="keyword">if</span> (val === <span class="string">''</span>) {            loadCity(demoData);        } <span class="keyword">else</span> {            <span class="variable">$cityBox</span>.innerText = <span class="string">''</span>;            var list = engine.query(val);            loadCity(list);        };    }&lt;/script&gt;&lt;/html&gt;</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;对于前端而言一些简单的查询还是不用需要后台配合的，前端自己也可以处理，最简单的就是用indexof判断进行显示隐藏，下面记录一个比较不错的方法，可以支持汉字、拼音、拼音首字母大写小写。&lt;/p&gt;
&lt;p&gt;pinyin-engine 是一个简单高效的JavaScript拼音本地匹
      
    
    </summary>
    
      <category term="js" scheme="http://zhouyanwei.cn/categories/js/"/>
    
    
      <category term="模糊查询" scheme="http://zhouyanwei.cn/tags/%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2/"/>
    
  </entry>
  
  <entry>
    <title>vivo手机H5页面ERROR</title>
    <link href="http://zhouyanwei.cn/2018/07/26/vivo-error/"/>
    <id>http://zhouyanwei.cn/2018/07/26/vivo-error/</id>
    <published>2018-07-25T16:00:00.000Z</published>
    <updated>2018-08-02T02:28:11.121Z</updated>
    
    <content type="html"><![CDATA[<p>今天收到用户反馈，vivo手机我们的app H5页面怎么显示的不对啊，让后我们就测试了好几个机型，华为、小米、oppo、酷派，都没有问题啊，安卓小哥虚拟机都用上了。<br><a id="more"></a></p><p>后来安卓小哥用vivo手机测试在log处发现了报错，让后打开js一看有这个 ` 符号，还有这个Array.from()，${ele}等。</p><p>这都是ES6语法啊，原来vivo手机居然不支持ES6</p><p>都这么久了vivo还不支持ES6！！！！！！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天收到用户反馈，vivo手机我们的app H5页面怎么显示的不对啊，让后我们就测试了好几个机型，华为、小米、oppo、酷派，都没有问题啊，安卓小哥虚拟机都用上了。&lt;br&gt;
    
    </summary>
    
      <category term="js" scheme="http://zhouyanwei.cn/categories/js/"/>
    
    
      <category term="vivo error" scheme="http://zhouyanwei.cn/tags/vivo-error/"/>
    
  </entry>
  
  <entry>
    <title>AJAX error参数及状态码</title>
    <link href="http://zhouyanwei.cn/2018/07/11/ajax-error/"/>
    <id>http://zhouyanwei.cn/2018/07/11/ajax-error/</id>
    <published>2018-07-10T16:00:00.000Z</published>
    <updated>2018-07-11T02:36:10.866Z</updated>
    
    <content type="html"><![CDATA[<h1 id="先来看AJAX-error-里有哪些参数"><a href="#先来看AJAX-error-里有哪些参数" class="headerlink" title="先来看AJAX error 里有哪些参数"></a>先来看AJAX error 里有哪些参数</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    <span class="built_in">type</span>:<span class="string">"post"</span>,</span><br><span class="line">    url:<span class="string">""</span>,</span><br><span class="line">    dataType:<span class="string">"json"</span>,</span><br><span class="line">    data:&#123;&#125;,</span><br><span class="line">    success:<span class="keyword">function</span>(res)&#123;</span><br><span class="line">        console.log(res)</span><br><span class="line">    &#125;,</span><br><span class="line">    error: <span class="keyword">function</span>(jqXHR, textStatus, errorThrown) &#123;</span><br><span class="line">        console.log(jqXHR.readyState);</span><br><span class="line">        console.log(jqXHR.status);</span><br><span class="line">        console.log(jqXHR.statusText);</span><br><span class="line">        console.log(jqXHR.responseText);</span><br><span class="line">        console.log(textStatus);</span><br><span class="line">        console.log(errorThrown);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="参数一（jqXHR）"><a href="#参数一（jqXHR）" class="headerlink" title="参数一（jqXHR）"></a>参数一（jqXHR）</h1><p>jqXHR是一个jqXHR对象，在Jquery1.4和1.4版本之前返回的是XMLHttpRequest对象，1.5版本以后则开始使用jqXHR对象，该对象是一个超集，就是该对象不仅包括XMLHttpRequest对象，还包含其他更多的详细属性和信息。</p><h2 id="readyState"><a href="#readyState" class="headerlink" title="readyState"></a>readyState</h2><p>当前状态<br>0 － （未初始化）还没有调用send()方法<br>1 － （载入）已调用send()方法，正在发送请求 ，服务器连接已建立<br>2 － （载入完成）send()方法执行完成，已经接收到全部响应内容 ，请求已接收<br>3 － （交互）正在解析响应内容 ， 请求处理中<br>4 － （完成）响应内容解析完成，可以在客户端调用了，请求已完成，且响应已就绪</p><h2 id="status"><a href="#status" class="headerlink" title="status"></a>status</h2><p>返回的HTTP状态码，比如常见的404,500等错误代码。</p><h2 id="statusText"><a href="#statusText" class="headerlink" title="statusText"></a>statusText</h2><p>对应状态码的错误信息，比如404错误信息是not found,500是Internal Server Error。</p><h2 id="responseText"><a href="#responseText" class="headerlink" title="responseText"></a>responseText</h2><p>服务器响应返回的文本信息</p><h1 id="参数二（textStatus）"><a href="#参数二（textStatus）" class="headerlink" title="参数二（textStatus）"></a>参数二（textStatus）</h1><p>返回的是字符串类型，表示返回的状态，根据服务器不同的错误可能返回下面这些信息：”timeout”（超时）, “error”（错误）, “abort”(中止), “parsererror”（解析错误），还有可能返回空值。</p><h1 id="参数三（errorThrown）"><a href="#参数三（errorThrown）" class="headerlink" title="参数三（errorThrown）"></a>参数三（errorThrown）</h1><p>也是字符串类型，表示服务器抛出返回的错误信息，如果产生的是HTTP错误，那么返回的信息就是HTTP状态码对应的错误信息，比如404的Not Found,500错误的Internal Server Error。</p><h1 id="AJAX状态码说明"><a href="#AJAX状态码说明" class="headerlink" title="AJAX状态码说明"></a>AJAX状态码说明</h1><h2 id="0-—状态未初始化"><a href="#0-—状态未初始化" class="headerlink" title="0**—状态未初始化"></a>0**—状态未初始化</h2><h2 id="1-—请求收到，继续处理"><a href="#1-—请求收到，继续处理" class="headerlink" title="1**—请求收到，继续处理"></a>1**—请求收到，继续处理</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">100—客户必须继续发出请求</span><br><span class="line">101—客户要求服务器根据请求转换HTTP协议版本</span><br></pre></td></tr></table></figure><h2 id="2-—操作成功收到，分析、接受"><a href="#2-—操作成功收到，分析、接受" class="headerlink" title="2**—操作成功收到，分析、接受"></a>2**—操作成功收到，分析、接受</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">200—交易成功</span><br><span class="line">201—提示知道新文件的URL</span><br><span class="line">202—接受和处理、但处理未完成</span><br><span class="line">203—返回信息不确定或不完整</span><br><span class="line">204—请求收到，但返回信息为空</span><br><span class="line">205—服务器完成了请求，用户代理必须复位当前已经浏览过的文件</span><br><span class="line">206—服务器已经完成了部分用户的GET请求</span><br></pre></td></tr></table></figure><h2 id="3-—完成此请求必须进一步处理"><a href="#3-—完成此请求必须进一步处理" class="headerlink" title="3**—完成此请求必须进一步处理"></a>3**—完成此请求必须进一步处理</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">300—请求的资源可在多处得到</span><br><span class="line">301—删除请求数据</span><br><span class="line">302—在其他地址发现了请求数据</span><br><span class="line">303—建议客户访问其他URL或访问方式</span><br><span class="line">304—客户端已经执行了GET，但文件未变化</span><br><span class="line">305—请求的资源必须从服务器指定的地址得到</span><br><span class="line">306—前一版本HTTP中使用的代码，现行版本中不再使用</span><br><span class="line">307—申明请求的资源临时性删除</span><br></pre></td></tr></table></figure><h2 id="3-—完成此请求必须进一步处理-1"><a href="#3-—完成此请求必须进一步处理-1" class="headerlink" title="3**—完成此请求必须进一步处理"></a>3**—完成此请求必须进一步处理</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">300—请求的资源可在多处得到</span><br><span class="line">301—删除请求数据</span><br><span class="line">302—在其他地址发现了请求数据</span><br><span class="line">303—建议客户访问其他URL或访问方式</span><br><span class="line">304—客户端已经执行了GET，但文件未变化</span><br><span class="line">305—请求的资源必须从服务器指定的地址得到</span><br><span class="line">306—前一版本HTTP中使用的代码，现行版本中不再使用</span><br><span class="line">307—申明请求的资源临时性删除</span><br></pre></td></tr></table></figure><h2 id="4-—请求包含一个错误语法或不能完成"><a href="#4-—请求包含一个错误语法或不能完成" class="headerlink" title="4**—请求包含一个错误语法或不能完成"></a>4**—请求包含一个错误语法或不能完成</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">401—请求授权失败</span><br><span class="line">401.1-登录失败。  </span><br><span class="line">401.2-服务器配置导致登录失败。  </span><br><span class="line">401.3-由于ACL对资源的限制而未获得授权。  </span><br><span class="line">401.4-筛选器授权失败</span><br><span class="line">401.5-ISAPI/CGI应用程序授权失败。  </span><br><span class="line">401.7–访问被Web服务器上的URL授权策略拒绝。这个错误代码为IIS6.0所专用。  </span><br><span class="line">402—保留有效ChargeTo头响应</span><br><span class="line">403—请求不允许</span><br><span class="line">403.1-执行访问被禁止。  </span><br><span class="line">403.2-读访问被禁止。  </span><br><span class="line">403.3-写访问被禁止。  </span><br><span class="line">403.4-要求SSL。  </span><br><span class="line">403.5-要求SSL128。  </span><br><span class="line">403.6-IP地址被拒绝。  </span><br><span class="line">403.7-要求客户端证书。  </span><br><span class="line">403.8-站点访问被拒绝。  </span><br><span class="line">403.9-用户数过多。  </span><br><span class="line">403.10-配置无效。  </span><br><span class="line">403.11-密码更改。  </span><br><span class="line">403.12-拒绝访问映射表。  </span><br><span class="line">403.13-客户端证书被吊销。  </span><br><span class="line">403.14-拒绝目录列表。  </span><br><span class="line">403.15-超出客户端访问许可。  </span><br><span class="line">403.16-客户端证书不受信任或无效。  </span><br><span class="line">403.17-客户端证书已过期或尚未生效。  </span><br><span class="line">403.18-在当前的应用程序池中不能执行所请求的URL。这个错误代码为IIS6.0所专用。  </span><br><span class="line">403.19-不能为这个应用程序池中的客户端执行CGI。这个错误代码为IIS6.0所专用。  </span><br><span class="line">403.20-Passport登录失败。这个错误代码为IIS6.0所专用。  </span><br><span class="line">404—没有发现文件、查询或URl</span><br><span class="line">404.0-（无）–没有找到文件或目录。  </span><br><span class="line">404.1-无法在所请求的端口上访问Web站点。  </span><br><span class="line">404.2-Web服务扩展锁定策略阻止本请求。  </span><br><span class="line">404.3-MIME映射策略阻止本请求。  </span><br><span class="line">405—用户在Request-Line字段定义的方法不允许</span><br><span class="line">406—根据用户发送的Accept拖，请求资源不可访问</span><br><span class="line">407—类似401，用户必须首先在代理服务器上得到授权</span><br><span class="line">408—客户端没有在用户指定的饿时间内完成请求</span><br><span class="line">409—对当前资源状态，请求不能完成</span><br><span class="line">410—服务器上不再有此资源且无进一步的参考地址</span><br><span class="line">411—服务器拒绝用户定义的Content-Length属性请求</span><br><span class="line">412—一个或多个请求头字段在当前请求中错误</span><br><span class="line">413—请求的资源大于服务器允许的大小</span><br><span class="line">414—请求的资源URL长于服务器允许的长度</span><br><span class="line">415—请求资源不支持请求项目格式</span><br><span class="line">416—请求中包含Range请求头字段，在当前请求资源范围内没有range指示值，请求也不包含If-Range请求头字段</span><br><span class="line">417—服务器不满足请求Expect头字段指定的期望值，如果是代理服务器，可能是下一级服务器不能满足请求</span><br><span class="line">423–锁定的错误。</span><br></pre></td></tr></table></figure><h2 id="5-—服务器错误"><a href="#5-—服务器错误" class="headerlink" title="5**—服务器错误"></a>5**—服务器错误</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">500—服务器产生内部错误</span><br><span class="line">500.12-应用程序正忙于在Web服务器上重新启动。  </span><br><span class="line">500.13-Web服务器太忙。  </span><br><span class="line">500.15-不允许直接请求Global.asa。  </span><br><span class="line">500.16–UNC授权凭据不正确。这个错误代码为IIS6.0所专用。  </span><br><span class="line">500.18–URL授权存储不能打开。这个错误代码为IIS6.0所专用。  </span><br><span class="line">500.100-内部ASP错误。  </span><br><span class="line">501—服务器不支持请求的函数</span><br><span class="line">502—服务器暂时不可用，有时是为了防止发生系统过载</span><br><span class="line">502.1-CGI应用程序超时。  </span><br><span class="line">502.2-CGI应用程序出错。application.  </span><br><span class="line">503—服务器过载或暂停维修，这个错误代码为IIS6.0所专用。  </span><br><span class="line">504—关口过载，服务器使用另一个关口或服务来响应用户，等待时间设定值较长</span><br><span class="line">505—服务器不支持或拒绝支请求头中指定的HTTP版本</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;先来看AJAX-error-里有哪些参数&quot;&gt;&lt;a href=&quot;#先来看AJAX-error-里有哪些参数&quot; class=&quot;headerlink&quot; title=&quot;先来看AJAX error 里有哪些参数&quot;&gt;&lt;/a&gt;先来看AJAX error 里有哪些参数&lt;/h1&gt;&lt;
      
    
    </summary>
    
      <category term="jq" scheme="http://zhouyanwei.cn/categories/jq/"/>
    
    
      <category term="AJAX error" scheme="http://zhouyanwei.cn/tags/AJAX-error/"/>
    
      <category term="AJAX 状态码" scheme="http://zhouyanwei.cn/tags/AJAX-%E7%8A%B6%E6%80%81%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>event.stopPropagation()、event.stopPropagation()、 return false 理解与兼容</title>
    <link href="http://zhouyanwei.cn/2018/07/10/stopPropagation/"/>
    <id>http://zhouyanwei.cn/2018/07/10/stopPropagation/</id>
    <published>2018-07-09T16:00:00.000Z</published>
    <updated>2018-07-10T06:33:31.080Z</updated>
    
    <content type="html"><![CDATA[<p>这个布局div里有一个a链接，我们队div和a都添加点击事件（使用jq方法添加点击事件）来查看效果。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">"testBox"</span>&gt;</span><br><span class="line">    &lt;a href=<span class="string">"https://www.baidu.com/"</span> target=<span class="string">"_blank"</span>&gt;百度一下&lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">$(<span class="string">'.testBox'</span>).click(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">    console.log(1);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(<span class="string">'.testBox a'</span>).click(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">    console.log(2);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h1 id="默认情况下"><a href="#默认情况下" class="headerlink" title="默认情况下"></a>默认情况下</h1><p>控制台输出结果为2、1并且跳转打开链接。<br>因为事件冒泡原理，DOM上触发事件后，通过DOM树往上，在每一级父元素上触发。<br>有时候我们想先不执行跳转链接或者只执行当前DOM的事件，我们就用到下面的了。</p><h1 id="event-preventDefault-阻止默认行为"><a href="#event-preventDefault-阻止默认行为" class="headerlink" title="event.preventDefault();//阻止默认行为"></a>event.preventDefault();//阻止默认行为</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'.testBox a'</span>).click(<span class="keyword">function</span> (event) &#123;</span><br><span class="line">    event.preventDefault();</span><br><span class="line">    console.log(2);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>控制台输出结果为2、1链接没有跳转。<br>阻止事件的默认行为，但不阻止冒泡。<br>如果考虑IE还需要进行兼容（用三元表达式进行兼容）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">event.preventDefault ? event.preventDefault() : event.returnValue=<span class="literal">false</span>;</span><br></pre></td></tr></table></figure></p><h1 id="event-stopPropagation-阻止事件冒泡"><a href="#event-stopPropagation-阻止事件冒泡" class="headerlink" title="event.stopPropagation();//阻止事件冒泡"></a>event.stopPropagation();//阻止事件冒泡</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'.testBox a'</span>).click(<span class="keyword">function</span> (event) &#123;</span><br><span class="line">    event.stopPropagation();</span><br><span class="line">    console.log(2);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>控制台输出结果为2并且跳转打开链接。<br>阻止事件的冒泡，但不阻止事件的默认行为。<br>如果考虑IE还需要进行兼容（用三元表达式进行兼容）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">event.stopPropagation ? event.stopPropagation() : event.cancelBubble=<span class="literal">true</span>;</span><br></pre></td></tr></table></figure></p><h1 id="return-false"><a href="#return-false" class="headerlink" title="return false;"></a>return false;</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'.testBox a'</span>).get(0).addEventListener(<span class="string">"click"</span>,<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">    <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">     console.log(2);</span><br><span class="line">&#125;,<span class="literal">false</span>);</span><br></pre></td></tr></table></figure><p>控制台输出结果为1并且跳转打开链接。<br>若使用a.addEventListener,则return false 不会阻止默认行为；<br>使用原生js时，若要阻止默认行为，最好还是用event.preventDefault（针对非IE）或event.returnValue=false（针对IE）来设定。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'.testBox a'</span>).click(<span class="keyword">function</span> (event) &#123;</span><br><span class="line">    <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">    console.log(2);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>控制台没有输出结果链接也咩有进行跳转。<br>使用a.onclick或a.attachEvent,则 return false会阻止默认行为；<br>使用jquery，return false 即会阻止默认行为，也会阻止事件的冒泡。在jquery中，一般使用return false.</p><p><strong><em>在使用的时候要注意return false;后面的代码不会执行。</em></strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这个布局div里有一个a链接，我们队div和a都添加点击事件（使用jq方法添加点击事件）来查看效果。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line
      
    
    </summary>
    
      <category term="js" scheme="http://zhouyanwei.cn/categories/js/"/>
    
    
      <category term="event.stopPropagation();" scheme="http://zhouyanwei.cn/tags/event-stopPropagation/"/>
    
      <category term="event.preventDefault();" scheme="http://zhouyanwei.cn/tags/event-preventDefault/"/>
    
      <category term="return false;" scheme="http://zhouyanwei.cn/tags/return-false/"/>
    
  </entry>
  
  <entry>
    <title>时间戳与时间获取</title>
    <link href="http://zhouyanwei.cn/2018/07/09/timer/"/>
    <id>http://zhouyanwei.cn/2018/07/09/timer/</id>
    <published>2018-07-08T16:00:00.000Z</published>
    <updated>2018-07-09T01:50:44.152Z</updated>
    
    <content type="html"><![CDATA[<h1 id="时间转时间戳"><a href="#时间转时间戳" class="headerlink" title="时间转时间戳"></a>时间转时间戳</h1><h2 id="1-Date-parse-new-Date-不推荐这种办法，毫秒级别的数值被转化为000"><a href="#1-Date-parse-new-Date-不推荐这种办法，毫秒级别的数值被转化为000" class="headerlink" title="1.Date.parse(new Date()) 不推荐这种办法，毫秒级别的数值被转化为000"></a>1.Date.parse(new Date()) 不推荐这种办法，毫秒级别的数值被转化为000</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var timestamp1 = Date.parse(new Date());</span><br><span class="line">console.log(timestamp1); //1531100204000</span><br></pre></td></tr></table></figure><h2 id="2-new-Date-valueOf-通过valueOf-函数返回指定对象的原始值获得准确的时间戳值"><a href="#2-new-Date-valueOf-通过valueOf-函数返回指定对象的原始值获得准确的时间戳值" class="headerlink" title="2.(new Date()).valueOf() 通过valueOf()函数返回指定对象的原始值获得准确的时间戳值"></a>2.(new Date()).valueOf() 通过valueOf()函数返回指定对象的原始值获得准确的时间戳值</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var timestamp2 = (new Date()).valueOf();</span><br><span class="line">console.log(timestamp2); //1531100216013</span><br></pre></td></tr></table></figure><h2 id="3-new-Date-getTime-通过原型方法直接获得当前时间的毫秒值，准确"><a href="#3-new-Date-getTime-通过原型方法直接获得当前时间的毫秒值，准确" class="headerlink" title="3.new Date().getTime() 通过原型方法直接获得当前时间的毫秒值，准确"></a>3.new Date().getTime() 通过原型方法直接获得当前时间的毫秒值，准确</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var timestamp3 = new Date().getTime();</span><br><span class="line">console.log(timestamp3); //1531100225639</span><br></pre></td></tr></table></figure><h2 id="4-Number-new-Date-将时间转化为一个number类型的数值，即时间戳"><a href="#4-Number-new-Date-将时间转化为一个number类型的数值，即时间戳" class="headerlink" title="4.Number(new Date()) 将时间转化为一个number类型的数值，即时间戳"></a>4.Number(new Date()) 将时间转化为一个number类型的数值，即时间戳</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var timetamp4 = Number(new Date());</span><br><span class="line">console.log(timetamp4); //1531100238110</span><br></pre></td></tr></table></figure><h2 id="5-Date-now-ES5给Date提供了一种获取时间戳的新特性"><a href="#5-Date-now-ES5给Date提供了一种获取时间戳的新特性" class="headerlink" title="5.Date.now() ES5给Date提供了一种获取时间戳的新特性"></a>5.Date.now() ES5给Date提供了一种获取时间戳的新特性</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var timetamp5 = Date.now();</span><br><span class="line">console.log(timetamp5); //1531100248079</span><br></pre></td></tr></table></figure><h1 id="获取当前时间"><a href="#获取当前时间" class="headerlink" title="获取当前时间"></a>获取当前时间</h1><p>一个获取当前时间的函数，比较不错，好用。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">Date.prototype.pattern=<span class="keyword">function</span>(fmt) &#123;</span><br><span class="line">    var o = &#123;</span><br><span class="line">        <span class="string">"M+"</span> : this.getMonth()+1, //月份</span><br><span class="line">        <span class="string">"d+"</span> : this.getDate(), //日</span><br><span class="line">        <span class="string">"h+"</span> : this.getHours()%12 == 0 ? 12 : this.getHours()%12, //小时</span><br><span class="line">        <span class="string">"H+"</span> : this.getHours(), //小时</span><br><span class="line">        <span class="string">"m+"</span> : this.getMinutes(), //分</span><br><span class="line">        <span class="string">"s+"</span> : this.getSeconds(), //秒</span><br><span class="line">        <span class="string">"q+"</span> : Math.floor((this.getMonth()+3)/3), //季度</span><br><span class="line">        <span class="string">"S"</span> : this.getMilliseconds() //毫秒，</span><br><span class="line">    &#125;;</span><br><span class="line">    var week = &#123;</span><br><span class="line">        <span class="string">"0"</span> : <span class="string">"星期日"</span>,</span><br><span class="line">        <span class="string">"1"</span> : <span class="string">"星期一"</span>,</span><br><span class="line">        <span class="string">"2"</span> : <span class="string">"星期二"</span>,</span><br><span class="line">        <span class="string">"3"</span> : <span class="string">"星期三"</span>,</span><br><span class="line">        <span class="string">"4"</span> : <span class="string">"星期四"</span>,</span><br><span class="line">        <span class="string">"5"</span> : <span class="string">"星期五"</span>,</span><br><span class="line">        <span class="string">"6"</span> : <span class="string">"星期六"</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">if</span>(/(y+)/.<span class="built_in">test</span>(fmt))&#123;</span><br><span class="line">        fmt=fmt.replace(RegExp.<span class="variable">$1</span>, (this.getFullYear()+<span class="string">""</span>).substr(4 - RegExp.<span class="variable">$1</span>.length));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(/(E+)/.<span class="built_in">test</span>(fmt))&#123;</span><br><span class="line">        fmt=fmt.replace(RegExp.<span class="variable">$1</span>, ((RegExp.<span class="variable">$1</span>.length&gt;1) ? (RegExp.<span class="variable">$1</span>.length&gt;2 ? <span class="string">"/u661f/u671f"</span> : <span class="string">"/u5468"</span>) : <span class="string">""</span>)+week[this.getDay()+<span class="string">""</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(var k <span class="keyword">in</span> o)&#123;</span><br><span class="line">        <span class="keyword">if</span>(new RegExp(<span class="string">"("</span>+ k +<span class="string">")"</span>).<span class="built_in">test</span>(fmt))&#123;</span><br><span class="line">            fmt = fmt.replace(RegExp.<span class="variable">$1</span>, (RegExp.<span class="variable">$1</span>.length==1) ? (o[k]) : ((<span class="string">"00"</span>+ o[k]).substr((<span class="string">""</span>+ o[k]).length)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> fmt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>使用方法如下 yyyy(年) MM(月) dd(日) HH(时) mm(分) ss(秒) 随意搭配可以调换顺序使用</p><pre><code class="bash">console.log(new Date().pattern(<span class="string">"HH:mm"</span>));//09:41console.log(new Date().pattern(<span class="string">"yyyy-MM-dd HH:mm"</span>));//2018-07-09 09:41console.log(new Date().pattern(<span class="string">"yyyy年MM月dd日 HH:mm"</span>));//2018年07月09日 09:41console.log(new Date().pattern(<span class="string">"yyyy年MM月dd日 HH:mm:ss"</span>));//2018年07月09日 09:41:55console.log(new Date().pattern(<span class="string">"HH:mm yyyy年MM月dd日 E"</span>));//09:41 2018年07月09日 星期一</code></pre><h1 id="移动端比较不错的时间插件-lCalendar-js"><a href="#移动端比较不错的时间插件-lCalendar-js" class="headerlink" title="移动端比较不错的时间插件 lCalendar.js"></a>移动端比较不错的时间插件 lCalendar.js</h1><p>详情可以点击此链接查看 <a href="http://www.jq22.com/jquery-info13497" target="_blank" rel="noopener">手机端日期插件lCalendar.js</a></p><p>多多记录，方便以后查看。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;时间转时间戳&quot;&gt;&lt;a href=&quot;#时间转时间戳&quot; class=&quot;headerlink&quot; title=&quot;时间转时间戳&quot;&gt;&lt;/a&gt;时间转时间戳&lt;/h1&gt;&lt;h2 id=&quot;1-Date-parse-new-Date-不推荐这种办法，毫秒级别的数值被转化为000&quot;&gt;&lt;a 
      
    
    </summary>
    
      <category term="time" scheme="http://zhouyanwei.cn/categories/time/"/>
    
    
      <category term="时间戳" scheme="http://zhouyanwei.cn/tags/%E6%97%B6%E9%97%B4%E6%88%B3/"/>
    
      <category term="当前时间" scheme="http://zhouyanwei.cn/tags/%E5%BD%93%E5%89%8D%E6%97%B6%E9%97%B4/"/>
    
  </entry>
  
  <entry>
    <title>slice、splice、split、join、substring、substr</title>
    <link href="http://zhouyanwei.cn/2018/07/08/slice/"/>
    <id>http://zhouyanwei.cn/2018/07/08/slice/</id>
    <published>2018-07-07T16:00:00.000Z</published>
    <updated>2018-07-09T06:01:42.041Z</updated>
    
    <content type="html"><![CDATA[<h1 id="slice"><a href="#slice" class="headerlink" title="slice()"></a>slice()</h1><pre><code class="bash">Array和String对象都有在Array中  slice(i,[j])i为开始截取的索引值,负数代表从末尾算起的索引值，-1为倒数第一个元素 j为结束的索引值，缺省时则获取从i到末尾的所有元素参数返回： 返回索引值从i到j的数组，原数组不改变在String中 slice(i,[j])参数说明： i为开始截取的索引值，负数代表从末尾算起的索引值，-1为倒数第一个字符 j为结束的索引值，缺省时则获取从i到末尾的所有字符</code></pre><h1 id="splice"><a href="#splice" class="headerlink" title="splice()"></a>splice()</h1><pre><code class="bash">存在Array中     方法向/从数组中添加/删除项目，然后返回被删除的项目。 该方法会改变原始数组splice(index,howmany,item1,itemx )index : 必需。整数，规定添加/删除项目的位置，使用负数可从数组结尾处规定位置。howmany: 必需。要删除的项目数量。如果设置为 0，则不会删除项目。item1...itemX : 可选。向数组添加的新项目。返回值  Array  包含被删除项目的新数组，如果有的话。</code></pre><h1 id="substring"><a href="#substring" class="headerlink" title="substring()"></a>substring()</h1><pre><code class="bash">在String中  substring(start,stop)start：表示子字符串的开始位置，stop：表示结束结果。注意：第二个参数应该大于第一个参数。如果出现第一个参数大于第二个参数的情况，substring方法会自动更换两个参数的位置。 </code></pre><h1 id="substr"><a href="#substr" class="headerlink" title="substr()"></a>substr()</h1><pre><code class="bash">在String中，substr（start，length）；start：子字符串的开始位置，length：子字符串的长度。</code></pre><h1 id="split-字符串转数组"><a href="#split-字符串转数组" class="headerlink" title="split() 字符串转数组"></a>split() 字符串转数组</h1><pre><code class="bash">在String中 split（separator，howmany）separator：必需。字符串或正则表达式，从该参数指定的地方分割 stringObject。howmany： 可选。该参数可指定返回的数组的最大长度。如果设置了该参数，返回的子串不会多于这个参数指定的数组。如果没有设置该参数，整个字符串都会被分割，不考虑它的长度。返回值一个字符串数组。该数组是通过在separator指定的边界处将字符串StringObject分割成子串创建的。返回的数组的字符串不包含separator自身但是，如果 separator 是包含子表达式的正则表达式，那么返回的数组中包括与这些子表达式匹配的字串（但不包括与整个正则表达式匹配的文本）与jion（）函数相反效果var str = <span class="string">'ab+c+de'</span>;var a = str.split(<span class="string">'+'</span>); // [ab, c, de]var b = str.split(<span class="string">''</span>); //[a, b, +, c, +, d, e]</code></pre><h1 id="join-字符串转数组"><a href="#join-字符串转数组" class="headerlink" title="join() 字符串转数组"></a>join() 字符串转数组</h1><pre><code class="bash">var a, b,c; a = new Array(a,b,c,d,e); b = a.join(<span class="string">'-'</span>); //a-b-c<span class="_">-d</span><span class="_">-e</span>  使用-拼接数组元素c = a.join(<span class="string">''</span>); //abcde</code></pre><p>多多记录，方便以后查看。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;slice&quot;&gt;&lt;a href=&quot;#slice&quot; class=&quot;headerlink&quot; title=&quot;slice()&quot;&gt;&lt;/a&gt;slice()&lt;/h1&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;Array和String对象都有
在Array中  slice(i
      
    
    </summary>
    
      <category term="js" scheme="http://zhouyanwei.cn/categories/js/"/>
    
    
      <category term="js截取" scheme="http://zhouyanwei.cn/tags/js%E6%88%AA%E5%8F%96/"/>
    
  </entry>
  
  <entry>
    <title>append、appendto、prepend、prependto、after、before</title>
    <link href="http://zhouyanwei.cn/2018/07/07/append/"/>
    <id>http://zhouyanwei.cn/2018/07/07/append/</id>
    <published>2018-07-06T16:00:00.000Z</published>
    <updated>2018-07-09T06:28:38.903Z</updated>
    
    <content type="html"><![CDATA[<h1 id="append"><a href="#append" class="headerlink" title="append()"></a>append()</h1><pre><code class="bash">在被选元素（里）的结尾插入内容表达式：$(selector).append(content);&lt;p&gt;Hello&lt;/p&gt;$(<span class="string">'p'</span>).append(<span class="string">'&lt;b&gt;Zyw&lt;/b&gt;'</span>);&lt;p&gt;    Hello    &lt;b&gt;Zyw&lt;/b&gt;&lt;/p&gt;</code></pre><h1 id="appendTo"><a href="#appendTo" class="headerlink" title="appendTo()"></a>appendTo()</h1><pre><code class="bash">在被选元素（里）的结尾插入内容表达式：$(content).appendTo(selector);&lt;p&gt;Hello&lt;/p&gt;$(<span class="string">'&lt;b&gt;Zyw&lt;/b&gt;'</span>).appendTo($(<span class="string">'p'</span>));&lt;p&gt;    Hello    &lt;b&gt;Zyw&lt;/b&gt;&lt;/p&gt;</code></pre><h1 id="prepend"><a href="#prepend" class="headerlink" title="prepend()"></a>prepend()</h1><pre><code class="bash">在被选元素（里）的开头插入内容表达式：$(selector).prepend(content);&lt;p&gt;Hello&lt;/p&gt;$(<span class="string">'p'</span>).prepend(<span class="string">'&lt;b&gt;Zyw&lt;/b&gt;'</span>);&lt;p&gt;    &lt;b&gt;Zyw&lt;/b&gt;    Hello&lt;/p&gt;</code></pre><h1 id="prependTo"><a href="#prependTo" class="headerlink" title="prependTo()"></a>prependTo()</h1><pre><code class="bash">在被选元素（里）的开头插入内容表达式：$(content).prependTo(selector);&lt;p&gt;Hello&lt;/p&gt;$(<span class="string">'&lt;b&gt;Zyw&lt;/b&gt;'</span>).prependTo($(<span class="string">'p'</span>));&lt;p&gt;    &lt;b&gt;Zyw&lt;/b&gt;    Hello&lt;/p&gt;</code></pre><h1 id="after"><a href="#after" class="headerlink" title="after()"></a>after()</h1><pre><code class="bash">在被选元素（外）之后插入内容表达式：$(selector).after(content);&lt;p&gt;Hello&lt;/p&gt;$(<span class="string">'p'</span>).after(<span class="string">'&lt;b&gt;Zyw&lt;/b&gt;'</span>);&lt;p&gt;Hello&lt;/p&gt;&lt;b&gt;Zyw&lt;/b&gt;</code></pre><h1 id="before"><a href="#before" class="headerlink" title="before()"></a>before()</h1><pre><code class="bash">在被选元素（外）之前插入内容表达式：$(selector).before(content);&lt;p&gt;Hello&lt;/p&gt;$(<span class="string">'p'</span>).before(<span class="string">'&lt;b&gt;Zyw&lt;/b&gt;'</span>);&lt;b&gt;Zyw&lt;/b&gt;&lt;p&gt;Hello&lt;/p&gt;</code></pre><p>多多记录，方便以后查看。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;append&quot;&gt;&lt;a href=&quot;#append&quot; class=&quot;headerlink&quot; title=&quot;append()&quot;&gt;&lt;/a&gt;append()&lt;/h1&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;在被选元素（里）的结尾插入内容
表达式：$(selecto
      
    
    </summary>
    
      <category term="jq" scheme="http://zhouyanwei.cn/categories/jq/"/>
    
    
      <category term="jq插入" scheme="http://zhouyanwei.cn/tags/jq%E6%8F%92%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>Hello Hexo</title>
    <link href="http://zhouyanwei.cn/2018/06/28/hello-hexo/"/>
    <id>http://zhouyanwei.cn/2018/06/28/hello-hexo/</id>
    <published>2018-06-27T16:00:00.000Z</published>
    <updated>2018-07-02T08:48:57.649Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Miss-Dad"><a href="#Miss-Dad" class="headerlink" title="Miss Dad"></a>Miss Dad</h1><p>感觉过了人生过了好久，哪怕在没有时间也要抽出时间陪陪家人，不要失去了才知道珍惜。好久没有写博客了，因为个人原因在加上换了电脑不想在用jekyll写了，觉得太麻烦，这几天工作不是很忙就像在把博客弄回来，选择了Hexo,还是比较方便的。</p><p>下面只记录一下常用的Hexo命令，方便以后回看。</p><h1 id="hexo-new"><a href="#hexo-new" class="headerlink" title="hexo new"></a>hexo new</h1><p>新建一篇标题为 My New Post 的文章，因为标题里有空格，所以加上了引号。文章标题可以在对应 md 文件里改，新建时标题可以写的简单些。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure></p><h1 id="hexo-server-hexo-s"><a href="#hexo-server-hexo-s" class="headerlink" title="hexo server/hexo s"></a>hexo server/hexo s</h1><p>启动本地服务器，用于预览主题。默认地址： <a href="http://localhost:4000/hexo" target="_blank" rel="noopener">http://localhost:4000/hexo</a> s 是 hexo server 的缩写，命令效果一致；预览的同时可以修改文章内容或主题代码，保存后刷新页面即可；对 Hexo 根目录 _config.yml 的修改，需要重启本地服务器后才能预览效果。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server/hexo s</span><br></pre></td></tr></table></figure></p><h1 id="hexo-generate-hexo-g"><a href="#hexo-generate-hexo-g" class="headerlink" title="hexo generate/hexo g"></a>hexo generate/hexo g</h1><p>生成网站静态文件到默认设置的 public 文件夹。便于查看网站生成的静态文件或者手动部署网站；如果使用自动部署，不需要先执行该命令；hexo g 是 hexo generate 的缩写，命令效果一致。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate/hexo g</span><br></pre></td></tr></table></figure></p><h1 id="hexo-deploy-hexo-d"><a href="#hexo-deploy-hexo-d" class="headerlink" title="hexo deploy/hexo d"></a>hexo deploy/hexo d</h1><p>自动生成网站静态文件，并部署到设定的仓库。hexo d 是 hexo deploy 的缩写，命令效果一致。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy/hexo d</span><br></pre></td></tr></table></figure></p><h1 id="hexo-clean"><a href="#hexo-clean" class="headerlink" title="hexo clean"></a>hexo clean</h1><p>清除缓存文件 db.json 和已生成的静态文件 public 。网站显示异常时可以执行这条命令试试。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Miss-Dad&quot;&gt;&lt;a href=&quot;#Miss-Dad&quot; class=&quot;headerlink&quot; title=&quot;Miss Dad&quot;&gt;&lt;/a&gt;Miss Dad&lt;/h1&gt;&lt;p&gt;感觉过了人生过了好久，哪怕在没有时间也要抽出时间陪陪家人，不要失去了才知道珍惜。好久没有写博
      
    
    </summary>
    
    
      <category term="Hexo" scheme="http://zhouyanwei.cn/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>百度地图+echarts3</title>
    <link href="http://zhouyanwei.cn/2017/08/15/echarts+baidu/"/>
    <id>http://zhouyanwei.cn/2017/08/15/echarts+baidu/</id>
    <published>2017-08-14T16:00:00.000Z</published>
    <updated>2018-07-03T06:55:57.150Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>本文介绍的是将百度地图和echarts3版本进行结合使用，首先你需要有百度的AK，没有的话去百度地图开放平台<a href="http://lbsyun.baidu.com/" target="_blank">http://lbsyun.baidu.com/</a>,用百度账号（没有的申请一个）,让后去申请一个ak吧，具体怎么做，可以去度娘一下，好多的，进去找到JavaScript API里面也会有申请方法的，很简单的。</p><p>让后去echarts3官网去下载echarts3吧<a href="http://echarts.baidu.com/download.html" target="_blank">http://echarts.baidu.com/download.html</a></p><p>然后我们还需要一个bmap.js，大家可以点击这里<a href="../../../../link/2017-08-15/bmap.js" target="_black" download="bmap.js">下载bmap.js</a>谷歌浏览器会有安全提示，你可以不用理他，如果你不放心，你可以点击这里<a href="../../../../link/2017-08-15/bmap.js" target="_black">在线预览bmap.js</a>，在自己电脑中新建一个bmap.js的文件，把他们复制进去。</p><p>先看一下效果吧</p><p><div id="map" style="width: 800px;height: 600px;"></div></p><script src="/js/src/echarts.min.js"></script><script src="/js/src/bmap.js"></script><script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=F28AEuS9TLiQeFkEPrktcpk44toP1D0e"></script><script>    var myChart = echarts.init(document.getElementById('map'));    var data = [        {name: '海门', value: 9},        {name: '鄂尔多斯', value: 12},        {name: '招远', value: 12},        {name: '舟山', value: 12},        {name: '齐齐哈尔', value: 14},        {name: '盐城', value: 15},        {name: '赤峰', value: 16},        {name: '青岛', value: 18},        {name: '乳山', value: 18},        {name: '金昌', value: 19},        {name: '泉州', value: 21},        {name: '莱西', value: 21},        {name: '日照', value: 21},        {name: '胶南', value: 22},        {name: '南通', value: 23},        {name: '拉萨', value: 24},        {name: '云浮', value: 24},        {name: '梅州', value: 25},        {name: '文登', value: 25},        {name: '上海', value: 25},        {name: '攀枝花', value: 25},        {name: '威海', value: 25},        {name: '承德', value: 25},        {name: '厦门', value: 26},        {name: '汕尾', value: 26},        {name: '潮州', value: 26},        {name: '丹东', value: 27},        {name: '太仓', value: 27},        {name: '曲靖', value: 27},        {name: '烟台', value: 28},        {name: '福州', value: 29},        {name: '瓦房店', value: 30},        {name: '即墨', value: 30},        {name: '抚顺', value: 31},        {name: '玉溪', value: 31},        {name: '张家口', value: 31},        {name: '阳泉', value: 31},        {name: '莱州', value: 32},        {name: '湖州', value: 32},        {name: '汕头', value: 32},        {name: '昆山', value: 33},        {name: '宁波', value: 33},        {name: '湛江', value: 33},        {name: '揭阳', value: 34},        {name: '荣成', value: 34},        {name: '连云港', value: 35},        {name: '葫芦岛', value: 35},        {name: '常熟', value: 36},        {name: '东莞', value: 36},        {name: '河源', value: 36},        {name: '淮安', value: 36},        {name: '泰州', value: 36},        {name: '南宁', value: 37},        {name: '营口', value: 37},        {name: '惠州', value: 37},        {name: '江阴', value: 37},        {name: '蓬莱', value: 37},        {name: '韶关', value: 38},        {name: '嘉峪关', value: 38},        {name: '广州', value: 38},        {name: '延安', value: 38},        {name: '太原', value: 39},        {name: '清远', value: 39},        {name: '中山', value: 39},        {name: '昆明', value: 39},        {name: '寿光', value: 40},        {name: '盘锦', value: 40},        {name: '长治', value: 41},        {name: '深圳', value: 41},        {name: '珠海', value: 42},        {name: '宿迁', value: 43},        {name: '咸阳', value: 43},        {name: '铜川', value: 44},        {name: '平度', value: 44},        {name: '佛山', value: 44},        {name: '海口', value: 44},        {name: '江门', value: 45},        {name: '章丘', value: 45},        {name: '肇庆', value: 46},        {name: '大连', value: 47},        {name: '临汾', value: 47},        {name: '吴江', value: 47},        {name: '石嘴山', value: 49},        {name: '沈阳', value: 50},        {name: '苏州', value: 50},        {name: '茂名', value: 50},        {name: '嘉兴', value: 51},        {name: '长春', value: 51},        {name: '胶州', value: 52},        {name: '银川', value: 52},        {name: '张家港', value: 52},        {name: '三门峡', value: 53},        {name: '锦州', value: 54},        {name: '南昌', value: 54},        {name: '柳州', value: 54},        {name: '三亚', value: 54},        {name: '自贡', value: 56},        {name: '吉林', value: 56},        {name: '阳江', value: 57},        {name: '泸州', value: 57},        {name: '西宁', value: 57},        {name: '宜宾', value: 58},        {name: '呼和浩特', value: 58},        {name: '成都', value: 58},        {name: '大同', value: 58},        {name: '镇江', value: 59},        {name: '桂林', value: 59},        {name: '张家界', value: 59},        {name: '宜兴', value: 59},        {name: '北海', value: 60},        {name: '西安', value: 61},        {name: '金坛', value: 62},        {name: '东营', value: 62},        {name: '牡丹江', value: 63},        {name: '遵义', value: 63},        {name: '绍兴', value: 63},        {name: '扬州', value: 64},        {name: '常州', value: 64},        {name: '潍坊', value: 65},        {name: '重庆', value: 66},        {name: '台州', value: 67},        {name: '南京', value: 67},        {name: '滨州', value: 70},        {name: '贵阳', value: 71},        {name: '无锡', value: 71},        {name: '本溪', value: 71},        {name: '克拉玛依', value: 72},        {name: '渭南', value: 72},        {name: '马鞍山', value: 72},        {name: '宝鸡', value: 72},        {name: '焦作', value: 75},        {name: '句容', value: 75},        {name: '北京', value: 79},        {name: '徐州', value: 79},        {name: '衡水', value: 80},        {name: '包头', value: 80},        {name: '绵阳', value: 80},        {name: '乌鲁木齐', value: 84},        {name: '枣庄', value: 84},        {name: '杭州', value: 84},        {name: '淄博', value: 85},        {name: '鞍山', value: 86},        {name: '溧阳', value: 86},        {name: '库尔勒', value: 86},        {name: '安阳', value: 90},        {name: '开封', value: 90},        {name: '济南', value: 92},        {name: '德阳', value: 93},        {name: '温州', value: 95},        {name: '九江', value: 96},        {name: '邯郸', value: 98},        {name: '临安', value: 99},        {name: '兰州', value: 99},        {name: '沧州', value: 100},        {name: '临沂', value: 103},        {name: '南充', value: 104},        {name: '天津', value: 105},        {name: '富阳', value: 106},        {name: '泰安', value: 112},        {name: '诸暨', value: 112},        {name: '郑州', value: 113},        {name: '哈尔滨', value: 114},        {name: '聊城', value: 116},        {name: '芜湖', value: 117},        {name: '唐山', value: 119},        {name: '平顶山', value: 119},        {name: '邢台', value: 119},        {name: '德州', value: 120},        {name: '济宁', value: 120},        {name: '荆州', value: 127},        {name: '宜昌', value: 130},        {name: '义乌', value: 132},        {name: '丽水', value: 133},        {name: '洛阳', value: 134},        {name: '秦皇岛', value: 136},        {name: '株洲', value: 143},        {name: '石家庄', value: 147},        {name: '莱芜', value: 148},        {name: '常德', value: 152},        {name: '保定', value: 153},        {name: '湘潭', value: 154},        {name: '金华', value: 157},        {name: '岳阳', value: 169},        {name: '长沙', value: 175},        {name: '衢州', value: 177},        {name: '廊坊', value: 193},        {name: '菏泽', value: 194},        {name: '合肥', value: 229},        {name: '武汉', value: 273},        {name: '大庆', value: 279}    ];    var geoCoordMap = {        '海门':[121.15,31.89],        '鄂尔多斯':[109.781327,39.608266],        '招远':[120.38,37.35],        '舟山':[122.207216,29.985295],        '齐齐哈尔':[123.97,47.33],        '盐城':[120.13,33.38],        '赤峰':[118.87,42.28],        '青岛':[120.33,36.07],        '乳山':[121.52,36.89],        '金昌':[102.188043,38.520089],        '泉州':[118.58,24.93],        '莱西':[120.53,36.86],        '日照':[119.46,35.42],        '胶南':[119.97,35.88],        '南通':[121.05,32.08],        '拉萨':[91.11,29.97],        '云浮':[112.02,22.93],        '梅州':[116.1,24.55],        '文登':[122.05,37.2],        '上海':[121.48,31.22],        '攀枝花':[101.718637,26.582347],        '威海':[122.1,37.5],        '承德':[117.93,40.97],        '厦门':[118.1,24.46],        '汕尾':[115.375279,22.786211],        '潮州':[116.63,23.68],        '丹东':[124.37,40.13],        '太仓':[121.1,31.45],        '曲靖':[103.79,25.51],        '烟台':[121.39,37.52],        '福州':[119.3,26.08],        '瓦房店':[121.979603,39.627114],        '即墨':[120.45,36.38],        '抚顺':[123.97,41.97],        '玉溪':[102.52,24.35],        '张家口':[114.87,40.82],        '阳泉':[113.57,37.85],        '莱州':[119.942327,37.177017],        '湖州':[120.1,30.86],        '汕头':[116.69,23.39],        '昆山':[120.95,31.39],        '宁波':[121.56,29.86],        '湛江':[110.359377,21.270708],        '揭阳':[116.35,23.55],        '荣成':[122.41,37.16],        '连云港':[119.16,34.59],        '葫芦岛':[120.836932,40.711052],        '常熟':[120.74,31.64],        '东莞':[113.75,23.04],        '河源':[114.68,23.73],        '淮安':[119.15,33.5],        '泰州':[119.9,32.49],        '南宁':[108.33,22.84],        '营口':[122.18,40.65],        '惠州':[114.4,23.09],        '江阴':[120.26,31.91],        '蓬莱':[120.75,37.8],        '韶关':[113.62,24.84],        '嘉峪关':[98.289152,39.77313],        '广州':[113.23,23.16],        '延安':[109.47,36.6],        '太原':[112.53,37.87],        '清远':[113.01,23.7],        '中山':[113.38,22.52],        '昆明':[102.73,25.04],        '寿光':[118.73,36.86],        '盘锦':[122.070714,41.119997],        '长治':[113.08,36.18],        '深圳':[114.07,22.62],        '珠海':[113.52,22.3],        '宿迁':[118.3,33.96],        '咸阳':[108.72,34.36],        '铜川':[109.11,35.09],        '平度':[119.97,36.77],        '佛山':[113.11,23.05],        '海口':[110.35,20.02],        '江门':[113.06,22.61],        '章丘':[117.53,36.72],        '肇庆':[112.44,23.05],        '大连':[121.62,38.92],        '临汾':[111.5,36.08],        '吴江':[120.63,31.16],        '石嘴山':[106.39,39.04],        '沈阳':[123.38,41.8],        '苏州':[120.62,31.32],        '茂名':[110.88,21.68],        '嘉兴':[120.76,30.77],        '长春':[125.35,43.88],        '胶州':[120.03336,36.264622],        '银川':[106.27,38.47],        '张家港':[120.555821,31.875428],        '三门峡':[111.19,34.76],        '锦州':[121.15,41.13],        '南昌':[115.89,28.68],        '柳州':[109.4,24.33],        '三亚':[109.511909,18.252847],        '自贡':[104.778442,29.33903],        '吉林':[126.57,43.87],        '阳江':[111.95,21.85],        '泸州':[105.39,28.91],        '西宁':[101.74,36.56],        '宜宾':[104.56,29.77],        '呼和浩特':[111.65,40.82],        '成都':[104.06,30.67],        '大同':[113.3,40.12],        '镇江':[119.44,32.2],        '桂林':[110.28,25.29],        '张家界':[110.479191,29.117096],        '宜兴':[119.82,31.36],        '北海':[109.12,21.49],        '西安':[108.95,34.27],        '金坛':[119.56,31.74],        '东营':[118.49,37.46],        '牡丹江':[129.58,44.6],        '遵义':[106.9,27.7],        '绍兴':[120.58,30.01],        '扬州':[119.42,32.39],        '常州':[119.95,31.79],        '潍坊':[119.1,36.62],        '重庆':[106.54,29.59],        '台州':[121.420757,28.656386],        '南京':[118.78,32.04],        '滨州':[118.03,37.36],        '贵阳':[106.71,26.57],        '无锡':[120.29,31.59],        '本溪':[123.73,41.3],        '克拉玛依':[84.77,45.59],        '渭南':[109.5,34.52],        '马鞍山':[118.48,31.56],        '宝鸡':[107.15,34.38],        '焦作':[113.21,35.24],        '句容':[119.16,31.95],        '北京':[116.46,39.92],        '徐州':[117.2,34.26],        '衡水':[115.72,37.72],        '包头':[110,40.58],        '绵阳':[104.73,31.48],        '乌鲁木齐':[87.68,43.77],        '枣庄':[117.57,34.86],        '杭州':[120.19,30.26],        '淄博':[118.05,36.78],        '鞍山':[122.85,41.12],        '溧阳':[119.48,31.43],        '库尔勒':[86.06,41.68],        '安阳':[114.35,36.1],        '开封':[114.35,34.79],        '济南':[117,36.65],        '德阳':[104.37,31.13],        '温州':[120.65,28.01],        '九江':[115.97,29.71],        '邯郸':[114.47,36.6],        '临安':[119.72,30.23],        '兰州':[103.73,36.03],        '沧州':[116.83,38.33],        '临沂':[118.35,35.05],        '南充':[106.110698,30.837793],        '天津':[117.2,39.13],        '富阳':[119.95,30.07],        '泰安':[117.13,36.18],        '诸暨':[120.23,29.71],        '郑州':[113.65,34.76],        '哈尔滨':[126.63,45.75],        '聊城':[115.97,36.45],        '芜湖':[118.38,31.33],        '唐山':[118.02,39.63],        '平顶山':[113.29,33.75],        '邢台':[114.48,37.05],        '德州':[116.29,37.45],        '济宁':[116.59,35.38],        '荆州':[112.239741,30.335165],        '宜昌':[111.3,30.7],        '义乌':[120.06,29.32],        '丽水':[119.92,28.45],        '洛阳':[112.44,34.7],        '秦皇岛':[119.57,39.95],        '株洲':[113.16,27.83],        '石家庄':[114.48,38.03],        '莱芜':[117.67,36.19],        '常德':[111.69,29.05],        '保定':[115.48,38.85],        '湘潭':[112.91,27.87],        '金华':[119.64,29.12],        '岳阳':[113.09,29.37],        '长沙':[113,28.21],        '衢州':[118.88,28.97],        '廊坊':[116.7,39.53],        '菏泽':[115.480656,35.23375],        '合肥':[117.27,31.86],        '武汉':[114.31,30.52],        '大庆':[125.03,46.58]    };    var convertData = function (data) {        var res = [];        for (var i = 0; i < data.length; i++) {            var geoCoord = geoCoordMap[data[i].name];            if (geoCoord) {                res.push({                    name: data[i].name,                    value: geoCoord.concat(data[i].value)                });            }        }        return res;    };    option = {        title: {            text: '全国主要城市空气质量 - 百度地图',            subtext: 'data from PM25.in',            sublink: 'http://www.pm25.in',            left: 'center'        },        tooltip : {            trigger: 'item'        },        bmap: {            center: [104.114129, 37.550339],            zoom: 5,            roam: true,            mapStyle: {                styleJson: [{                    'featureType': 'water',                    'elementType': 'all',                    'stylers': {                        'color': '#d1d1d1'                    }                }, {                    'featureType': 'land',                    'elementType': 'all',                    'stylers': {                        'color': '#f3f3f3'                    }                }, {                    'featureType': 'railway',                    'elementType': 'all',                    'stylers': {                        'visibility': 'off'                    }                }, {                    'featureType': 'highway',                    'elementType': 'all',                    'stylers': {                        'color': '#fdfdfd'                    }                }, {                    'featureType': 'highway',                    'elementType': 'labels',                    'stylers': {                        'visibility': 'off'                    }                }, {                    'featureType': 'arterial',                    'elementType': 'geometry',                    'stylers': {                        'color': '#fefefe'                    }                }, {                    'featureType': 'arterial',                    'elementType': 'geometry.fill',                    'stylers': {                        'color': '#fefefe'                    }                }, {                    'featureType': 'poi',                    'elementType': 'all',                    'stylers': {                        'visibility': 'off'                    }                }, {                    'featureType': 'green',                    'elementType': 'all',                    'stylers': {                        'visibility': 'off'                    }                }, {                    'featureType': 'subway',                    'elementType': 'all',                    'stylers': {                        'visibility': 'off'                    }                }, {                    'featureType': 'manmade',                    'elementType': 'all',                    'stylers': {                        'color': '#d1d1d1'                    }                }, {                    'featureType': 'local',                    'elementType': 'all',                    'stylers': {                        'color': '#d1d1d1'                    }                }, {                    'featureType': 'arterial',                    'elementType': 'labels',                    'stylers': {                        'visibility': 'off'                    }                }, {                    'featureType': 'boundary',                    'elementType': 'all',                    'stylers': {                        'color': '#fefefe'                    }                }, {                    'featureType': 'building',                    'elementType': 'all',                    'stylers': {                        'color': '#d1d1d1'                    }                }, {                    'featureType': 'label',                    'elementType': 'labels.text.fill',                    'stylers': {                        'color': '#999999'                    }                }]            }        },        series : [            {                name: 'pm2.5',                type: 'scatter',                coordinateSystem: 'bmap',                data: convertData(data),                symbolSize: function (val) {                    return val[2] / 10;                },                label: {                    normal: {                        formatter: '{b}',                        position: 'right',                        show: false                    },                    emphasis: {                        show: true                    }                },                itemStyle: {                    normal: {                        color: 'purple'                    }                }            },            {                name: 'Top 5',                type: 'effectScatter',                coordinateSystem: 'bmap',                data: convertData(data.sort(function (a, b) {                    return b.value - a.value;                }).slice(0, 6)),                symbolSize: function (val) {                    return val[2] / 10;                },                showEffectOn: 'render',                rippleEffect: {                    brushType: 'stroke'                },                hoverAnimation: true,                label: {                    normal: {                        formatter: '{b}',                        position: 'right',                        show: true                    }                },                itemStyle: {                    normal: {                        color: 'purple',                        shadowBlur: 10,                        shadowColor: '#333'                    }                },                zlevel: 1            }        ]    };    myChart.setOption(option);</script><h1 id="头部引入"><a href="#头部引入" class="headerlink" title="头部引入"></a>头部引入</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;百度地图+echarts3&lt;/title&gt;</span><br><span class="line">    &lt;script src=<span class="string">"echarts.min.js"</span>&gt;&lt;/script&gt;//引入echarts</span><br><span class="line">    &lt;script src=<span class="string">"bmap.js"</span>&gt;&lt;/script&gt;//引入bmap</span><br><span class="line">    &lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"http://api.map.baidu.com/api?v=2.0&amp;ak=F28AEuS9TLiQeFkEPrktcpk44toP1D0e"</span>&gt;&lt;/script&gt;//引入你申请的ak</span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure><h1 id="js部分代码"><a href="#js部分代码" class="headerlink" title="js部分代码"></a>js部分代码</h1><p>在这里就把有用的拿出来说一下，下面会给大家所有的代码。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line">bmap: &#123;//这里就是写百度地图的一些场景</span><br><span class="line">        center: [104.114129, 37.550339],//中心显示位置，经纬度</span><br><span class="line">        zoom: 5,//放大倍数</span><br><span class="line">        roam: <span class="literal">true</span>,//允许放大</span><br><span class="line">        mapStyle: &#123;</span><br><span class="line">            styleJson: [&#123;//水的颜色</span><br><span class="line">                <span class="string">'featureType'</span>: <span class="string">'water'</span>,</span><br><span class="line">                <span class="string">'elementType'</span>: <span class="string">'all'</span>,</span><br><span class="line">                <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                    <span class="string">'color'</span>: <span class="string">'#d1d1d1'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;//土地颜色</span><br><span class="line">                <span class="string">'featureType'</span>: <span class="string">'land'</span>,</span><br><span class="line">                <span class="string">'elementType'</span>: <span class="string">'all'</span>,</span><br><span class="line">                <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                    <span class="string">'color'</span>: <span class="string">'#f3f3f3'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;//下面这些标签都是调整地图的，大家可以自行研究</span><br><span class="line">                <span class="string">'featureType'</span>: <span class="string">'railway'</span>,</span><br><span class="line">                <span class="string">'elementType'</span>: <span class="string">'all'</span>,</span><br><span class="line">                <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                    <span class="string">'visibility'</span>: <span class="string">'off'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">'featureType'</span>: <span class="string">'highway'</span>,</span><br><span class="line">                <span class="string">'elementType'</span>: <span class="string">'all'</span>,</span><br><span class="line">                <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                    <span class="string">'color'</span>: <span class="string">'#fdfdfd'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">'featureType'</span>: <span class="string">'highway'</span>,</span><br><span class="line">                <span class="string">'elementType'</span>: <span class="string">'labels'</span>,</span><br><span class="line">                <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                    <span class="string">'visibility'</span>: <span class="string">'off'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">'featureType'</span>: <span class="string">'arterial'</span>,</span><br><span class="line">                <span class="string">'elementType'</span>: <span class="string">'geometry'</span>,</span><br><span class="line">                <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                    <span class="string">'color'</span>: <span class="string">'#fefefe'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">'featureType'</span>: <span class="string">'arterial'</span>,</span><br><span class="line">                <span class="string">'elementType'</span>: <span class="string">'geometry.fill'</span>,</span><br><span class="line">                <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                    <span class="string">'color'</span>: <span class="string">'#fefefe'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">'featureType'</span>: <span class="string">'poi'</span>,</span><br><span class="line">                <span class="string">'elementType'</span>: <span class="string">'all'</span>,</span><br><span class="line">                <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                    <span class="string">'visibility'</span>: <span class="string">'off'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">'featureType'</span>: <span class="string">'green'</span>,</span><br><span class="line">                <span class="string">'elementType'</span>: <span class="string">'all'</span>,</span><br><span class="line">                <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                    <span class="string">'visibility'</span>: <span class="string">'off'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">'featureType'</span>: <span class="string">'subway'</span>,</span><br><span class="line">                <span class="string">'elementType'</span>: <span class="string">'all'</span>,</span><br><span class="line">                <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                    <span class="string">'visibility'</span>: <span class="string">'off'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">'featureType'</span>: <span class="string">'manmade'</span>,</span><br><span class="line">                <span class="string">'elementType'</span>: <span class="string">'all'</span>,</span><br><span class="line">                <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                    <span class="string">'color'</span>: <span class="string">'#d1d1d1'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">'featureType'</span>: <span class="string">'local'</span>,</span><br><span class="line">                <span class="string">'elementType'</span>: <span class="string">'all'</span>,</span><br><span class="line">                <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                    <span class="string">'color'</span>: <span class="string">'#d1d1d1'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">'featureType'</span>: <span class="string">'arterial'</span>,</span><br><span class="line">                <span class="string">'elementType'</span>: <span class="string">'labels'</span>,</span><br><span class="line">                <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                    <span class="string">'visibility'</span>: <span class="string">'off'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">'featureType'</span>: <span class="string">'boundary'</span>,</span><br><span class="line">                <span class="string">'elementType'</span>: <span class="string">'all'</span>,</span><br><span class="line">                <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                    <span class="string">'color'</span>: <span class="string">'#fefefe'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">'featureType'</span>: <span class="string">'building'</span>,</span><br><span class="line">                <span class="string">'elementType'</span>: <span class="string">'all'</span>,</span><br><span class="line">                <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                    <span class="string">'color'</span>: <span class="string">'#d1d1d1'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">'featureType'</span>: <span class="string">'label'</span>,</span><br><span class="line">                <span class="string">'elementType'</span>: <span class="string">'labels.text.fill'</span>,</span><br><span class="line">                <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                    <span class="string">'color'</span>: <span class="string">'#999999'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    series : [//下面的就是echarts的参数设置</span><br><span class="line">        &#123;</span><br><span class="line">            name: <span class="string">'名称'</span>,</span><br><span class="line">            <span class="built_in">type</span>: <span class="string">'scatter'</span>,//散点（气泡）图</span><br><span class="line">            coordinateSystem: <span class="string">'bmap'</span>,</span><br><span class="line">            data: convertData(data),</span><br><span class="line">            symbolSize: 6,</span><br><span class="line">            label: &#123;</span><br><span class="line">                normal: &#123;</span><br><span class="line">                    formatter: <span class="string">'&#123;b&#125;'</span>,</span><br><span class="line">                    position: <span class="string">'right'</span>,</span><br><span class="line">                    show: <span class="literal">false</span></span><br><span class="line">                &#125;,</span><br><span class="line">                emphasis: &#123;</span><br><span class="line">                    show: <span class="literal">true</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            itemStyle: &#123;</span><br><span class="line">                normal: &#123;</span><br><span class="line">                    color: <span class="string">'purple'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">         &#123;</span><br><span class="line">            name: <span class="string">'Top 5'</span>,</span><br><span class="line">            <span class="built_in">type</span>: <span class="string">'effectScatter'</span>,//带有涟漪特效动画的散点（气泡）图</span><br><span class="line">            coordinateSystem: <span class="string">'bmap'</span>,</span><br><span class="line">            data: convertData(data.sort(<span class="keyword">function</span> (a, b) &#123;</span><br><span class="line">                <span class="built_in">return</span> b.value - a.value;</span><br><span class="line">            &#125;).slice(0, 6)),</span><br><span class="line">            symbolSize: <span class="keyword">function</span> (val) &#123;</span><br><span class="line">                <span class="built_in">return</span> val[2] / 10;</span><br><span class="line">            &#125;,</span><br><span class="line">            showEffectOn: <span class="string">'render'</span>,</span><br><span class="line">            rippleEffect: &#123;</span><br><span class="line">                brushType: <span class="string">'stroke'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            hoverAnimation: <span class="literal">true</span>,</span><br><span class="line">            label: &#123;</span><br><span class="line">                normal: &#123;</span><br><span class="line">                    formatter: <span class="string">'&#123;b&#125;'</span>,</span><br><span class="line">                    position: <span class="string">'right'</span>,</span><br><span class="line">                    show: <span class="literal">true</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            itemStyle: &#123;</span><br><span class="line">                normal: &#123;</span><br><span class="line">                    color: <span class="string">'purple'</span>,</span><br><span class="line">                    shadowBlur: 10,</span><br><span class="line">                    shadowColor: <span class="string">'#333'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            zlevel: 1</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br></pre></td></tr></table></figure></p><h1 id="all代码"><a href="#all代码" class="headerlink" title="all代码"></a>all代码</h1><p>所有的代码都在这了。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;百度地图+echarts3&lt;/title&gt;</span><br><span class="line">    &lt;script src=<span class="string">"echarts.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=<span class="string">"bmap.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"http://api.map.baidu.com/api?v=2.0&amp;ak=F28AEuS9TLiQeFkEPrktcpk44toP1D0e"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=<span class="string">"map"</span> style=<span class="string">"width: 800px;height: 600px;"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var myChart = echarts.init(document.getElementById(<span class="string">'map'</span>));</span><br><span class="line">    var data = [</span><br><span class="line">        &#123;name: <span class="string">'海门'</span>, value: 9&#125;,</span><br><span class="line">        &#123;name: <span class="string">'鄂尔多斯'</span>, value: 12&#125;,</span><br><span class="line">        &#123;name: <span class="string">'招远'</span>, value: 12&#125;,</span><br><span class="line">        &#123;name: <span class="string">'舟山'</span>, value: 12&#125;,</span><br><span class="line">        &#123;name: <span class="string">'齐齐哈尔'</span>, value: 14&#125;,</span><br><span class="line">        &#123;name: <span class="string">'盐城'</span>, value: 15&#125;,</span><br><span class="line">        &#123;name: <span class="string">'赤峰'</span>, value: 16&#125;,</span><br><span class="line">        &#123;name: <span class="string">'青岛'</span>, value: 18&#125;,</span><br><span class="line">        &#123;name: <span class="string">'乳山'</span>, value: 18&#125;,</span><br><span class="line">        &#123;name: <span class="string">'金昌'</span>, value: 19&#125;,</span><br><span class="line">        &#123;name: <span class="string">'泉州'</span>, value: 21&#125;,</span><br><span class="line">        &#123;name: <span class="string">'莱西'</span>, value: 21&#125;,</span><br><span class="line">        &#123;name: <span class="string">'日照'</span>, value: 21&#125;,</span><br><span class="line">        &#123;name: <span class="string">'胶南'</span>, value: 22&#125;,</span><br><span class="line">        &#123;name: <span class="string">'南通'</span>, value: 23&#125;,</span><br><span class="line">        &#123;name: <span class="string">'拉萨'</span>, value: 24&#125;,</span><br><span class="line">        &#123;name: <span class="string">'云浮'</span>, value: 24&#125;,</span><br><span class="line">        &#123;name: <span class="string">'梅州'</span>, value: 25&#125;,</span><br><span class="line">        &#123;name: <span class="string">'文登'</span>, value: 25&#125;,</span><br><span class="line">        &#123;name: <span class="string">'上海'</span>, value: 25&#125;,</span><br><span class="line">        &#123;name: <span class="string">'攀枝花'</span>, value: 25&#125;,</span><br><span class="line">        &#123;name: <span class="string">'威海'</span>, value: 25&#125;,</span><br><span class="line">        &#123;name: <span class="string">'承德'</span>, value: 25&#125;,</span><br><span class="line">        &#123;name: <span class="string">'厦门'</span>, value: 26&#125;,</span><br><span class="line">        &#123;name: <span class="string">'汕尾'</span>, value: 26&#125;,</span><br><span class="line">        &#123;name: <span class="string">'潮州'</span>, value: 26&#125;,</span><br><span class="line">        &#123;name: <span class="string">'丹东'</span>, value: 27&#125;,</span><br><span class="line">        &#123;name: <span class="string">'太仓'</span>, value: 27&#125;,</span><br><span class="line">        &#123;name: <span class="string">'曲靖'</span>, value: 27&#125;,</span><br><span class="line">        &#123;name: <span class="string">'烟台'</span>, value: 28&#125;,</span><br><span class="line">        &#123;name: <span class="string">'福州'</span>, value: 29&#125;,</span><br><span class="line">        &#123;name: <span class="string">'瓦房店'</span>, value: 30&#125;,</span><br><span class="line">        &#123;name: <span class="string">'即墨'</span>, value: 30&#125;,</span><br><span class="line">        &#123;name: <span class="string">'抚顺'</span>, value: 31&#125;,</span><br><span class="line">        &#123;name: <span class="string">'玉溪'</span>, value: 31&#125;,</span><br><span class="line">        &#123;name: <span class="string">'张家口'</span>, value: 31&#125;,</span><br><span class="line">        &#123;name: <span class="string">'阳泉'</span>, value: 31&#125;,</span><br><span class="line">        &#123;name: <span class="string">'莱州'</span>, value: 32&#125;,</span><br><span class="line">        &#123;name: <span class="string">'湖州'</span>, value: 32&#125;,</span><br><span class="line">        &#123;name: <span class="string">'汕头'</span>, value: 32&#125;,</span><br><span class="line">        &#123;name: <span class="string">'昆山'</span>, value: 33&#125;,</span><br><span class="line">        &#123;name: <span class="string">'宁波'</span>, value: 33&#125;,</span><br><span class="line">        &#123;name: <span class="string">'湛江'</span>, value: 33&#125;,</span><br><span class="line">        &#123;name: <span class="string">'揭阳'</span>, value: 34&#125;,</span><br><span class="line">        &#123;name: <span class="string">'荣成'</span>, value: 34&#125;,</span><br><span class="line">        &#123;name: <span class="string">'连云港'</span>, value: 35&#125;,</span><br><span class="line">        &#123;name: <span class="string">'葫芦岛'</span>, value: 35&#125;,</span><br><span class="line">        &#123;name: <span class="string">'常熟'</span>, value: 36&#125;,</span><br><span class="line">        &#123;name: <span class="string">'东莞'</span>, value: 36&#125;,</span><br><span class="line">        &#123;name: <span class="string">'河源'</span>, value: 36&#125;,</span><br><span class="line">        &#123;name: <span class="string">'淮安'</span>, value: 36&#125;,</span><br><span class="line">        &#123;name: <span class="string">'泰州'</span>, value: 36&#125;,</span><br><span class="line">        &#123;name: <span class="string">'南宁'</span>, value: 37&#125;,</span><br><span class="line">        &#123;name: <span class="string">'营口'</span>, value: 37&#125;,</span><br><span class="line">        &#123;name: <span class="string">'惠州'</span>, value: 37&#125;,</span><br><span class="line">        &#123;name: <span class="string">'江阴'</span>, value: 37&#125;,</span><br><span class="line">        &#123;name: <span class="string">'蓬莱'</span>, value: 37&#125;,</span><br><span class="line">        &#123;name: <span class="string">'韶关'</span>, value: 38&#125;,</span><br><span class="line">        &#123;name: <span class="string">'嘉峪关'</span>, value: 38&#125;,</span><br><span class="line">        &#123;name: <span class="string">'广州'</span>, value: 38&#125;,</span><br><span class="line">        &#123;name: <span class="string">'延安'</span>, value: 38&#125;,</span><br><span class="line">        &#123;name: <span class="string">'太原'</span>, value: 39&#125;,</span><br><span class="line">        &#123;name: <span class="string">'清远'</span>, value: 39&#125;,</span><br><span class="line">        &#123;name: <span class="string">'中山'</span>, value: 39&#125;,</span><br><span class="line">        &#123;name: <span class="string">'昆明'</span>, value: 39&#125;,</span><br><span class="line">        &#123;name: <span class="string">'寿光'</span>, value: 40&#125;,</span><br><span class="line">        &#123;name: <span class="string">'盘锦'</span>, value: 40&#125;,</span><br><span class="line">        &#123;name: <span class="string">'长治'</span>, value: 41&#125;,</span><br><span class="line">        &#123;name: <span class="string">'深圳'</span>, value: 41&#125;,</span><br><span class="line">        &#123;name: <span class="string">'珠海'</span>, value: 42&#125;,</span><br><span class="line">        &#123;name: <span class="string">'宿迁'</span>, value: 43&#125;,</span><br><span class="line">        &#123;name: <span class="string">'咸阳'</span>, value: 43&#125;,</span><br><span class="line">        &#123;name: <span class="string">'铜川'</span>, value: 44&#125;,</span><br><span class="line">        &#123;name: <span class="string">'平度'</span>, value: 44&#125;,</span><br><span class="line">        &#123;name: <span class="string">'佛山'</span>, value: 44&#125;,</span><br><span class="line">        &#123;name: <span class="string">'海口'</span>, value: 44&#125;,</span><br><span class="line">        &#123;name: <span class="string">'江门'</span>, value: 45&#125;,</span><br><span class="line">        &#123;name: <span class="string">'章丘'</span>, value: 45&#125;,</span><br><span class="line">        &#123;name: <span class="string">'肇庆'</span>, value: 46&#125;,</span><br><span class="line">        &#123;name: <span class="string">'大连'</span>, value: 47&#125;,</span><br><span class="line">        &#123;name: <span class="string">'临汾'</span>, value: 47&#125;,</span><br><span class="line">        &#123;name: <span class="string">'吴江'</span>, value: 47&#125;,</span><br><span class="line">        &#123;name: <span class="string">'石嘴山'</span>, value: 49&#125;,</span><br><span class="line">        &#123;name: <span class="string">'沈阳'</span>, value: 50&#125;,</span><br><span class="line">        &#123;name: <span class="string">'苏州'</span>, value: 50&#125;,</span><br><span class="line">        &#123;name: <span class="string">'茂名'</span>, value: 50&#125;,</span><br><span class="line">        &#123;name: <span class="string">'嘉兴'</span>, value: 51&#125;,</span><br><span class="line">        &#123;name: <span class="string">'长春'</span>, value: 51&#125;,</span><br><span class="line">        &#123;name: <span class="string">'胶州'</span>, value: 52&#125;,</span><br><span class="line">        &#123;name: <span class="string">'银川'</span>, value: 52&#125;,</span><br><span class="line">        &#123;name: <span class="string">'张家港'</span>, value: 52&#125;,</span><br><span class="line">        &#123;name: <span class="string">'三门峡'</span>, value: 53&#125;,</span><br><span class="line">        &#123;name: <span class="string">'锦州'</span>, value: 54&#125;,</span><br><span class="line">        &#123;name: <span class="string">'南昌'</span>, value: 54&#125;,</span><br><span class="line">        &#123;name: <span class="string">'柳州'</span>, value: 54&#125;,</span><br><span class="line">        &#123;name: <span class="string">'三亚'</span>, value: 54&#125;,</span><br><span class="line">        &#123;name: <span class="string">'自贡'</span>, value: 56&#125;,</span><br><span class="line">        &#123;name: <span class="string">'吉林'</span>, value: 56&#125;,</span><br><span class="line">        &#123;name: <span class="string">'阳江'</span>, value: 57&#125;,</span><br><span class="line">        &#123;name: <span class="string">'泸州'</span>, value: 57&#125;,</span><br><span class="line">        &#123;name: <span class="string">'西宁'</span>, value: 57&#125;,</span><br><span class="line">        &#123;name: <span class="string">'宜宾'</span>, value: 58&#125;,</span><br><span class="line">        &#123;name: <span class="string">'呼和浩特'</span>, value: 58&#125;,</span><br><span class="line">        &#123;name: <span class="string">'成都'</span>, value: 58&#125;,</span><br><span class="line">        &#123;name: <span class="string">'大同'</span>, value: 58&#125;,</span><br><span class="line">        &#123;name: <span class="string">'镇江'</span>, value: 59&#125;,</span><br><span class="line">        &#123;name: <span class="string">'桂林'</span>, value: 59&#125;,</span><br><span class="line">        &#123;name: <span class="string">'张家界'</span>, value: 59&#125;,</span><br><span class="line">        &#123;name: <span class="string">'宜兴'</span>, value: 59&#125;,</span><br><span class="line">        &#123;name: <span class="string">'北海'</span>, value: 60&#125;,</span><br><span class="line">        &#123;name: <span class="string">'西安'</span>, value: 61&#125;,</span><br><span class="line">        &#123;name: <span class="string">'金坛'</span>, value: 62&#125;,</span><br><span class="line">        &#123;name: <span class="string">'东营'</span>, value: 62&#125;,</span><br><span class="line">        &#123;name: <span class="string">'牡丹江'</span>, value: 63&#125;,</span><br><span class="line">        &#123;name: <span class="string">'遵义'</span>, value: 63&#125;,</span><br><span class="line">        &#123;name: <span class="string">'绍兴'</span>, value: 63&#125;,</span><br><span class="line">        &#123;name: <span class="string">'扬州'</span>, value: 64&#125;,</span><br><span class="line">        &#123;name: <span class="string">'常州'</span>, value: 64&#125;,</span><br><span class="line">        &#123;name: <span class="string">'潍坊'</span>, value: 65&#125;,</span><br><span class="line">        &#123;name: <span class="string">'重庆'</span>, value: 66&#125;,</span><br><span class="line">        &#123;name: <span class="string">'台州'</span>, value: 67&#125;,</span><br><span class="line">        &#123;name: <span class="string">'南京'</span>, value: 67&#125;,</span><br><span class="line">        &#123;name: <span class="string">'滨州'</span>, value: 70&#125;,</span><br><span class="line">        &#123;name: <span class="string">'贵阳'</span>, value: 71&#125;,</span><br><span class="line">        &#123;name: <span class="string">'无锡'</span>, value: 71&#125;,</span><br><span class="line">        &#123;name: <span class="string">'本溪'</span>, value: 71&#125;,</span><br><span class="line">        &#123;name: <span class="string">'克拉玛依'</span>, value: 72&#125;,</span><br><span class="line">        &#123;name: <span class="string">'渭南'</span>, value: 72&#125;,</span><br><span class="line">        &#123;name: <span class="string">'马鞍山'</span>, value: 72&#125;,</span><br><span class="line">        &#123;name: <span class="string">'宝鸡'</span>, value: 72&#125;,</span><br><span class="line">        &#123;name: <span class="string">'焦作'</span>, value: 75&#125;,</span><br><span class="line">        &#123;name: <span class="string">'句容'</span>, value: 75&#125;,</span><br><span class="line">        &#123;name: <span class="string">'北京'</span>, value: 79&#125;,</span><br><span class="line">        &#123;name: <span class="string">'徐州'</span>, value: 79&#125;,</span><br><span class="line">        &#123;name: <span class="string">'衡水'</span>, value: 80&#125;,</span><br><span class="line">        &#123;name: <span class="string">'包头'</span>, value: 80&#125;,</span><br><span class="line">        &#123;name: <span class="string">'绵阳'</span>, value: 80&#125;,</span><br><span class="line">        &#123;name: <span class="string">'乌鲁木齐'</span>, value: 84&#125;,</span><br><span class="line">        &#123;name: <span class="string">'枣庄'</span>, value: 84&#125;,</span><br><span class="line">        &#123;name: <span class="string">'杭州'</span>, value: 84&#125;,</span><br><span class="line">        &#123;name: <span class="string">'淄博'</span>, value: 85&#125;,</span><br><span class="line">        &#123;name: <span class="string">'鞍山'</span>, value: 86&#125;,</span><br><span class="line">        &#123;name: <span class="string">'溧阳'</span>, value: 86&#125;,</span><br><span class="line">        &#123;name: <span class="string">'库尔勒'</span>, value: 86&#125;,</span><br><span class="line">        &#123;name: <span class="string">'安阳'</span>, value: 90&#125;,</span><br><span class="line">        &#123;name: <span class="string">'开封'</span>, value: 90&#125;,</span><br><span class="line">        &#123;name: <span class="string">'济南'</span>, value: 92&#125;,</span><br><span class="line">        &#123;name: <span class="string">'德阳'</span>, value: 93&#125;,</span><br><span class="line">        &#123;name: <span class="string">'温州'</span>, value: 95&#125;,</span><br><span class="line">        &#123;name: <span class="string">'九江'</span>, value: 96&#125;,</span><br><span class="line">        &#123;name: <span class="string">'邯郸'</span>, value: 98&#125;,</span><br><span class="line">        &#123;name: <span class="string">'临安'</span>, value: 99&#125;,</span><br><span class="line">        &#123;name: <span class="string">'兰州'</span>, value: 99&#125;,</span><br><span class="line">        &#123;name: <span class="string">'沧州'</span>, value: 100&#125;,</span><br><span class="line">        &#123;name: <span class="string">'临沂'</span>, value: 103&#125;,</span><br><span class="line">        &#123;name: <span class="string">'南充'</span>, value: 104&#125;,</span><br><span class="line">        &#123;name: <span class="string">'天津'</span>, value: 105&#125;,</span><br><span class="line">        &#123;name: <span class="string">'富阳'</span>, value: 106&#125;,</span><br><span class="line">        &#123;name: <span class="string">'泰安'</span>, value: 112&#125;,</span><br><span class="line">        &#123;name: <span class="string">'诸暨'</span>, value: 112&#125;,</span><br><span class="line">        &#123;name: <span class="string">'郑州'</span>, value: 113&#125;,</span><br><span class="line">        &#123;name: <span class="string">'哈尔滨'</span>, value: 114&#125;,</span><br><span class="line">        &#123;name: <span class="string">'聊城'</span>, value: 116&#125;,</span><br><span class="line">        &#123;name: <span class="string">'芜湖'</span>, value: 117&#125;,</span><br><span class="line">        &#123;name: <span class="string">'唐山'</span>, value: 119&#125;,</span><br><span class="line">        &#123;name: <span class="string">'平顶山'</span>, value: 119&#125;,</span><br><span class="line">        &#123;name: <span class="string">'邢台'</span>, value: 119&#125;,</span><br><span class="line">        &#123;name: <span class="string">'德州'</span>, value: 120&#125;,</span><br><span class="line">        &#123;name: <span class="string">'济宁'</span>, value: 120&#125;,</span><br><span class="line">        &#123;name: <span class="string">'荆州'</span>, value: 127&#125;,</span><br><span class="line">        &#123;name: <span class="string">'宜昌'</span>, value: 130&#125;,</span><br><span class="line">        &#123;name: <span class="string">'义乌'</span>, value: 132&#125;,</span><br><span class="line">        &#123;name: <span class="string">'丽水'</span>, value: 133&#125;,</span><br><span class="line">        &#123;name: <span class="string">'洛阳'</span>, value: 134&#125;,</span><br><span class="line">        &#123;name: <span class="string">'秦皇岛'</span>, value: 136&#125;,</span><br><span class="line">        &#123;name: <span class="string">'株洲'</span>, value: 143&#125;,</span><br><span class="line">        &#123;name: <span class="string">'石家庄'</span>, value: 147&#125;,</span><br><span class="line">        &#123;name: <span class="string">'莱芜'</span>, value: 148&#125;,</span><br><span class="line">        &#123;name: <span class="string">'常德'</span>, value: 152&#125;,</span><br><span class="line">        &#123;name: <span class="string">'保定'</span>, value: 153&#125;,</span><br><span class="line">        &#123;name: <span class="string">'湘潭'</span>, value: 154&#125;,</span><br><span class="line">        &#123;name: <span class="string">'金华'</span>, value: 157&#125;,</span><br><span class="line">        &#123;name: <span class="string">'岳阳'</span>, value: 169&#125;,</span><br><span class="line">        &#123;name: <span class="string">'长沙'</span>, value: 175&#125;,</span><br><span class="line">        &#123;name: <span class="string">'衢州'</span>, value: 177&#125;,</span><br><span class="line">        &#123;name: <span class="string">'廊坊'</span>, value: 193&#125;,</span><br><span class="line">        &#123;name: <span class="string">'菏泽'</span>, value: 194&#125;,</span><br><span class="line">        &#123;name: <span class="string">'合肥'</span>, value: 229&#125;,</span><br><span class="line">        &#123;name: <span class="string">'武汉'</span>, value: 273&#125;,</span><br><span class="line">        &#123;name: <span class="string">'大庆'</span>, value: 279&#125;</span><br><span class="line">    ];</span><br><span class="line">    var geoCoordMap = &#123;</span><br><span class="line">        <span class="string">'海门'</span>:[121.15,31.89],</span><br><span class="line">        <span class="string">'鄂尔多斯'</span>:[109.781327,39.608266],</span><br><span class="line">        <span class="string">'招远'</span>:[120.38,37.35],</span><br><span class="line">        <span class="string">'舟山'</span>:[122.207216,29.985295],</span><br><span class="line">        <span class="string">'齐齐哈尔'</span>:[123.97,47.33],</span><br><span class="line">        <span class="string">'盐城'</span>:[120.13,33.38],</span><br><span class="line">        <span class="string">'赤峰'</span>:[118.87,42.28],</span><br><span class="line">        <span class="string">'青岛'</span>:[120.33,36.07],</span><br><span class="line">        <span class="string">'乳山'</span>:[121.52,36.89],</span><br><span class="line">        <span class="string">'金昌'</span>:[102.188043,38.520089],</span><br><span class="line">        <span class="string">'泉州'</span>:[118.58,24.93],</span><br><span class="line">        <span class="string">'莱西'</span>:[120.53,36.86],</span><br><span class="line">        <span class="string">'日照'</span>:[119.46,35.42],</span><br><span class="line">        <span class="string">'胶南'</span>:[119.97,35.88],</span><br><span class="line">        <span class="string">'南通'</span>:[121.05,32.08],</span><br><span class="line">        <span class="string">'拉萨'</span>:[91.11,29.97],</span><br><span class="line">        <span class="string">'云浮'</span>:[112.02,22.93],</span><br><span class="line">        <span class="string">'梅州'</span>:[116.1,24.55],</span><br><span class="line">        <span class="string">'文登'</span>:[122.05,37.2],</span><br><span class="line">        <span class="string">'上海'</span>:[121.48,31.22],</span><br><span class="line">        <span class="string">'攀枝花'</span>:[101.718637,26.582347],</span><br><span class="line">        <span class="string">'威海'</span>:[122.1,37.5],</span><br><span class="line">        <span class="string">'承德'</span>:[117.93,40.97],</span><br><span class="line">        <span class="string">'厦门'</span>:[118.1,24.46],</span><br><span class="line">        <span class="string">'汕尾'</span>:[115.375279,22.786211],</span><br><span class="line">        <span class="string">'潮州'</span>:[116.63,23.68],</span><br><span class="line">        <span class="string">'丹东'</span>:[124.37,40.13],</span><br><span class="line">        <span class="string">'太仓'</span>:[121.1,31.45],</span><br><span class="line">        <span class="string">'曲靖'</span>:[103.79,25.51],</span><br><span class="line">        <span class="string">'烟台'</span>:[121.39,37.52],</span><br><span class="line">        <span class="string">'福州'</span>:[119.3,26.08],</span><br><span class="line">        <span class="string">'瓦房店'</span>:[121.979603,39.627114],</span><br><span class="line">        <span class="string">'即墨'</span>:[120.45,36.38],</span><br><span class="line">        <span class="string">'抚顺'</span>:[123.97,41.97],</span><br><span class="line">        <span class="string">'玉溪'</span>:[102.52,24.35],</span><br><span class="line">        <span class="string">'张家口'</span>:[114.87,40.82],</span><br><span class="line">        <span class="string">'阳泉'</span>:[113.57,37.85],</span><br><span class="line">        <span class="string">'莱州'</span>:[119.942327,37.177017],</span><br><span class="line">        <span class="string">'湖州'</span>:[120.1,30.86],</span><br><span class="line">        <span class="string">'汕头'</span>:[116.69,23.39],</span><br><span class="line">        <span class="string">'昆山'</span>:[120.95,31.39],</span><br><span class="line">        <span class="string">'宁波'</span>:[121.56,29.86],</span><br><span class="line">        <span class="string">'湛江'</span>:[110.359377,21.270708],</span><br><span class="line">        <span class="string">'揭阳'</span>:[116.35,23.55],</span><br><span class="line">        <span class="string">'荣成'</span>:[122.41,37.16],</span><br><span class="line">        <span class="string">'连云港'</span>:[119.16,34.59],</span><br><span class="line">        <span class="string">'葫芦岛'</span>:[120.836932,40.711052],</span><br><span class="line">        <span class="string">'常熟'</span>:[120.74,31.64],</span><br><span class="line">        <span class="string">'东莞'</span>:[113.75,23.04],</span><br><span class="line">        <span class="string">'河源'</span>:[114.68,23.73],</span><br><span class="line">        <span class="string">'淮安'</span>:[119.15,33.5],</span><br><span class="line">        <span class="string">'泰州'</span>:[119.9,32.49],</span><br><span class="line">        <span class="string">'南宁'</span>:[108.33,22.84],</span><br><span class="line">        <span class="string">'营口'</span>:[122.18,40.65],</span><br><span class="line">        <span class="string">'惠州'</span>:[114.4,23.09],</span><br><span class="line">        <span class="string">'江阴'</span>:[120.26,31.91],</span><br><span class="line">        <span class="string">'蓬莱'</span>:[120.75,37.8],</span><br><span class="line">        <span class="string">'韶关'</span>:[113.62,24.84],</span><br><span class="line">        <span class="string">'嘉峪关'</span>:[98.289152,39.77313],</span><br><span class="line">        <span class="string">'广州'</span>:[113.23,23.16],</span><br><span class="line">        <span class="string">'延安'</span>:[109.47,36.6],</span><br><span class="line">        <span class="string">'太原'</span>:[112.53,37.87],</span><br><span class="line">        <span class="string">'清远'</span>:[113.01,23.7],</span><br><span class="line">        <span class="string">'中山'</span>:[113.38,22.52],</span><br><span class="line">        <span class="string">'昆明'</span>:[102.73,25.04],</span><br><span class="line">        <span class="string">'寿光'</span>:[118.73,36.86],</span><br><span class="line">        <span class="string">'盘锦'</span>:[122.070714,41.119997],</span><br><span class="line">        <span class="string">'长治'</span>:[113.08,36.18],</span><br><span class="line">        <span class="string">'深圳'</span>:[114.07,22.62],</span><br><span class="line">        <span class="string">'珠海'</span>:[113.52,22.3],</span><br><span class="line">        <span class="string">'宿迁'</span>:[118.3,33.96],</span><br><span class="line">        <span class="string">'咸阳'</span>:[108.72,34.36],</span><br><span class="line">        <span class="string">'铜川'</span>:[109.11,35.09],</span><br><span class="line">        <span class="string">'平度'</span>:[119.97,36.77],</span><br><span class="line">        <span class="string">'佛山'</span>:[113.11,23.05],</span><br><span class="line">        <span class="string">'海口'</span>:[110.35,20.02],</span><br><span class="line">        <span class="string">'江门'</span>:[113.06,22.61],</span><br><span class="line">        <span class="string">'章丘'</span>:[117.53,36.72],</span><br><span class="line">        <span class="string">'肇庆'</span>:[112.44,23.05],</span><br><span class="line">        <span class="string">'大连'</span>:[121.62,38.92],</span><br><span class="line">        <span class="string">'临汾'</span>:[111.5,36.08],</span><br><span class="line">        <span class="string">'吴江'</span>:[120.63,31.16],</span><br><span class="line">        <span class="string">'石嘴山'</span>:[106.39,39.04],</span><br><span class="line">        <span class="string">'沈阳'</span>:[123.38,41.8],</span><br><span class="line">        <span class="string">'苏州'</span>:[120.62,31.32],</span><br><span class="line">        <span class="string">'茂名'</span>:[110.88,21.68],</span><br><span class="line">        <span class="string">'嘉兴'</span>:[120.76,30.77],</span><br><span class="line">        <span class="string">'长春'</span>:[125.35,43.88],</span><br><span class="line">        <span class="string">'胶州'</span>:[120.03336,36.264622],</span><br><span class="line">        <span class="string">'银川'</span>:[106.27,38.47],</span><br><span class="line">        <span class="string">'张家港'</span>:[120.555821,31.875428],</span><br><span class="line">        <span class="string">'三门峡'</span>:[111.19,34.76],</span><br><span class="line">        <span class="string">'锦州'</span>:[121.15,41.13],</span><br><span class="line">        <span class="string">'南昌'</span>:[115.89,28.68],</span><br><span class="line">        <span class="string">'柳州'</span>:[109.4,24.33],</span><br><span class="line">        <span class="string">'三亚'</span>:[109.511909,18.252847],</span><br><span class="line">        <span class="string">'自贡'</span>:[104.778442,29.33903],</span><br><span class="line">        <span class="string">'吉林'</span>:[126.57,43.87],</span><br><span class="line">        <span class="string">'阳江'</span>:[111.95,21.85],</span><br><span class="line">        <span class="string">'泸州'</span>:[105.39,28.91],</span><br><span class="line">        <span class="string">'西宁'</span>:[101.74,36.56],</span><br><span class="line">        <span class="string">'宜宾'</span>:[104.56,29.77],</span><br><span class="line">        <span class="string">'呼和浩特'</span>:[111.65,40.82],</span><br><span class="line">        <span class="string">'成都'</span>:[104.06,30.67],</span><br><span class="line">        <span class="string">'大同'</span>:[113.3,40.12],</span><br><span class="line">        <span class="string">'镇江'</span>:[119.44,32.2],</span><br><span class="line">        <span class="string">'桂林'</span>:[110.28,25.29],</span><br><span class="line">        <span class="string">'张家界'</span>:[110.479191,29.117096],</span><br><span class="line">        <span class="string">'宜兴'</span>:[119.82,31.36],</span><br><span class="line">        <span class="string">'北海'</span>:[109.12,21.49],</span><br><span class="line">        <span class="string">'西安'</span>:[108.95,34.27],</span><br><span class="line">        <span class="string">'金坛'</span>:[119.56,31.74],</span><br><span class="line">        <span class="string">'东营'</span>:[118.49,37.46],</span><br><span class="line">        <span class="string">'牡丹江'</span>:[129.58,44.6],</span><br><span class="line">        <span class="string">'遵义'</span>:[106.9,27.7],</span><br><span class="line">        <span class="string">'绍兴'</span>:[120.58,30.01],</span><br><span class="line">        <span class="string">'扬州'</span>:[119.42,32.39],</span><br><span class="line">        <span class="string">'常州'</span>:[119.95,31.79],</span><br><span class="line">        <span class="string">'潍坊'</span>:[119.1,36.62],</span><br><span class="line">        <span class="string">'重庆'</span>:[106.54,29.59],</span><br><span class="line">        <span class="string">'台州'</span>:[121.420757,28.656386],</span><br><span class="line">        <span class="string">'南京'</span>:[118.78,32.04],</span><br><span class="line">        <span class="string">'滨州'</span>:[118.03,37.36],</span><br><span class="line">        <span class="string">'贵阳'</span>:[106.71,26.57],</span><br><span class="line">        <span class="string">'无锡'</span>:[120.29,31.59],</span><br><span class="line">        <span class="string">'本溪'</span>:[123.73,41.3],</span><br><span class="line">        <span class="string">'克拉玛依'</span>:[84.77,45.59],</span><br><span class="line">        <span class="string">'渭南'</span>:[109.5,34.52],</span><br><span class="line">        <span class="string">'马鞍山'</span>:[118.48,31.56],</span><br><span class="line">        <span class="string">'宝鸡'</span>:[107.15,34.38],</span><br><span class="line">        <span class="string">'焦作'</span>:[113.21,35.24],</span><br><span class="line">        <span class="string">'句容'</span>:[119.16,31.95],</span><br><span class="line">        <span class="string">'北京'</span>:[116.46,39.92],</span><br><span class="line">        <span class="string">'徐州'</span>:[117.2,34.26],</span><br><span class="line">        <span class="string">'衡水'</span>:[115.72,37.72],</span><br><span class="line">        <span class="string">'包头'</span>:[110,40.58],</span><br><span class="line">        <span class="string">'绵阳'</span>:[104.73,31.48],</span><br><span class="line">        <span class="string">'乌鲁木齐'</span>:[87.68,43.77],</span><br><span class="line">        <span class="string">'枣庄'</span>:[117.57,34.86],</span><br><span class="line">        <span class="string">'杭州'</span>:[120.19,30.26],</span><br><span class="line">        <span class="string">'淄博'</span>:[118.05,36.78],</span><br><span class="line">        <span class="string">'鞍山'</span>:[122.85,41.12],</span><br><span class="line">        <span class="string">'溧阳'</span>:[119.48,31.43],</span><br><span class="line">        <span class="string">'库尔勒'</span>:[86.06,41.68],</span><br><span class="line">        <span class="string">'安阳'</span>:[114.35,36.1],</span><br><span class="line">        <span class="string">'开封'</span>:[114.35,34.79],</span><br><span class="line">        <span class="string">'济南'</span>:[117,36.65],</span><br><span class="line">        <span class="string">'德阳'</span>:[104.37,31.13],</span><br><span class="line">        <span class="string">'温州'</span>:[120.65,28.01],</span><br><span class="line">        <span class="string">'九江'</span>:[115.97,29.71],</span><br><span class="line">        <span class="string">'邯郸'</span>:[114.47,36.6],</span><br><span class="line">        <span class="string">'临安'</span>:[119.72,30.23],</span><br><span class="line">        <span class="string">'兰州'</span>:[103.73,36.03],</span><br><span class="line">        <span class="string">'沧州'</span>:[116.83,38.33],</span><br><span class="line">        <span class="string">'临沂'</span>:[118.35,35.05],</span><br><span class="line">        <span class="string">'南充'</span>:[106.110698,30.837793],</span><br><span class="line">        <span class="string">'天津'</span>:[117.2,39.13],</span><br><span class="line">        <span class="string">'富阳'</span>:[119.95,30.07],</span><br><span class="line">        <span class="string">'泰安'</span>:[117.13,36.18],</span><br><span class="line">        <span class="string">'诸暨'</span>:[120.23,29.71],</span><br><span class="line">        <span class="string">'郑州'</span>:[113.65,34.76],</span><br><span class="line">        <span class="string">'哈尔滨'</span>:[126.63,45.75],</span><br><span class="line">        <span class="string">'聊城'</span>:[115.97,36.45],</span><br><span class="line">        <span class="string">'芜湖'</span>:[118.38,31.33],</span><br><span class="line">        <span class="string">'唐山'</span>:[118.02,39.63],</span><br><span class="line">        <span class="string">'平顶山'</span>:[113.29,33.75],</span><br><span class="line">        <span class="string">'邢台'</span>:[114.48,37.05],</span><br><span class="line">        <span class="string">'德州'</span>:[116.29,37.45],</span><br><span class="line">        <span class="string">'济宁'</span>:[116.59,35.38],</span><br><span class="line">        <span class="string">'荆州'</span>:[112.239741,30.335165],</span><br><span class="line">        <span class="string">'宜昌'</span>:[111.3,30.7],</span><br><span class="line">        <span class="string">'义乌'</span>:[120.06,29.32],</span><br><span class="line">        <span class="string">'丽水'</span>:[119.92,28.45],</span><br><span class="line">        <span class="string">'洛阳'</span>:[112.44,34.7],</span><br><span class="line">        <span class="string">'秦皇岛'</span>:[119.57,39.95],</span><br><span class="line">        <span class="string">'株洲'</span>:[113.16,27.83],</span><br><span class="line">        <span class="string">'石家庄'</span>:[114.48,38.03],</span><br><span class="line">        <span class="string">'莱芜'</span>:[117.67,36.19],</span><br><span class="line">        <span class="string">'常德'</span>:[111.69,29.05],</span><br><span class="line">        <span class="string">'保定'</span>:[115.48,38.85],</span><br><span class="line">        <span class="string">'湘潭'</span>:[112.91,27.87],</span><br><span class="line">        <span class="string">'金华'</span>:[119.64,29.12],</span><br><span class="line">        <span class="string">'岳阳'</span>:[113.09,29.37],</span><br><span class="line">        <span class="string">'长沙'</span>:[113,28.21],</span><br><span class="line">        <span class="string">'衢州'</span>:[118.88,28.97],</span><br><span class="line">        <span class="string">'廊坊'</span>:[116.7,39.53],</span><br><span class="line">        <span class="string">'菏泽'</span>:[115.480656,35.23375],</span><br><span class="line">        <span class="string">'合肥'</span>:[117.27,31.86],</span><br><span class="line">        <span class="string">'武汉'</span>:[114.31,30.52],</span><br><span class="line">        <span class="string">'大庆'</span>:[125.03,46.58]</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    var convertData = <span class="keyword">function</span> (data) &#123;</span><br><span class="line">        var res = [];</span><br><span class="line">        <span class="keyword">for</span> (var i = 0; i &lt; data.length; i++) &#123;</span><br><span class="line">            var geoCoord = geoCoordMap[data[i].name];</span><br><span class="line">            <span class="keyword">if</span> (geoCoord) &#123;</span><br><span class="line">                res.push(&#123;</span><br><span class="line">                    name: data[i].name,</span><br><span class="line">                    value: geoCoord.concat(data[i].value)</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> res;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    option = &#123;</span><br><span class="line">        title: &#123;</span><br><span class="line">            text: <span class="string">'全国主要城市空气质量 - 百度地图'</span>,</span><br><span class="line">            subtext: <span class="string">'data from PM25.in'</span>,</span><br><span class="line">            sublink: <span class="string">'http://www.pm25.in'</span>,</span><br><span class="line">            left: <span class="string">'center'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        tooltip : &#123;</span><br><span class="line">            trigger: <span class="string">'item'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        bmap: &#123;</span><br><span class="line">            center: [104.114129, 37.550339],</span><br><span class="line">            zoom: 5,</span><br><span class="line">            roam: <span class="literal">true</span>,</span><br><span class="line">            mapStyle: &#123;</span><br><span class="line">                styleJson: [&#123;</span><br><span class="line">                    <span class="string">'featureType'</span>: <span class="string">'water'</span>,</span><br><span class="line">                    <span class="string">'elementType'</span>: <span class="string">'all'</span>,</span><br><span class="line">                    <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                        <span class="string">'color'</span>: <span class="string">'#d1d1d1'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">'featureType'</span>: <span class="string">'land'</span>,</span><br><span class="line">                    <span class="string">'elementType'</span>: <span class="string">'all'</span>,</span><br><span class="line">                    <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                        <span class="string">'color'</span>: <span class="string">'#f3f3f3'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">'featureType'</span>: <span class="string">'railway'</span>,</span><br><span class="line">                    <span class="string">'elementType'</span>: <span class="string">'all'</span>,</span><br><span class="line">                    <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                        <span class="string">'visibility'</span>: <span class="string">'off'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">'featureType'</span>: <span class="string">'highway'</span>,</span><br><span class="line">                    <span class="string">'elementType'</span>: <span class="string">'all'</span>,</span><br><span class="line">                    <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                        <span class="string">'color'</span>: <span class="string">'#fdfdfd'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">'featureType'</span>: <span class="string">'highway'</span>,</span><br><span class="line">                    <span class="string">'elementType'</span>: <span class="string">'labels'</span>,</span><br><span class="line">                    <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                        <span class="string">'visibility'</span>: <span class="string">'off'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">'featureType'</span>: <span class="string">'arterial'</span>,</span><br><span class="line">                    <span class="string">'elementType'</span>: <span class="string">'geometry'</span>,</span><br><span class="line">                    <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                        <span class="string">'color'</span>: <span class="string">'#fefefe'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">'featureType'</span>: <span class="string">'arterial'</span>,</span><br><span class="line">                    <span class="string">'elementType'</span>: <span class="string">'geometry.fill'</span>,</span><br><span class="line">                    <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                        <span class="string">'color'</span>: <span class="string">'#fefefe'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">'featureType'</span>: <span class="string">'poi'</span>,</span><br><span class="line">                    <span class="string">'elementType'</span>: <span class="string">'all'</span>,</span><br><span class="line">                    <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                        <span class="string">'visibility'</span>: <span class="string">'off'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">'featureType'</span>: <span class="string">'green'</span>,</span><br><span class="line">                    <span class="string">'elementType'</span>: <span class="string">'all'</span>,</span><br><span class="line">                    <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                        <span class="string">'visibility'</span>: <span class="string">'off'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">'featureType'</span>: <span class="string">'subway'</span>,</span><br><span class="line">                    <span class="string">'elementType'</span>: <span class="string">'all'</span>,</span><br><span class="line">                    <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                        <span class="string">'visibility'</span>: <span class="string">'off'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">'featureType'</span>: <span class="string">'manmade'</span>,</span><br><span class="line">                    <span class="string">'elementType'</span>: <span class="string">'all'</span>,</span><br><span class="line">                    <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                        <span class="string">'color'</span>: <span class="string">'#d1d1d1'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">'featureType'</span>: <span class="string">'local'</span>,</span><br><span class="line">                    <span class="string">'elementType'</span>: <span class="string">'all'</span>,</span><br><span class="line">                    <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                        <span class="string">'color'</span>: <span class="string">'#d1d1d1'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">'featureType'</span>: <span class="string">'arterial'</span>,</span><br><span class="line">                    <span class="string">'elementType'</span>: <span class="string">'labels'</span>,</span><br><span class="line">                    <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                        <span class="string">'visibility'</span>: <span class="string">'off'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">'featureType'</span>: <span class="string">'boundary'</span>,</span><br><span class="line">                    <span class="string">'elementType'</span>: <span class="string">'all'</span>,</span><br><span class="line">                    <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                        <span class="string">'color'</span>: <span class="string">'#fefefe'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">'featureType'</span>: <span class="string">'building'</span>,</span><br><span class="line">                    <span class="string">'elementType'</span>: <span class="string">'all'</span>,</span><br><span class="line">                    <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                        <span class="string">'color'</span>: <span class="string">'#d1d1d1'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">'featureType'</span>: <span class="string">'label'</span>,</span><br><span class="line">                    <span class="string">'elementType'</span>: <span class="string">'labels.text.fill'</span>,</span><br><span class="line">                    <span class="string">'stylers'</span>: &#123;</span><br><span class="line">                        <span class="string">'color'</span>: <span class="string">'#999999'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        series : [</span><br><span class="line">            &#123;</span><br><span class="line">                name: <span class="string">'pm2.5'</span>,</span><br><span class="line">                <span class="built_in">type</span>: <span class="string">'scatter'</span>,</span><br><span class="line">                coordinateSystem: <span class="string">'bmap'</span>,</span><br><span class="line">                data: convertData(data),</span><br><span class="line">                symbolSize: <span class="keyword">function</span> (val) &#123;</span><br><span class="line">                    <span class="built_in">return</span> val[2] / 10;</span><br><span class="line">                &#125;,</span><br><span class="line">                label: &#123;</span><br><span class="line">                    normal: &#123;</span><br><span class="line">                        formatter: <span class="string">'&#123;b&#125;'</span>,</span><br><span class="line">                        position: <span class="string">'right'</span>,</span><br><span class="line">                        show: <span class="literal">false</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    emphasis: &#123;</span><br><span class="line">                        show: <span class="literal">true</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                itemStyle: &#123;</span><br><span class="line">                    normal: &#123;</span><br><span class="line">                        color: <span class="string">'purple'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                name: <span class="string">'Top 5'</span>,</span><br><span class="line">                <span class="built_in">type</span>: <span class="string">'effectScatter'</span>,</span><br><span class="line">                coordinateSystem: <span class="string">'bmap'</span>,</span><br><span class="line">                data: convertData(data.sort(<span class="keyword">function</span> (a, b) &#123;</span><br><span class="line">                    <span class="built_in">return</span> b.value - a.value;</span><br><span class="line">                &#125;).slice(0, 6)),</span><br><span class="line">                symbolSize: <span class="keyword">function</span> (val) &#123;</span><br><span class="line">                    <span class="built_in">return</span> val[2] / 10;</span><br><span class="line">                &#125;,</span><br><span class="line">                showEffectOn: <span class="string">'render'</span>,</span><br><span class="line">                rippleEffect: &#123;</span><br><span class="line">                    brushType: <span class="string">'stroke'</span></span><br><span class="line">                &#125;,</span><br><span class="line">                hoverAnimation: <span class="literal">true</span>,</span><br><span class="line">                label: &#123;</span><br><span class="line">                    normal: &#123;</span><br><span class="line">                        formatter: <span class="string">'&#123;b&#125;'</span>,</span><br><span class="line">                        position: <span class="string">'right'</span>,</span><br><span class="line">                        show: <span class="literal">true</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                itemStyle: &#123;</span><br><span class="line">                    normal: &#123;</span><br><span class="line">                        color: <span class="string">'purple'</span>,</span><br><span class="line">                        shadowBlur: 10,</span><br><span class="line">                        shadowColor: <span class="string">'#333'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                zlevel: 1</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;;</span><br><span class="line">    myChart.setOption(option);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>今天就写到这里了，欢迎大家交流讨论，指错。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h1&gt;&lt;p&gt;本文介绍的是将百度地图和echarts3版本进行结合使用，首先你需要有百度的AK，没有的话去百度地图开放平台&lt;a href=
      
    
    </summary>
    
      <category term="echarts3" scheme="http://zhouyanwei.cn/categories/echarts3/"/>
    
    
      <category term="百度地图" scheme="http://zhouyanwei.cn/tags/%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="echarts3" scheme="http://zhouyanwei.cn/tags/echarts3/"/>
    
  </entry>
  
  <entry>
    <title>css3选择器</title>
    <link href="http://zhouyanwei.cn/2017/07/31/nth/"/>
    <id>http://zhouyanwei.cn/2017/07/31/nth/</id>
    <published>2017-07-30T16:00:00.000Z</published>
    <updated>2018-08-07T02:23:03.038Z</updated>
    
    <content type="html"><![CDATA[<h1 id="磨叨两句"><a href="#磨叨两句" class="headerlink" title="磨叨两句"></a>磨叨两句</h1><p>上来先磨叨两句，用这个选择器已经很久了，但是一直用的都是:nth-of-type这个，:nth-child只是记得，几乎没有用过，最开始知道这两个选择器的时候，肯定两个都用过，但最后一直就用:nth-of-type了，原因我也忘记了，前几天用到:nth-of-type这个选择器，突然忘了他和:nth-child的具体区别是什么了，所以在这里，在回顾一下。</p><h1 id="child和of-type-家族"><a href="#child和of-type-家族" class="headerlink" title="child和of-type 家族"></a>child和of-type 家族</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">child 家族</span><br><span class="line">:first-child        p:first-child       选择属于父元素的第一个子元素的每个 &lt;p&gt; 元素。</span><br><span class="line">:nth-child(n)       p:nth-child(2)      选择属于其父元素的第二个子元素的每个 &lt;p&gt; 元素。</span><br><span class="line">:nth-last-child(n)  p:nth-last-child(2) 同上，从最后一个子元素开始计数。</span><br><span class="line">:last-child         p:last-child        选择属于其父元素最后一个子元素每个 &lt;p&gt; 元素。</span><br><span class="line">:only-child         p:only-child        选择属于其父元素的唯一子元素的每个 &lt;p&gt; 元素。</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">of-type 家族</span><br><span class="line">:first-of-type          p:first-of-type         选择属于其父元素的首个 &lt;p&gt; 元素的每个 &lt;p&gt; 元素。</span><br><span class="line">:nth-of-type(n)         p:nth-of-type(2)        选择属于其父元素第二个 &lt;p&gt; 元素的每个 &lt;p&gt; 元素。</span><br><span class="line">:nth-last-of-type(n)p:nth-last-of-type(2)   同上，但是从最后一个子元素开始计数。</span><br><span class="line">:last-of-type           p:last-of-type          选择属于其父元素的最后 &lt;p&gt; 元素的每个 &lt;p&gt; 元素。</span><br><span class="line">:only-of-type           p:only-of-type          选择属于其父元素唯一的 &lt;p&gt; 元素的每个 &lt;p&gt; 元素。</span><br></pre></td></tr></table></figure><h1 id="nth-of-type-n-和-nth-child-n-对比"><a href="#nth-of-type-n-和-nth-child-n-对比" class="headerlink" title=":nth-of-type(n)和:nth-child(n)对比"></a>:nth-of-type(n)和:nth-child(n)对比</h1><p>这两个家族别的选择器还好说，就:nth-of-type(n)和:nth-child(n)他们俩用的时候还会有一些问题，下面用具体例子来体会一下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">p:nth-child(2)&#123;</span><br><span class="line">    background: red;</span><br><span class="line">&#125;</span><br><span class="line">p:nth-of-type(2)&#123;</span><br><span class="line">    background: red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;p&gt;我是p1&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;我是p2&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>此时分别使用这两个css选择器进行渲染时，页面显示的效果是一样的，look<br><img src="/images/2017-07-31/look1.jpg" alt=""></p><p>然后我们稍稍改一下再看一下效果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">p:nth-child(2)&#123;</span><br><span class="line">    background: red;</span><br><span class="line">&#125;</span><br><span class="line">p:nth-of-type(2)&#123;</span><br><span class="line">    background: red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;div&gt;我是div1&lt;/div&gt;</span><br><span class="line">    &lt;p&gt;我是p1&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;我是p2&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p><img src="/images/2017-07-31/look2.png" alt=""><br>这一下就不友好了，字面理解一下啊，child儿子嘛，第二个儿子，还是个p标签，正好给你变个色吧。而p:nth-of-type(2)他就会去找p标签的第二个，这样我的心里感觉才是我想要的结果<br>我们在加一个div看看啊<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">p:nth-child(2)&#123;</span><br><span class="line">    background: red;</span><br><span class="line">&#125;</span><br><span class="line">/*p:nth-of-type(2)&#123;</span><br><span class="line">    background: red;</span><br><span class="line">&#125;*/</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;div&gt;我是div1&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;我是div2&lt;/div&gt;</span><br><span class="line">    &lt;p&gt;我是p1&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;我是p2&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p><p><img src="/images/2017-07-31/look3.jpg" alt=""><br>看吧，第二个儿子，没有p标签啊，那算了吧，谁也不给上色了。</p><p>个人建议找元素，还是用:nth-of-type()，毕竟不用太费脑子，而且照的还快、准、稳。</p><p>浏览器兼容情况：所有主流浏览器均支持，除了 IE8 及更早的版本。毕竟是css3新添加的嘛。</p><p>上面详细的对比了一组，下面在简单对比一下别的</p><h1 id="p-first-child和p-first-of-type"><a href="#p-first-child和p-first-of-type" class="headerlink" title="p:first-child和p:first-of-type"></a>p:first-child和p:first-of-type</h1><p><img src="/images/2017-07-31/look4.png" alt=""></p><h1 id="p-nth-last-child-n-和p-nth-last-of-type-n"><a href="#p-nth-last-child-n-和p-nth-last-of-type-n" class="headerlink" title="p:nth-last-child(n)和p:nth-last-of-type(n)"></a>p:nth-last-child(n)和p:nth-last-of-type(n)</h1><p><img src="/images/2017-07-31/look5.png" alt=""><br><code>注意哦：last是从后往前数楼！！</code></p><h1 id="p-last-child和p-last-of-type"><a href="#p-last-child和p-last-of-type" class="headerlink" title="p:last-child和p:last-of-type"></a>p:last-child和p:last-of-type</h1><p><img src="/images/2017-07-31/look6.png" alt=""></p><h1 id="p-only-child和p-only-of-type"><a href="#p-only-child和p-only-of-type" class="headerlink" title="p:only-child和p:only-of-type"></a>p:only-child和p:only-of-type</h1><p><img src="/images/2017-07-31/look7.png" alt=""><br>因为他是only了，这里div和p都是两个所以不成立，就都不上色了。改成这样在看看，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">p:only-child&#123;background: red;&#125;</span><br><span class="line">p:only-of-type&#123;background: red;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;div&gt;我是唯一的div&lt;/div&gt;</span><br><span class="line">    &lt;p&gt;我是唯一的p&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p><img src="/images/2017-07-31/look8.png" alt=""></p><h1 id="总结一下"><a href="#总结一下" class="headerlink" title="总结一下"></a>总结一下</h1><p>是不是有点感觉了，小小的总结一下<br>child家的成员在进行选择的时候不仅要选择元素，而且还要选择当前位置对不对，only的话那就只能有p(拿p举一下例子啊)，div哥哥来了就不高兴了，就不给你显示。</p><p>of-type家的成员在进行选择的时候不管你里面有哪个哥哥弟弟p、div、span，选择器元素写好了，他就会按照当前的元素进行查找。</p><p>个人还是倾向于of-type家的。快、准、稳，哈哈，今天就到这了，忙了好久，终于有点时间了，上来晃一圈。</p><p>如有错误之处，欢迎指正。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;磨叨两句&quot;&gt;&lt;a href=&quot;#磨叨两句&quot; class=&quot;headerlink&quot; title=&quot;磨叨两句&quot;&gt;&lt;/a&gt;磨叨两句&lt;/h1&gt;&lt;p&gt;上来先磨叨两句，用这个选择器已经很久了，但是一直用的都是:nth-of-type这个，:nth-child只是记得，几乎没有
      
    
    </summary>
    
      <category term="CSS" scheme="http://zhouyanwei.cn/categories/CSS/"/>
    
    
      <category term=":nth-child" scheme="http://zhouyanwei.cn/tags/nth-child/"/>
    
      <category term=":nth-of-type" scheme="http://zhouyanwei.cn/tags/nth-of-type/"/>
    
  </entry>
  
  <entry>
    <title>css calc()</title>
    <link href="http://zhouyanwei.cn/2017/07/06/css-calc/"/>
    <id>http://zhouyanwei.cn/2017/07/06/css-calc/</id>
    <published>2017-07-05T16:00:00.000Z</published>
    <updated>2018-07-03T06:55:57.166Z</updated>
    
    <content type="html"><![CDATA[<h1 id="css-calc-介绍"><a href="#css-calc-介绍" class="headerlink" title="css calc() 介绍"></a>css calc() 介绍</h1><p>像 calc() var() 这样的，乍一看还以为是函数呢，其实他们都是属于CSS的，calc()做自适应布局还是很好用的，其实用box-sizing也是可以的，但是calc()强大到，可以用公式做计算，+、-、*、/，如果你在你点电脑打开win+r输入calc回车，你会发现，系统会自动调出计算器来。<br>其实calc()是css3的一个新功能，可以用来做响应式布局，响应式布局宽度是变化的，这样用calc()就可以实现宽度的动态加载。</p><h1 id="css-calc-语法"><a href="#css-calc-语法" class="headerlink" title="css calc() 语法"></a>css calc() 语法</h1><p>calc()语法非常简单，就像我们小时候学加 （+）、减（-）、乘（*）、除（/）一样，使用数学表达式来表示：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.ele &#123;</span><br><span class="line">  width: calc(expression);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>其中”expression”是一个表达式，用来计算长度的表达式。</p><h1 id="calc-的运算规则"><a href="#calc-的运算规则" class="headerlink" title="calc()的运算规则"></a>calc()的运算规则</h1><p>calc()使用通用的数学运算规则，但是也提供更智能的功能：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">使用“+”、“-”、“*” 和 “/”四则运算；</span><br><span class="line">1.可以使用百分比、px、em、rem等单位；</span><br><span class="line">2.可以混合使用各种单位进行计算；</span><br><span class="line">3.表达式中有“+”和“-”时，其前后必须要有空格，没有空格的写法是错误的；</span><br><span class="line">4.表达式中有“*”和“/”时，其前后可以没有空格，但建议留有空格。</span><br></pre></td></tr></table></figure></p><h1 id="calc-实战小例子"><a href="#calc-实战小例子" class="headerlink" title="calc()实战小例子"></a>calc()实战小例子</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    *&#123;</span><br><span class="line">        margin:0;</span><br><span class="line">        padding:0;</span><br><span class="line">    &#125;</span><br><span class="line">    body&#123;</span><br><span class="line">        width:100%;</span><br><span class="line">        background-color: <span class="comment">#333;</span></span><br><span class="line">    &#125;</span><br><span class="line">    div&#123;</span><br><span class="line">        width:100%;</span><br><span class="line">        height:200px;</span><br><span class="line">        padding: 20px;</span><br><span class="line">        background-color: <span class="comment">#666;</span></span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>此时就会发现div把body的身体挤破了，出现横向滚动条了，解决方法可以用 box-sizing: border-box;要是用calc()就可以这样写<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    *&#123;</span><br><span class="line">        margin:0;</span><br><span class="line">        padding:0;</span><br><span class="line">    &#125;</span><br><span class="line">    body&#123;</span><br><span class="line">        width:100%;</span><br><span class="line">        background-color: <span class="comment">#333;</span></span><br><span class="line">    &#125;</span><br><span class="line">    div&#123;</span><br><span class="line">        `width:calc(100% - 20px * 2);`</span><br><span class="line">        height:200px;</span><br><span class="line">        padding: 20px;</span><br><span class="line">        background-color: <span class="comment">#666;</span></span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p><p>这样也是可以解决的，calc()做响应式开发是很不错的。</p><h1 id="calc-响应式开发例子"><a href="#calc-响应式开发例子" class="headerlink" title="calc()响应式开发例子"></a>calc()响应式开发例子</h1><p>做响应式开啊还需要使用到上一章所说道的变量var(),这两个相结合可以很便捷的进行响应式开发，直接上代码吧。</p><p><a href="../../../../link/2017-07-06/index.html" target="_black">你也可以点击这里然后变化浏览器窗口大小进行预览</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    :root&#123;</span><br><span class="line">        --columns: 3;</span><br><span class="line">    &#125;</span><br><span class="line">    .box&#123;</span><br><span class="line">        width:80%;</span><br><span class="line">        min-width: 300px;</span><br><span class="line">        margin: auto;</span><br><span class="line">        border: 2px solid <span class="comment">#333;</span></span><br><span class="line">        overflow: hidden;</span><br><span class="line">    &#125;</span><br><span class="line">    .calc&#123;</span><br><span class="line">        width: calc(100% / var(--columns) - 10px * 2);</span><br><span class="line">        background: <span class="comment">#aaa;</span></span><br><span class="line">        margin: 10px;</span><br><span class="line">        <span class="built_in">float</span>: left;</span><br><span class="line">    &#125;</span><br><span class="line">    *&#123;</span><br><span class="line">        margin:0;</span><br><span class="line">        padding:0;</span><br><span class="line">    &#125;</span><br><span class="line">   h5&#123;</span><br><span class="line">       width:100%;</span><br><span class="line">       height:60px;</span><br><span class="line">       text-align: center;</span><br><span class="line">       line-height:60px;</span><br><span class="line">       font-size: 26px;</span><br><span class="line">       color: <span class="comment">#fff;</span></span><br><span class="line">   &#125;</span><br><span class="line">   p&#123;</span><br><span class="line">       padding-top:60px;</span><br><span class="line">       height: 140px;</span><br><span class="line">   &#125;</span><br><span class="line">    img&#123;</span><br><span class="line">        display: block;</span><br><span class="line">        margin: auto;</span><br><span class="line">    &#125;</span><br><span class="line">    @media screen and ( max-width: 992px) &#123;</span><br><span class="line">        :root&#123;</span><br><span class="line">            --columns: 2;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   @media screen and ( max-width: 768px) &#123;</span><br><span class="line">       :root&#123;</span><br><span class="line">           --columns: 1;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body style=<span class="string">"background: #666"</span>&gt;</span><br><span class="line">    &lt;div class=<span class="string">"box"</span>&gt;</span><br><span class="line">        &lt;div class=<span class="string">"calc"</span>&gt;</span><br><span class="line">            &lt;h5&gt;子鼠&lt;/h5&gt;</span><br><span class="line">            &lt;p&gt;&lt;img src=<span class="string">"img/shu.png"</span> alt=<span class="string">""</span>&gt;&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=<span class="string">"calc"</span>&gt;</span><br><span class="line">            &lt;h5&gt;丑牛&lt;/h5&gt;</span><br><span class="line">            &lt;p&gt;&lt;img src=<span class="string">"img/niu.png"</span> alt=<span class="string">""</span>&gt;&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=<span class="string">"calc"</span>&gt;</span><br><span class="line">            &lt;h5&gt;寅虎&lt;/h5&gt;</span><br><span class="line">            &lt;p&gt;&lt;img src=<span class="string">"img/hu.png"</span> alt=<span class="string">""</span>&gt;&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=<span class="string">"calc"</span>&gt;</span><br><span class="line">            &lt;h5&gt;卯兔&lt;/h5&gt;</span><br><span class="line">            &lt;p&gt;&lt;img src=<span class="string">"img/tu.png"</span> alt=<span class="string">""</span>&gt;&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=<span class="string">"calc"</span>&gt;</span><br><span class="line">            &lt;h5&gt;辰龙&lt;/h5&gt;</span><br><span class="line">            &lt;p&gt;&lt;img src=<span class="string">"img/long.png"</span> alt=<span class="string">""</span>&gt;&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=<span class="string">"calc"</span>&gt;</span><br><span class="line">            &lt;h5&gt;巳蛇&lt;/h5&gt;</span><br><span class="line">            &lt;p&gt;&lt;img src=<span class="string">"img/she.png"</span> alt=<span class="string">""</span>&gt;&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=<span class="string">"calc"</span>&gt;</span><br><span class="line">            &lt;h5&gt;午马&lt;/h5&gt;</span><br><span class="line">            &lt;p&gt;&lt;img src=<span class="string">"img/ma.png"</span> alt=<span class="string">""</span>&gt;&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=<span class="string">"calc"</span>&gt;</span><br><span class="line">            &lt;h5&gt;未羊&lt;/h5&gt;</span><br><span class="line">            &lt;p&gt;&lt;img src=<span class="string">"img/yang.png"</span> alt=<span class="string">""</span>&gt;&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=<span class="string">"calc"</span>&gt;</span><br><span class="line">            &lt;h5&gt;申猴&lt;/h5&gt;</span><br><span class="line">            &lt;p&gt;&lt;img src=<span class="string">"img/hou.png"</span> alt=<span class="string">""</span>&gt;&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=<span class="string">"calc"</span>&gt;</span><br><span class="line">            &lt;h5&gt;酉鸡&lt;/h5&gt;</span><br><span class="line">            &lt;p&gt;&lt;img src=<span class="string">"img/ji.png"</span> alt=<span class="string">""</span>&gt;&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=<span class="string">"calc"</span>&gt;</span><br><span class="line">            &lt;h5&gt;戌狗&lt;/h5&gt;</span><br><span class="line">            &lt;p&gt;&lt;img src=<span class="string">"img/gou.png"</span> alt=<span class="string">""</span>&gt;&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=<span class="string">"calc"</span>&gt;</span><br><span class="line">            &lt;h5&gt;亥猪&lt;/h5&gt;</span><br><span class="line">            &lt;p&gt;&lt;img src=<span class="string">"img/zhu.png"</span> alt=<span class="string">""</span>&gt;&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>感觉很厉害，就是变量var()对浏览器的兼容还不是很好，要是决绝了IE那就太厉害了。</p><h1 id="calc-兼容性"><a href="#calc-兼容性" class="headerlink" title="calc()兼容性"></a>calc()兼容性</h1><p><img src="/images/2017-07-06/calcjr.jpg" alt=""><br>这个的兼容性还是很好的，不考虑ie8以下的还是可以放心用的，有人说在使用的时候需要加浏览器前缀，像这样的<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.ele &#123;</span><br><span class="line">/*Firefox*/</span><br><span class="line">-moz-calc(expression);</span><br><span class="line">/*chrome safari*/</span><br><span class="line">-webkit-calc(expression);</span><br><span class="line">/*Standard */</span><br><span class="line">calc();</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p><p>我实际测试了以下，不加前缀也可以用的。</p><p>如有错误之处，欢迎指正。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;css-calc-介绍&quot;&gt;&lt;a href=&quot;#css-calc-介绍&quot; class=&quot;headerlink&quot; title=&quot;css calc() 介绍&quot;&gt;&lt;/a&gt;css calc() 介绍&lt;/h1&gt;&lt;p&gt;像 calc() var() 这样的，乍一看还以为是函数呢，
      
    
    </summary>
    
      <category term="CSS" scheme="http://zhouyanwei.cn/categories/CSS/"/>
    
    
      <category term="css calc()" scheme="http://zhouyanwei.cn/tags/css-calc/"/>
    
  </entry>
  
</feed>
